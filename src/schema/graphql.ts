/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  BigInt: number;
  DateTime: any;
  GenericScalar: any;
  JSONString: string;
  ObjectIdType: string;
};

export type AcceptDeComplianceTermsOfService = {
  readonly __typename?: 'AcceptDEComplianceTermsOfService';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptEuComplianceTermsOfService = {
  readonly __typename?: 'AcceptEUComplianceTermsOfService';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptFrComplianceTermsOfService = {
  readonly __typename?: 'AcceptFRComplianceTermsOfService';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptMerchantPolicy = {
  readonly __typename?: 'AcceptMerchantPolicy';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptMerchantPolicyInput = {
  readonly agreed: Scalars['Boolean'];
  readonly source: MerchantPolicyAgreementSource;
};

export type AcceptTermsOfService = {
  readonly __typename?: 'AcceptTermsOfService';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptTermsOfServiceInput = {
  readonly tosRegion?: InputMaybe<TermsOfServiceRegionType>;
  readonly tosVersion: Scalars['Int'];
};

export type AcceptTos = {
  readonly __typename?: 'AcceptTos';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AcceptTosInput = {
  readonly country: CountryCode;
};

export type AccountBalanceType =
  | 'CONFIRMED'
  | 'PENDING';

export type ActionRequiredOrdersCsvDownload = {
  readonly __typename?: 'ActionRequiredOrdersCsvDownload';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ActionRequiredOrdersCsvDownloadInput = {
  readonly endDate?: InputMaybe<DatetimeInput>;
  readonly filter?: InputMaybe<CsvExportFilterType>;
  readonly offset?: InputMaybe<Scalars['Int']>;
  readonly query?: InputMaybe<Scalars['String']>;
  readonly searchType?: InputMaybe<ActionRequiredSearchType>;
  readonly sort?: InputMaybe<ActionRequiredSort>;
  readonly startDate?: InputMaybe<DatetimeInput>;
  readonly wishExpressOnly?: InputMaybe<Scalars['Boolean']>;
};

export type ActionRequiredSearchType =
  | 'ORDER_ID'
  | 'PRODUCT_ID'
  | 'TRACKING_NUMBER'
  | 'TRANSACTION_ID'
  | 'USER_NAME';

export type ActionRequiredSort = {
  readonly field: ActionRequiredSortFieldType;
  readonly order: SortOrderType;
};

export type ActionRequiredSortFieldType =
  | 'ORDER_TIME'
  | 'RELEASED_TIME';

export type AdaptivePolicyAdminMutations = {
  readonly __typename?: 'AdaptivePolicyAdminMutations';
  readonly manualEnroll?: Maybe<AdaptivePolicyManualEnroll>;
  readonly manualEnrollUpload?: Maybe<AdaptivePolicyManualEnrollUpload>;
};


export type AdaptivePolicyAdminMutationsManualEnrollArgs = {
  input: AdaptivePolicyManualEnrollConfirmInput;
};


export type AdaptivePolicyAdminMutationsManualEnrollUploadArgs = {
  input: AdaptivePolicyManualEnrollUploadInput;
};

export type AdaptivePolicyManualEnroll = {
  readonly __typename?: 'AdaptivePolicyManualEnroll';
  readonly logs?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AdaptivePolicyManualEnrollConfirmInput = {
  readonly allPrivileges: Scalars['Boolean'];
  readonly fileUrl: Scalars['String'];
  readonly resetRevenueShare: Scalars['Boolean'];
};

export type AdaptivePolicyManualEnrollSchema = {
  readonly __typename?: 'AdaptivePolicyManualEnrollSchema';
  readonly merchantId: Scalars['ObjectIdType'];
  readonly policyTier: Scalars['String'];
  readonly reason: Scalars['String'];
};

export type AdaptivePolicyManualEnrollUpload = {
  readonly __typename?: 'AdaptivePolicyManualEnrollUpload';
  readonly logs?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly updateList: ReadonlyArray<AdaptivePolicyManualEnrollSchema>;
};

export type AdaptivePolicyManualEnrollUploadInput = {
  readonly fileUrl: Scalars['String'];
};

export type AddProductPostInput = {
  readonly merchantId: Scalars['ObjectIdType'];
  readonly productId: Scalars['ObjectIdType'];
  readonly sourceBucket: Scalars['String'];
  readonly sourceBucketKey: Scalars['String'];
};

export type AddProductPostMutation = {
  readonly __typename?: 'AddProductPostMutation';
  readonly errorCode?: Maybe<ProductPostErrorCode>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AddTrademark = {
  readonly __typename?: 'AddTrademark';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AddTrademarkInput = {
  readonly brandInfoId: Scalars['ObjectIdType'];
  readonly trademarkInfo: BrandPartnerTrademarkInfoInputObject;
};

export type AddressInput = {
  readonly city: Scalars['String'];
  readonly countryCode?: InputMaybe<CountryCode>;
  readonly county?: InputMaybe<Scalars['String']>;
  readonly name: Scalars['String'];
  readonly neighborhood?: InputMaybe<Scalars['String']>;
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly region?: InputMaybe<Scalars['String']>;
  readonly state: Scalars['String'];
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: InputMaybe<Scalars['String']>;
  readonly streetAddress3?: InputMaybe<Scalars['String']>;
  readonly zipcode?: InputMaybe<Scalars['String']>;
};

export type AddressSchema = {
  readonly __typename?: 'AddressSchema';
  readonly city: Scalars['String'];
  readonly country: Country;
  readonly countryCode: CountryCode;
  readonly county?: Maybe<Scalars['String']>;
  readonly name: Scalars['String'];
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly state?: Maybe<Scalars['String']>;
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: Maybe<Scalars['String']>;
  readonly zipcode?: Maybe<Scalars['String']>;
};

export type AddressUpdateError = {
  readonly __typename?: 'AddressUpdateError';
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
};

export type AddressVerificationState =
  | 'NOT_VERIFIED'
  | 'REQUEST_VERIFICATION'
  | 'SYSTEM_VERIFIED'
  | 'USER_VERIFIED'
  | 'WPS_VERIFIED';

export type AlertSchema = {
  readonly __typename?: 'AlertSchema';
  readonly date?: Maybe<Datetime>;
  readonly description: Scalars['String'];
  readonly link?: Maybe<Scalars['String']>;
  readonly sentiment?: Maybe<AlertSentiment>;
};

export type AlertSentiment =
  | 'INFO'
  | 'NEGATIVE'
  | 'WARNING';

export type AnalyticsServiceMutations = {
  readonly __typename?: 'AnalyticsServiceMutations';
  readonly log?: Maybe<LogToTreasureData>;
};


export type AnalyticsServiceMutationsLogArgs = {
  input: LogToTreasureDataInput;
};

export type AnnouncementAdmin = {
  readonly __typename?: 'AnnouncementAdmin';
  readonly announcement?: Maybe<AnnouncementSchema>;
  readonly announcementJob?: Maybe<AnnouncementJobSchema>;
  readonly announcementJobCount: Scalars['Int'];
  readonly announcementJobs?: Maybe<ReadonlyArray<AnnouncementJobSchema>>;
  readonly announcements?: Maybe<AnnouncementListSchema>;
  readonly csv?: Maybe<CsvAnnouncementSchema>;
  readonly options?: Maybe<AnnouncementOptionsSchema>;
};


export type AnnouncementAdminAnnouncementArgs = {
  id: Scalars['String'];
};


export type AnnouncementAdminAnnouncementJobArgs = {
  id: Scalars['String'];
};


export type AnnouncementAdminAnnouncementJobsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type AnnouncementAdminAnnouncementsArgs = {
  announcementType?: InputMaybe<AnnouncementType>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  senderId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type AnnouncementAdminMutations = {
  readonly __typename?: 'AnnouncementAdminMutations';
  readonly createBdBaseAnnouncement?: Maybe<CreateBdBaseAnnouncement>;
  readonly createSystemUpdateBaseAnnouncement?: Maybe<CreateSystemUpdateBaseAnnouncement>;
  readonly publishAnnouncement?: Maybe<PublishAnnouncement>;
  readonly updateSystemUpdateBaseAnnouncement?: Maybe<UpdateSystemUpdateBaseAnnouncement>;
};


export type AnnouncementAdminMutationsCreateBdBaseAnnouncementArgs = {
  input: BdBaseAnnouncementInput;
};


export type AnnouncementAdminMutationsCreateSystemUpdateBaseAnnouncementArgs = {
  input: CreateSystemUpdateBaseAnnouncementInput;
};


export type AnnouncementAdminMutationsPublishAnnouncementArgs = {
  input: PublishAnnouncementInput;
};


export type AnnouncementAdminMutationsUpdateSystemUpdateBaseAnnouncementArgs = {
  input: UpdateSystemUpdateBaseAnnouncementInput;
};

export type AnnouncementAudienceGroup = {
  readonly __typename?: 'AnnouncementAudienceGroup';
  readonly title: Scalars['String'];
  readonly value: AudienceGroup;
};

export type AnnouncementAudienceSourceType =
  | 'AUDIENCE_SOURCE_TYPE_CSV'
  | 'AUDIENCE_SOURCE_TYPE_ENUM'
  | 'AUDIENCE_SOURCE_TYPE_UNSPECIFIED';

export type AnnouncementCsvFieldsSchemaInput = {
  readonly columnMapping: ReadonlyArray<CsvColumnMappingEntryInput>;
  readonly placeholders?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly sourceFileUrl: Scalars['String'];
  readonly sourceS3FileName: Scalars['String'];
};

export type AnnouncementCategory =
  | 'CATEGORY_ACCOUNTSETTINGS'
  | 'CATEGORY_API'
  | 'CATEGORY_INSIGHTS'
  | 'CATEGORY_INTELLECTUALPROPERTY'
  | 'CATEGORY_LOCALCURRENCY'
  | 'CATEGORY_LOGISTICS'
  | 'CATEGORY_LOGISTICSPRICING'
  | 'CATEGORY_ORDERS'
  | 'CATEGORY_PAYMENTS'
  | 'CATEGORY_POLICIESANDTERMS'
  | 'CATEGORY_PRODUCTS'
  | 'CATEGORY_SHIPPINGCARRIERS'
  | 'CATEGORY_TAX'
  | 'CATEGORY_UNSPECIFIED';

export type AnnouncementCategorySchema = {
  readonly __typename?: 'AnnouncementCategorySchema';
  readonly text: Scalars['String'];
  readonly type: MerchantAnnouncementCategory;
};

export type AnnouncementCategorySchemaV2 = {
  readonly __typename?: 'AnnouncementCategorySchemaV2';
  readonly text: Scalars['String'];
  readonly type: AnnouncementCategory;
};

export type AnnouncementContentSchema = {
  readonly __typename?: 'AnnouncementContentSchema';
  readonly ctaDueDate?: Maybe<Datetime>;
  readonly ctaText?: Maybe<Scalars['String']>;
  readonly link?: Maybe<Scalars['String']>;
  readonly locale: AnnouncementLocale;
  readonly message: Scalars['String'];
  readonly title: Scalars['String'];
};

export type AnnouncementContentType =
  | 'ANNOUNCEMENT_CONTENT_TYPE_DYNAMIC'
  | 'ANNOUNCEMENT_CONTENT_TYPE_STATIC'
  | 'ANNOUNCEMENT_CONTENT_TYPE_UNSPECIFIED';

export type AnnouncementJobSchema = {
  readonly __typename?: 'AnnouncementJobSchema';
  readonly annUrlsCsvFileUrl?: Maybe<Scalars['String']>;
  readonly baseAnnouncementCount: Scalars['Int'];
  readonly baseAnnouncementTotal?: Maybe<Scalars['Int']>;
  readonly createdTime: Datetime;
  readonly csvS3Url: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly isEmailSent?: Maybe<Scalars['Boolean']>;
  readonly jobType: AnnouncementJobType;
  readonly messageTemplateCn?: Maybe<Scalars['String']>;
  readonly messageTemplateEn: Scalars['String'];
  readonly midCount: Scalars['Int'];
  readonly s3Filename: Scalars['String'];
  readonly sender: UserSchema;
  readonly state: AnnouncementJobState;
  readonly titleEn: Scalars['String'];
};

export type AnnouncementJobState =
  | 'COMPLETE'
  | 'CREATING_ANNOUNCEMENTS'
  | 'DOWNLOADING_CSV'
  | 'NEW'
  | 'PARSING_CSV'
  | 'RETRIEVING_MERCHANTS';

export type AnnouncementJobType =
  | 'DYNAMIC_TEXT'
  | 'STATIC_TEXT';

export type AnnouncementListSchema = {
  readonly __typename?: 'AnnouncementListSchema';
  readonly announcements?: Maybe<ReadonlyArray<AnnouncementSchema>>;
  readonly count?: Maybe<Scalars['Int']>;
};

export type AnnouncementLocale =
  | 'LOCALE_CN'
  | 'LOCALE_DE_DE'
  | 'LOCALE_EN'
  | 'LOCALE_ES_LA'
  | 'LOCALE_FR_FR'
  | 'LOCALE_IT_IT'
  | 'LOCALE_JA_JP'
  | 'LOCALE_KO_KR'
  | 'LOCALE_PT_BR'
  | 'LOCALE_UNSPECIFIED';

export type AnnouncementMutations = {
  readonly __typename?: 'AnnouncementMutations';
  readonly admin?: Maybe<AnnouncementAdminMutations>;
};

export type AnnouncementOptionsSchema = {
  readonly __typename?: 'AnnouncementOptionsSchema';
  readonly audienceGroups?: Maybe<ReadonlyArray<AnnouncementAudienceGroup>>;
  readonly types?: Maybe<ReadonlyArray<AnnouncementType>>;
};

export type AnnouncementProgram =
  | 'PROGRAM_ADVANCED_LOGISTICS'
  | 'PROGRAM_EPC'
  | 'PROGRAM_FBW_FBS'
  | 'PROGRAM_MERCHANT_FUNDED_PROMOTIONS'
  | 'PROGRAM_MERCHANT_STANDING'
  | 'PROGRAM_PARTIAL_REFUNDS'
  | 'PROGRAM_PRODUCT_BOOST'
  | 'PROGRAM_RETURNS_PROGRAM'
  | 'PROGRAM_UNSPECIFIED'
  | 'PROGRAM_VIDEOS'
  | 'PROGRAM_WISHPOST'
  | 'PROGRAM_WISH_EXPRESS'
  | 'PROGRAM_WISH_STANDARDS';

export type AnnouncementProgramSchema = {
  readonly __typename?: 'AnnouncementProgramSchema';
  readonly text: Scalars['String'];
  readonly type: MerchantAnnouncementProgram;
};

export type AnnouncementProgramSchemaV2 = {
  readonly __typename?: 'AnnouncementProgramSchemaV2';
  readonly text: Scalars['String'];
  readonly type: AnnouncementProgram;
};

export type AnnouncementSchema = {
  readonly __typename?: 'AnnouncementSchema';
  readonly audienceGroups?: Maybe<ReadonlyArray<AudienceGroup>>;
  readonly audienceSourceType: AnnouncementAudienceSourceType;
  readonly categories: ReadonlyArray<AnnouncementCategory>;
  readonly content: ReadonlyArray<AnnouncementContentSchema>;
  readonly contentType?: Maybe<AnnouncementContentType>;
  readonly expiryDate?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly locales: ReadonlyArray<AnnouncementLocale>;
  readonly merchantIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly merchants?: Maybe<ReadonlyArray<UserSchema>>;
  readonly overrideEmailPreference: Scalars['Boolean'];
  readonly program: AnnouncementProgram;
  readonly publishDate?: Maybe<Datetime>;
  readonly sender: UserSchema;
  readonly sourceS3FileName?: Maybe<Scalars['String']>;
  readonly sourceS3FileUrl?: Maybe<Scalars['String']>;
  readonly state: AnnouncementState;
  readonly type: AnnouncementType;
  readonly userAnnouncementCount: Scalars['Int'];
};


export type AnnouncementSchemaMerchantsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type AnnouncementState =
  | 'ANNOUNCEMENT_STATE_COMPLETE'
  | 'ANNOUNCEMENT_STATE_CREATING'
  | 'ANNOUNCEMENT_STATE_DOWNLOADING_CSV'
  | 'ANNOUNCEMENT_STATE_NEW'
  | 'ANNOUNCEMENT_STATE_PARSING_CSV'
  | 'ANNOUNCEMENT_STATE_RETRIEVING_MERCHANTS'
  | 'ANNOUNCEMENT_STATE_UNSPECIFIED'
  | 'ANNOUNCEMENT_STATE_UPDATE'
  | 'ANNOUNCEMENT_STATE_UPDATING';

export type AnnouncementType =
  | 'ANNOUNCEMENT_TYPE_BD_ANNOUNCEMENT'
  | 'ANNOUNCEMENT_TYPE_SYSTEM_UPDATE'
  | 'ANNOUNCEMENT_TYPE_UNSPECIFIED';

export type AnnouncementsForUsersV2Schema = {
  readonly __typename?: 'AnnouncementsForUsersV2Schema';
  readonly list?: Maybe<ReadonlyArray<MerchantAnnouncementV2Schema>>;
  readonly single?: Maybe<MerchantAnnouncementV2Schema>;
};


export type AnnouncementsForUsersV2SchemaListArgs = {
  announcementType: AnnouncementType;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type AnnouncementsForUsersV2SchemaSingleArgs = {
  announcementId: Scalars['ObjectIdType'];
};

export type AnnouncementsService = {
  readonly __typename?: 'AnnouncementsService';
  readonly admin?: Maybe<AnnouncementAdmin>;
  readonly forUsers?: Maybe<ReadonlyArray<MerchantAnnouncementSchema>>;
  readonly forUsersV2?: Maybe<AnnouncementsForUsersV2Schema>;
};


export type AnnouncementsServiceForUsersArgs = {
  announcementType: MerchantAnnouncementType;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type ApproveTrademarks = {
  readonly __typename?: 'ApproveTrademarks';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ApproveTrademarksInput = {
  readonly brandInfoId: Scalars['ObjectIdType'];
  readonly newBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly trademarkIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type Area = {
  readonly __typename?: 'Area';
  readonly unit: AreaUnit;
  readonly value: Scalars['Float'];
};


export type AreaValueArgs = {
  targetUnit?: InputMaybe<AreaUnit>;
};

export type AreaInput = {
  readonly unit: AreaUnit;
  readonly value: Scalars['Float'];
};

export type AreaUnit =
  | 'SQUARE_FOOT'
  | 'SQUARE_METER';

export type AttributeConfigEntryMode =
  | 'FREE_TEXT'
  | 'MULTI_SELECTION'
  | 'SINGLE_SELECTION';

export type AttributeConfigSchema = {
  readonly __typename?: 'AttributeConfigSchema';
  readonly attributeField: Scalars['String'];
  readonly attributeValues?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly description: Scalars['String'];
  readonly entryMode: AttributeConfigEntryMode;
  readonly maxMultiSelect?: Maybe<Scalars['Int']>;
};

export type AttributeDataType =
  | 'ATTRIBUTE_DATA_TYPE_DATE'
  | 'ATTRIBUTE_DATA_TYPE_NUMBER'
  | 'ATTRIBUTE_DATA_TYPE_STRING'
  | 'ATTRIBUTE_DATA_TYPE_STRING_ARRAY'
  | 'ATTRIBUTE_DATA_TYPE_UNSPECIFIED';

export type AttributeDataTypeFormat =
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_DATE_YYYY'
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_DATE_YYYY_MM'
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_DATE_YYYY_MM_DD'
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_NUMBER_DOUBLE'
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_NUMBER_INT32'
  | 'ATTRIBUTE_DATA_TYPE_FORMAT_UNSPECIFIED';

export type AttributeExtractionTagSubmissionSchema = {
  readonly __typename?: 'AttributeExtractionTagSubmissionSchema';
  readonly attributeExtractionResult: ReadonlyArray<AttributeFieldTagResultSchema>;
  readonly submissionDatetime: Datetime;
  readonly tagger: UserSchema;
};

export type AttributeExtractionTaggerJobSchema = {
  readonly __typename?: 'AttributeExtractionTaggerJobSchema';
  readonly attributeConfigs: ReadonlyArray<AttributeConfigSchema>;
  readonly jobId: Scalars['ObjectIdType'];
  readonly jobType: AttributeExtractionTaggerJobType;
  readonly preloadingResult?: Maybe<ReadonlyArray<AttributeFieldTagResultSchema>>;
  readonly productDescription?: Maybe<Scalars['String']>;
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
  readonly productImageUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly productTitle?: Maybe<Scalars['String']>;
  readonly query?: Maybe<Scalars['String']>;
  readonly tagSubmissions?: Maybe<ReadonlyArray<AttributeExtractionTagSubmissionSchema>>;
  readonly taskId: Scalars['String'];
  readonly text: Scalars['String'];
};

export type AttributeExtractionTaggerJobType =
  | 'PRODUCT'
  | 'QUERY';

export type AttributeFieldTagResultSchema = {
  readonly __typename?: 'AttributeFieldTagResultSchema';
  readonly annotationResult: ReadonlyArray<Scalars['String']>;
  readonly attributeField: Scalars['String'];
};

export type AttributeInput = {
  readonly id?: InputMaybe<Scalars['Int']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly value?: InputMaybe<ReadonlyArray<AttributeValueInput>>;
};

export type AttributeLevel =
  | 'ATTRIBUTE_LEVEL_PRODUCT'
  | 'ATTRIBUTE_LEVEL_UNSPECIFIED'
  | 'ATTRIBUTE_LEVEL_VARIANT';

export type AttributeMode =
  | 'ATTRIBUTE_MODE_FREE_TEXT'
  | 'ATTRIBUTE_MODE_MULTI_SELECTION_ONLY'
  | 'ATTRIBUTE_MODE_SINGLE_SELECTION_ONLY'
  | 'ATTRIBUTE_MODE_UNSPECIFIED';

export type AttributeUsage =
  | 'ATTRIBUTE_USAGE_OPTIONAL'
  | 'ATTRIBUTE_USAGE_RECOMMENDED'
  | 'ATTRIBUTE_USAGE_REQUIRED'
  | 'ATTRIBUTE_USAGE_UNSPECIFIED';

export type AttributeValueInput = {
  readonly id?: InputMaybe<Scalars['Int']>;
  readonly value?: InputMaybe<Scalars['String']>;
};

export type AudienceGroup =
  | 'AUDIENCE_GROUP_ACCENTURE_DETAIL_LEAD'
  | 'AUDIENCE_GROUP_ACCENTURE_DETAIL_WORKER'
  | 'AUDIENCE_GROUP_ACCENTURE_TAGGER_LEAD'
  | 'AUDIENCE_GROUP_ACCENTURE_TAGGER_WORKER'
  | 'AUDIENCE_GROUP_ACCENTURE_WORKER'
  | 'AUDIENCE_GROUP_ALL_MERCHANTS'
  | 'AUDIENCE_GROUP_ALORICA_LEAD'
  | 'AUDIENCE_GROUP_ALORICA_WORKER'
  | 'AUDIENCE_GROUP_BRAND_PROTECTION_WORKER'
  | 'AUDIENCE_GROUP_CN_MERCHANTS'
  | 'AUDIENCE_GROUP_CS_REP_INTERNAL'
  | 'AUDIENCE_GROUP_ERP_PARTNERS'
  | 'AUDIENCE_GROUP_IN_HOUSE_TAGGER'
  | 'AUDIENCE_GROUP_LOCAL_STORES'
  | 'AUDIENCE_GROUP_MERCHANT_PLUS_MERCHANTS'
  | 'AUDIENCE_GROUP_NON_CN_MERCHANTS'
  | 'AUDIENCE_GROUP_SPECIFIC_MERCHANT_IDS'
  | 'AUDIENCE_GROUP_TELEPERFORMANCE_BOGOTA_LEAD'
  | 'AUDIENCE_GROUP_TELEPERFORMANCE_BOGOTA_WORKER'
  | 'AUDIENCE_GROUP_TELEPERFORMANCE_LEAD'
  | 'AUDIENCE_GROUP_TELEPERFORMANCE_WORKER'
  | 'AUDIENCE_GROUP_TRANSCOSMOS_LEAD'
  | 'AUDIENCE_GROUP_TRANSCOSMOS_WORKER'
  | 'AUDIENCE_GROUP_UNSPECIFIED'
  | 'AUDIENCE_GROUP_WISHEXPRESS_MERCHANTS';

export type AudioGenre =
  | 'ACOUSTIC'
  | 'BLUES'
  | 'CHILDREN'
  | 'CLASSICAL'
  | 'COMEDY'
  | 'COUNTRY'
  | 'ELECTRONICA_DANCE'
  | 'FILM'
  | 'FUNK'
  | 'HIP_HOP'
  | 'LATIN'
  | 'POP'
  | 'RNB_SOUL'
  | 'ROCK'
  | 'WORLD_COUNTRIES';

export type AudioMoodEmotion =
  | 'ANGRY'
  | 'BUSY_FRANTIC'
  | 'CHANGING_TEMPO'
  | 'CHASING'
  | 'COUNTRYSIDE'
  | 'DARK'
  | 'DREAMY'
  | 'ECCENTRIC'
  | 'ELEGANT'
  | 'EPIC'
  | 'EUPHORIC'
  | 'FLOATING'
  | 'FUNNY'
  | 'GLAMOROUS'
  | 'HAPPY'
  | 'HEAVY_PONDEROUS'
  | 'HOPEFUL'
  | 'INDUSTRY'
  | 'LAID_BACK'
  | 'LOUNGE'
  | 'MARCHING'
  | 'MYSTERIOUS'
  | 'PEACEFUL'
  | 'QUIRKY'
  | 'RELAXING'
  | 'RESTLESS'
  | 'ROMANTIC'
  | 'RUNNING'
  | 'SAD'
  | 'SCARY'
  | 'SENTIMENTAL'
  | 'SEXY'
  | 'SMOOTH'
  | 'SPORTS_ARENA'
  | 'SUNNY_HOLIDAY'
  | 'SUSPENSE'
  | 'WEIRD';

export type AudioProductCategory =
  | 'ACCESSORIES'
  | 'AUTOMOTIVE'
  | 'BABY_KIDS'
  | 'FASHION'
  | 'FLOOR_CARE'
  | 'GADGETS'
  | 'HEALTH_WELLNESS'
  | 'HOBBIES'
  | 'HOME_DECOR'
  | 'HOUSEHOLD_SUPPLIES'
  | 'MAKEUP_BEAUTY'
  | 'MEN_CLOTHING'
  | 'PHONE_UPGRADES'
  | 'SHOES'
  | 'SMALL_APPLIANCES'
  | 'WALLETS_BAGS'
  | 'WATCHES'
  | 'WOMEN_CLOTHING';

export type AuthType =
  | 'MERCHANT'
  | 'WISH';

export type AuthenticationMutations = {
  readonly __typename?: 'AuthenticationMutations';
  readonly checkWechatScan?: Maybe<WechatCheckScanMutation>;
  readonly gen2faCode?: Maybe<TwoFactorGenTokenMutation>;
  readonly genWechatQr?: Maybe<GenWechatQrMutation>;
  readonly login?: Maybe<LoginMutation>;
  readonly loginAs?: Maybe<LoginAsMutations>;
  readonly logout?: Maybe<LogoutMutation>;
  readonly merchantLeadSubmission?: Maybe<MerchantLeadSubmissionMutation>;
  readonly merchantSignup?: Maybe<MerchantSignupMutation>;
  readonly merchantSignupSendPhoneVerification?: Maybe<MerchantSignupSendPhoneVerificationMutation>;
  readonly mmsLeadSubmission?: Maybe<MmsLeadSubmissionMutation>;
  readonly notifyPasswordRecovery?: Maybe<NotifyPasswordRecoveryMutation>;
  readonly resetPassword?: Maybe<ResetPasswordMutation>;
};


export type AuthenticationMutationsCheckWechatScanArgs = {
  input: WechatCheckScanInput;
};


export type AuthenticationMutationsGen2faCodeArgs = {
  input: TwoFactorGenTokenInput;
};


export type AuthenticationMutationsGenWechatQrArgs = {
  input: GenWechatQrInput;
};


export type AuthenticationMutationsLoginArgs = {
  input: LoginMutationInput;
};


export type AuthenticationMutationsMerchantLeadSubmissionArgs = {
  input: MerchantLeadSubmissionInput;
};


export type AuthenticationMutationsMerchantSignupArgs = {
  input: MerchantSignupInput;
};


export type AuthenticationMutationsMerchantSignupSendPhoneVerificationArgs = {
  input: MerchantSignupSendPhoneVerificationInput;
};


export type AuthenticationMutationsMmsLeadSubmissionArgs = {
  input: MmsLeadSubmissionInput;
};


export type AuthenticationMutationsNotifyPasswordRecoveryArgs = {
  input: NotifyPasswordRecoveryMutationInput;
};


export type AuthenticationMutationsResetPasswordArgs = {
  input: ResetPasswordMutationInput;
};

export type AuthenticationServiceSchema = {
  readonly __typename?: 'AuthenticationServiceSchema';
  readonly bdSignupCodeInfo?: Maybe<BdSignupCodeInfo>;
  readonly countriesWeShipTo: ReadonlyArray<Country>;
  readonly merchantInviteInfo?: Maybe<MerchantInviteInfo>;
  readonly passwordEvaluation: PasswordEvaluation;
  readonly salesforceLeadInfo?: Maybe<SalesforceLeadInfo>;
  readonly shopifyOnboardingAuthInfo: ShopifyOnboardingAuthInfo;
  readonly showCaptchaOnSignup: Scalars['Boolean'];
  readonly storeCategories: ReadonlyArray<Scalars['String']>;
};


export type AuthenticationServiceSchemaBdSignupCodeInfoArgs = {
  bdSignupCode?: InputMaybe<Scalars['String']>;
};


export type AuthenticationServiceSchemaMerchantInviteInfoArgs = {
  invite?: InputMaybe<Scalars['String']>;
};


export type AuthenticationServiceSchemaPasswordEvaluationArgs = {
  password: Scalars['String'];
};


export type AuthenticationServiceSchemaSalesforceLeadInfoArgs = {
  salesforceLeadId?: InputMaybe<Scalars['String']>;
};

export type AuthorizeReturn = {
  readonly __typename?: 'AuthorizeReturn';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type AuthorizeReturnInput = {
  readonly orderId: Scalars['ObjectIdType'];
  readonly prepaidReturnLabelFilename: Scalars['String'];
  readonly prepaidReturnLabelUrl: Scalars['String'];
  readonly returnShippingCarrier: Scalars['String'];
  readonly returnTrackingId: Scalars['String'];
};

export type BdAudienceInput =
  | 'ALL'
  | 'MERCHANT_IDS';

export type BdBaseAnnouncementInput = {
  readonly audienceType?: InputMaybe<BdAudienceInput>;
  readonly expiryDate?: InputMaybe<DatetimeInput>;
  readonly merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly message: Scalars['String'];
  readonly publishDate: DatetimeInput;
  readonly title: Scalars['String'];
};

export type BdMerchantCountryCodeType =
  | 'BR'
  | 'CN'
  | 'EU'
  | 'HK'
  | 'JP'
  | 'KR'
  | 'MX'
  | 'MY'
  | 'SG'
  | 'TW'
  | 'US'
  | 'VN';

export type BalanceTransactionRecord = {
  readonly __typename?: 'BalanceTransactionRecord';
  readonly balanceAfterUpdate: CurrencyValue;
  readonly balanceBeforeUpdate: CurrencyValue;
  readonly campaignId?: Maybe<Scalars['ObjectIdType']>;
  readonly dateCreated: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
  readonly receiptId?: Maybe<Scalars['ObjectIdType']>;
  readonly transactionAmount: CurrencyValue;
  readonly updateReasonDescription: Scalars['String'];
  readonly updatedReason: BalanceUpdateReason;
};

export type BalanceUpdateReason =
  | 'ISSUING_CREDITS'
  | 'PAYMENT_BY_CREDITS'
  | 'REFUND';

export type BankAccountDocumentSchema = {
  readonly __typename?: 'BankAccountDocumentSchema';
  readonly comment?: Maybe<Scalars['String']>;
  readonly documentFile?: Maybe<MerchantFileSchema>;
  readonly documentType?: Maybe<BankAccountDocumentType>;
  readonly id: Scalars['ObjectIdType'];
  readonly reviewedAt?: Maybe<Datetime>;
  readonly reviewer?: Maybe<UserSchema>;
  readonly state: BankAccountVerificationStatus;
  readonly uploadedAt: Datetime;
};

export type BankAccountDocumentType =
  | 'BANK_DOCUMENT'
  | 'GOVERNMENT_DOCUMENT'
  | 'UNIDENTIFIED';

export type BankAccountVerificationMerchantMutations = {
  readonly __typename?: 'BankAccountVerificationMerchantMutations';
  readonly uploadDocument: UploadBankAccountDocument;
};


export type BankAccountVerificationMerchantMutationsUploadDocumentArgs = {
  input: UploadBankAccountDocumentInput;
};

export type BankAccountVerificationReviewerMutations = {
  readonly __typename?: 'BankAccountVerificationReviewerMutations';
  readonly reviewDocument?: Maybe<ReviewBankAccountDocument>;
};


export type BankAccountVerificationReviewerMutationsReviewDocumentArgs = {
  input: ReviewBankAccountDocumentInput;
};

export type BankAccountVerificationSchema = {
  readonly __typename?: 'BankAccountVerificationSchema';
  readonly bankAccountDocuments?: Maybe<ReadonlyArray<BankAccountDocumentSchema>>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastReviewedAt?: Maybe<Datetime>;
  readonly lastUploadedAt?: Maybe<Datetime>;
  readonly state: BankAccountVerificationStatus;
};

export type BankAccountVerificationStatus =
  | 'APPROVED'
  | 'PENDING'
  | 'REJECTED'
  | 'SUBMITTED';

export type BdSignupCodeInfo = {
  readonly __typename?: 'BdSignupCodeInfo';
  readonly bdName?: Maybe<Scalars['String']>;
  readonly hasPromotion?: Maybe<Scalars['Boolean']>;
  readonly useMarketingTransactionBonus?: Maybe<Scalars['Boolean']>;
  readonly valid: Scalars['Boolean'];
};

export type BlurredInformationCategory =
  | 'BLURRED_OR_CENSORED_LOGOS'
  | 'BLURRED_OR_CENSORED_TAGS'
  | 'BLURRED_WATERMARKS';

export type BonusBudgetSchema = {
  readonly __typename?: 'BonusBudgetSchema';
  readonly bonusBudget: CurrencyValue;
  readonly bonusBudgetRate: Scalars['Float'];
  readonly bonusBudgetType: MarketingBonusBudgetType;
  readonly eligibleBonusBudgetType: MarketingBonusBudgetType;
  readonly isBonusBudgetCampaign: Scalars['Boolean'];
  readonly usedBonusBudget: CurrencyValue;
};

export type BrandAuthorizationSchema = {
  readonly __typename?: 'BrandAuthorizationSchema';
  readonly brand: BrandSchema;
  readonly id: Scalars['ObjectIdType'];
  readonly merchantId: Scalars['ObjectIdType'];
  readonly state: BrandAuthorizationState;
};

export type BrandAuthorizationState =
  | 'APPROVED'
  | 'CLOSED'
  | 'EXPIRED'
  | 'NOT_APPROVED'
  | 'PENDING'
  | 'PENDING_ADMIN'
  | 'PENDING_MERCHANT';

export type BrandCategoryCode =
  | 'BEAUTY'
  | 'BRANDED_ACCESSORIES'
  | 'COPYRIGHTED_IMAGES'
  | 'ELECTRONIC'
  | 'FASHION'
  | 'KID_TOYS_OR_GAME'
  | 'LUXURY_WELL_KNOWN'
  | 'MEDIA'
  | 'MOTOR'
  | 'SHOE'
  | 'SPORTS';

export type BrandEnrollmentMutations = {
  readonly __typename?: 'BrandEnrollmentMutations';
  readonly addTrademark?: Maybe<AddTrademark>;
  readonly createBrandEnrollmentRequest?: Maybe<CreateBrandEnrollmentRequest>;
  readonly deleteBrandEnrollment?: Maybe<DeleteBrandEnrollment>;
};


export type BrandEnrollmentMutationsAddTrademarkArgs = {
  input?: InputMaybe<AddTrademarkInput>;
};


export type BrandEnrollmentMutationsCreateBrandEnrollmentRequestArgs = {
  input?: InputMaybe<CreateBrandEnrollmentInput>;
};


export type BrandEnrollmentMutationsDeleteBrandEnrollmentArgs = {
  input?: InputMaybe<DeleteBrandEnrollmentInput>;
};

export type BrandManagement = {
  readonly __typename?: 'BrandManagement';
  readonly brands: ReadonlyArray<BrandSchema>;
  readonly canManageBrandToProduct: Scalars['Boolean'];
  readonly canManageBrands: Scalars['Boolean'];
  readonly numBrands: Scalars['Int'];
};


export type BrandManagementBrandsArgs = {
  brandIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  brandName?: InputMaybe<Scalars['String']>;
  brandTypes?: InputMaybe<ReadonlyArray<BrandTypeCode>>;
  count?: InputMaybe<Scalars['Int']>;
  hideDeleted?: InputMaybe<Scalars['Boolean']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type BrandManagementNumBrandsArgs = {
  brandIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  brandName?: InputMaybe<Scalars['String']>;
  brandTypes?: InputMaybe<ReadonlyArray<BrandTypeCode>>;
  hideDeleted?: InputMaybe<Scalars['Boolean']>;
};

export type BrandMutations = {
  readonly __typename?: 'BrandMutations';
  readonly everc?: Maybe<EverCBrandMutations>;
  readonly injunctionMerchantFreeze?: Maybe<InjunctionMerchantFreezeMutations>;
};

export type BrandPartnerAdmin = {
  readonly __typename?: 'BrandPartnerAdmin';
  readonly brandEnrollments: ReadonlyArray<BrandPartnerBrandInfoSchema>;
  readonly brandPartners: ReadonlyArray<BrandPartnerInfoSchema>;
  readonly numBrandEnrollments: Scalars['Int'];
  readonly numBrandPartners: Scalars['Int'];
};


export type BrandPartnerAdminBrandEnrollmentsArgs = {
  brandInfoId?: InputMaybe<Scalars['String']>;
  brandName?: InputMaybe<Scalars['String']>;
  brandPartnerId?: InputMaybe<Scalars['String']>;
  count?: InputMaybe<Scalars['Int']>;
  email?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
  trademarkStates?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};


export type BrandPartnerAdminBrandPartnersArgs = {
  brandName?: InputMaybe<Scalars['String']>;
  brandPartnerId?: InputMaybe<Scalars['String']>;
  brandPartnerStates?: InputMaybe<ReadonlyArray<BrandPartnerState>>;
  count?: InputMaybe<Scalars['Int']>;
  email?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
  trademarkStates?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};


export type BrandPartnerAdminNumBrandEnrollmentsArgs = {
  brandInfoId?: InputMaybe<Scalars['String']>;
  brandName?: InputMaybe<Scalars['String']>;
  brandPartnerId?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  trademarkStates?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};


export type BrandPartnerAdminNumBrandPartnersArgs = {
  brandName?: InputMaybe<Scalars['String']>;
  brandPartnerId?: InputMaybe<Scalars['String']>;
  brandPartnerStates?: InputMaybe<ReadonlyArray<BrandPartnerState>>;
  email?: InputMaybe<Scalars['String']>;
  trademarkStates?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};

export type BrandPartnerAdminMutations = {
  readonly __typename?: 'BrandPartnerAdminMutations';
  readonly approveTrademarks?: Maybe<ApproveTrademarks>;
  readonly disableBrandPartner?: Maybe<DisableBrandPartner>;
  readonly editTrademarksAndBrandInfo?: Maybe<EditTrademarksAndBrandInfo>;
  readonly rejectTrademarksAndBrandInfo?: Maybe<RejectTrademarksAndBrandInfo>;
};


export type BrandPartnerAdminMutationsApproveTrademarksArgs = {
  input: ApproveTrademarksInput;
};


export type BrandPartnerAdminMutationsDisableBrandPartnerArgs = {
  input: DisableBrandPartnerInput;
};


export type BrandPartnerAdminMutationsEditTrademarksAndBrandInfoArgs = {
  input: EditTrademarksAndBrandInfoInput;
};


export type BrandPartnerAdminMutationsRejectTrademarksAndBrandInfoArgs = {
  input: RejectTrademarksAndBrandInfoInput;
};

export type BrandPartnerAuthenticationMutations = {
  readonly __typename?: 'BrandPartnerAuthenticationMutations';
  readonly resetPassword?: Maybe<BrandPartnerResetPassword>;
  readonly sendPasswordResetEmail?: Maybe<BrandPartnerSendPasswordResetEmail>;
};


export type BrandPartnerAuthenticationMutationsResetPasswordArgs = {
  input: BrandPartnerResetPasswordInput;
};


export type BrandPartnerAuthenticationMutationsSendPasswordResetEmailArgs = {
  input: BrandPartnerSendPasswordResetEmailInput;
};

export type BrandPartnerBrandInfoSchema = {
  readonly __typename?: 'BrandPartnerBrandInfoSchema';
  readonly authorizationProofs: ReadonlyArray<MerchantFileSchema>;
  readonly brandOwnerName: Scalars['String'];
  readonly brandPartnerId: Scalars['ObjectIdType'];
  readonly brandRepName: Scalars['String'];
  readonly brandRepTitle: Scalars['String'];
  readonly confirmedBrand?: Maybe<BrandSchema>;
  readonly confirmedBrandId?: Maybe<Scalars['ObjectIdType']>;
  readonly email: Scalars['String'];
  readonly enrollmentDate: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly isNewBrand: Scalars['Boolean'];
  readonly numTrademarks: Scalars['Int'];
  readonly phoneNumber: Scalars['String'];
  readonly proposedBrandId?: Maybe<Scalars['ObjectIdType']>;
  readonly providedBrandAdditionalInfo?: Maybe<Scalars['String']>;
  readonly providedBrandLogo?: Maybe<MerchantFileSchema>;
  readonly providedBrandName: Scalars['String'];
  readonly providedBrandWebsite?: Maybe<Scalars['String']>;
  readonly rejectionReason?: Maybe<Scalars['String']>;
  readonly state: BrandPartnerBrandState;
  readonly trademarks: ReadonlyArray<BrandPartnerTrademarkInfoSchema>;
};


export type BrandPartnerBrandInfoSchemaNumTrademarksArgs = {
  states?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};


export type BrandPartnerBrandInfoSchemaTrademarksArgs = {
  count?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  states?: InputMaybe<ReadonlyArray<BrandPartnerTrademarkState>>;
};

export type BrandPartnerBrandState =
  | 'APPROVED'
  | 'PENDING'
  | 'REJECTED';

export type BrandPartnerChangeUserInfo = {
  readonly __typename?: 'BrandPartnerChangeUserInfo';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type BrandPartnerChangeUserInfoInput = {
  readonly brandPartnerId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly city?: InputMaybe<Scalars['String']>;
  readonly companyName?: InputMaybe<Scalars['String']>;
  readonly countryCode?: InputMaybe<Scalars['String']>;
  readonly currentPassword?: InputMaybe<Scalars['String']>;
  readonly email?: InputMaybe<Scalars['String']>;
  readonly firstName?: InputMaybe<Scalars['String']>;
  readonly internalNote?: InputMaybe<Scalars['String']>;
  readonly lastName?: InputMaybe<Scalars['String']>;
  readonly newPassword?: InputMaybe<Scalars['String']>;
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly professionalTitle?: InputMaybe<Scalars['String']>;
  readonly state?: InputMaybe<Scalars['String']>;
  readonly streetAddress1?: InputMaybe<Scalars['String']>;
  readonly streetAddress2?: InputMaybe<Scalars['String']>;
  readonly zipcode?: InputMaybe<Scalars['String']>;
};

export type BrandPartnerCountryAndRegion = {
  readonly __typename?: 'BrandPartnerCountryAndRegion';
  readonly code: BrandPartnerCountryAndRegionCode;
  readonly name: Scalars['String'];
};

export type BrandPartnerCountryAndRegionCode =
  | 'AD'
  | 'AE'
  | 'AL'
  | 'AR'
  | 'AT'
  | 'AU'
  | 'BA'
  | 'BE'
  | 'BG'
  | 'BR'
  | 'CA'
  | 'CH'
  | 'CL'
  | 'CN'
  | 'CO'
  | 'CR'
  | 'CZ'
  | 'DE'
  | 'DK'
  | 'EE'
  | 'ES'
  | 'EU'
  | 'FI'
  | 'FR'
  | 'GB'
  | 'GI'
  | 'GR'
  | 'HR'
  | 'HU'
  | 'IE'
  | 'IL'
  | 'IS'
  | 'IT'
  | 'JP'
  | 'KR'
  | 'LI'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'MC'
  | 'MD'
  | 'ME'
  | 'MK'
  | 'MT'
  | 'MX'
  | 'NL'
  | 'NO'
  | 'NZ'
  | 'PE'
  | 'PL'
  | 'PR'
  | 'PT'
  | 'RO'
  | 'RS'
  | 'SE'
  | 'SG'
  | 'SI'
  | 'SK'
  | 'SM'
  | 'TR'
  | 'UA'
  | 'US'
  | 'VI'
  | 'ZA';

export type BrandPartnerInfoSchema = {
  readonly __typename?: 'BrandPartnerInfoSchema';
  readonly brandInfos: ReadonlyArray<BrandPartnerBrandInfoSchema>;
  readonly brandPartnerName: Scalars['String'];
  readonly businessAddress?: Maybe<AddressSchema>;
  readonly companyName?: Maybe<Scalars['String']>;
  readonly email: Scalars['String'];
  readonly firstName?: Maybe<Scalars['String']>;
  readonly id: Scalars['ObjectIdType'];
  readonly internalNote?: Maybe<Scalars['String']>;
  readonly isBrandPartnerV2: Scalars['Boolean'];
  readonly lastName?: Maybe<Scalars['String']>;
  readonly lastUpdated: Datetime;
  readonly numBrandInfos: Scalars['Int'];
  readonly numTakedownRequests: Scalars['Int'];
  readonly onboarding: BrandPartnerOnboardingSchema;
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly professionalTitle?: Maybe<Scalars['String']>;
  readonly state: BrandPartnerState;
  readonly takedownRequests: ReadonlyArray<TakedownRequestSchema>;
};


export type BrandPartnerInfoSchemaBrandInfosArgs = {
  brandInfoIdQuery?: InputMaybe<Scalars['String']>;
  brandNameQuery?: InputMaybe<Scalars['String']>;
  count?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  states?: InputMaybe<ReadonlyArray<BrandPartnerBrandState>>;
};


export type BrandPartnerInfoSchemaNumBrandInfosArgs = {
  brandNameQuery?: InputMaybe<Scalars['String']>;
  states?: InputMaybe<ReadonlyArray<BrandPartnerBrandState>>;
};


export type BrandPartnerInfoSchemaNumTakedownRequestsArgs = {
  brandNameQuery?: InputMaybe<Scalars['String']>;
  reportIdQuery?: InputMaybe<Scalars['String']>;
  states?: InputMaybe<ReadonlyArray<TakedownRequestState>>;
};


export type BrandPartnerInfoSchemaTakedownRequestsArgs = {
  brandNameQuery?: InputMaybe<Scalars['String']>;
  count?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  reportIdQuery?: InputMaybe<Scalars['String']>;
  states?: InputMaybe<ReadonlyArray<TakedownRequestState>>;
};

export type BrandPartnerMutations = {
  readonly __typename?: 'BrandPartnerMutations';
  readonly admin?: Maybe<BrandPartnerAdminMutations>;
  readonly authentication?: Maybe<BrandPartnerAuthenticationMutations>;
  readonly brandEnrollmentMutations?: Maybe<BrandEnrollmentMutations>;
  readonly takedownRequest?: Maybe<TakedownRequestMutations>;
  readonly user?: Maybe<BrandPartnerUserMutations>;
};

export type BrandPartnerOnboardingSchema = {
  readonly __typename?: 'BrandPartnerOnboardingSchema';
  readonly numSteps: Scalars['Int'];
  readonly numStepsCompleted: Scalars['Int'];
  readonly numStepsLeft: Scalars['Int'];
  readonly steps: ReadonlyArray<BrandPartnerOnboardingStep>;
};


export type BrandPartnerOnboardingSchemaStepsArgs = {
  completed?: InputMaybe<Scalars['Boolean']>;
};

export type BrandPartnerOnboardingStep = {
  readonly __typename?: 'BrandPartnerOnboardingStep';
  readonly completed: Scalars['Boolean'];
  readonly ctaLink: Scalars['String'];
  readonly ctaText: Scalars['String'];
  readonly description: Scalars['String'];
  readonly illustration?: Maybe<Scalars['String']>;
  readonly name: BrandPartnerOnboardingSteps;
  readonly title: Scalars['String'];
};

export type BrandPartnerOnboardingSteps =
  | 'CONFIRM_EMAIL'
  | 'ENROLL_BRAND';

export type BrandPartnerResetPassword = {
  readonly __typename?: 'BrandPartnerResetPassword';
  readonly email?: Maybe<Scalars['String']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type BrandPartnerResetPasswordInput = {
  readonly password: Scalars['String'];
  readonly tfaToken?: InputMaybe<Scalars['String']>;
  readonly token: Scalars['String'];
};

export type BrandPartnerSendPasswordResetEmail = {
  readonly __typename?: 'BrandPartnerSendPasswordResetEmail';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type BrandPartnerSendPasswordResetEmailInput = {
  readonly email: Scalars['String'];
};

export type BrandPartnerState =
  | 'ACTIVE'
  | 'PENDING'
  | 'PENDING_EMAIL'
  | 'PENDING_PHONE'
  | 'PENDING_REVIEW'
  | 'REJECTED';

export type BrandPartnerTrademarkInfoInputObject = {
  readonly location: BrandPartnerCountryAndRegionCode;
  readonly registrationDocs: ReadonlyArray<FileInput>;
  readonly registrationNumber: Scalars['String'];
  readonly registrationUrl?: InputMaybe<Scalars['String']>;
  readonly trademarkName: Scalars['String'];
  readonly trademarkType: BrandPartnerTrademarkType;
};

export type BrandPartnerTrademarkInfoSchema = {
  readonly __typename?: 'BrandPartnerTrademarkInfoSchema';
  readonly brandId?: Maybe<Scalars['ObjectIdType']>;
  readonly brandInfoId: Scalars['ObjectIdType'];
  readonly brandPartnerId: Scalars['ObjectIdType'];
  readonly enrollmentDate: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly location: BrandPartnerCountryAndRegion;
  readonly registrationDocs: ReadonlyArray<MerchantFileSchema>;
  readonly registrationNumber: Scalars['String'];
  readonly registrationUrl?: Maybe<Scalars['String']>;
  readonly rejectionReason?: Maybe<Scalars['String']>;
  readonly state: BrandPartnerTrademarkState;
  readonly trademarkName: Scalars['String'];
  readonly trademarkType: BrandPartnerTrademarkType;
};

export type BrandPartnerTrademarkState =
  | 'APPROVED'
  | 'PENDING'
  | 'REJECTED';

export type BrandPartnerTrademarkType =
  | 'DESIGNMARK'
  | 'OTHER'
  | 'WORDMARK';

export type BrandPartnerUserMutations = {
  readonly __typename?: 'BrandPartnerUserMutations';
  readonly changeUserInfo?: Maybe<BrandPartnerChangeUserInfo>;
};


export type BrandPartnerUserMutationsChangeUserInfoArgs = {
  input: BrandPartnerChangeUserInfoInput;
};

export type BrandProtection = {
  readonly __typename?: 'BrandProtection';
  readonly canManageFreezes: Scalars['Boolean'];
  readonly injunctionMerchantFreezes: ReadonlyArray<InjunctionMerchantFreezeSchema>;
  readonly numInjunctionMerchantFreezes: Scalars['Int'];
};


export type BrandProtectionInjunctionMerchantFreezesArgs = {
  count?: InputMaybe<Scalars['Int']>;
  fineIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  freezeTypes?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeType>>;
  imfIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  legalEndDateUnix?: InputMaybe<Scalars['Int']>;
  legalStartDateUnix?: InputMaybe<Scalars['Int']>;
  merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  offset?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeState>>;
  troNumbers?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  updatedEndDateUnix?: InputMaybe<Scalars['Int']>;
  updatedStartDateUnix?: InputMaybe<Scalars['Int']>;
};


export type BrandProtectionNumInjunctionMerchantFreezesArgs = {
  fineIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  freezeTypes?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeType>>;
  imfIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  legalEndDateUnix?: InputMaybe<Scalars['Int']>;
  legalStartDateUnix?: InputMaybe<Scalars['Int']>;
  merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  state?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeState>>;
  troNumbers?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  updatedEndDateUnix?: InputMaybe<Scalars['Int']>;
  updatedStartDateUnix?: InputMaybe<Scalars['Int']>;
};

export type BrandProtectionConstants = {
  readonly __typename?: 'BrandProtectionConstants';
  readonly holidayMessage: Scalars['String'];
};

export type BrandReach =
  | 'INTERNATIONAL'
  | 'LOCAL'
  | 'ONLINE'
  | 'REGIONAL';

export type BrandRegistrationCountry =
  | 'EU'
  | 'Japan'
  | 'Others'
  | 'US';

export type BrandSchema = {
  readonly __typename?: 'BrandSchema';
  readonly autoApproveMerchantIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly brandOwnerEntityCountry?: Maybe<Country>;
  readonly brandProductTags?: Maybe<ReadonlyArray<TrueTagSchema>>;
  readonly brandReach?: Maybe<BrandReach>;
  readonly brandTypes?: Maybe<ReadonlyArray<BrandType>>;
  readonly brandUrl?: Maybe<Scalars['String']>;
  readonly counterfeitRiskLevel?: Maybe<CounterfeitRiskLevel>;
  readonly displayName: Scalars['String'];
  readonly evercBrands?: Maybe<ReadonlyArray<EverCBrandSchema>>;
  readonly id: Scalars['ObjectIdType'];
  readonly internalNote?: Maybe<Scalars['String']>;
  readonly ipViolationCategory?: Maybe<IpViolationBrandCategory>;
  readonly isActive: Scalars['Boolean'];
  readonly isAdult: Scalars['Boolean'];
  readonly isTrueBrand: Scalars['Boolean'];
  readonly keywords?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly logoAspectRatio: Scalars['Float'];
  readonly logoUrl?: Maybe<Scalars['String']>;
  readonly manufacturingCountry?: Maybe<Country>;
  readonly minimumPrice?: Maybe<CurrencyValue>;
  readonly name: Scalars['String'];
  readonly numTaggedProducts?: Maybe<Scalars['Int']>;
  readonly severity?: Maybe<BrandSeverity>;
};

export type BrandServiceSchema = {
  readonly __typename?: 'BrandServiceSchema';
  readonly acceptedTrademarkCountries: ReadonlyArray<TrademarkCountryCode>;
  readonly brandAuthorizations?: Maybe<ReadonlyArray<BrandAuthorizationSchema>>;
  readonly brandManagement?: Maybe<BrandManagement>;
  readonly brandPartnerAdmin?: Maybe<BrandPartnerAdmin>;
  readonly brandPartnerTrademarkLocations: ReadonlyArray<BrandPartnerCountryAndRegion>;
  readonly brandProtection?: Maybe<BrandProtection>;
  readonly trueBrands: ReadonlyArray<BrandSchema>;
};


export type BrandServiceSchemaAcceptedTrademarkCountriesArgs = {
  usePriorityOrdering?: InputMaybe<Scalars['Boolean']>;
};


export type BrandServiceSchemaBrandAuthorizationsArgs = {
  id?: InputMaybe<Scalars['ObjectIdType']>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  states?: InputMaybe<ReadonlyArray<BrandAuthorizationState>>;
};


export type BrandServiceSchemaTrueBrandsArgs = {
  brandIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  brandName?: InputMaybe<Scalars['String']>;
  count?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  queryString?: InputMaybe<Scalars['String']>;
  sort?: InputMaybe<BrandSort>;
};

export type BrandSeverity =
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type BrandSort = {
  readonly field: BrandSortField;
  readonly order: SortOrderType;
};

export type BrandSortField =
  | 'ID'
  | 'NAME';

export type BrandType = {
  readonly __typename?: 'BrandType';
  readonly brandType: BrandTypeCode;
  readonly displayName: Scalars['String'];
};

export type BrandTypeCode =
  | 'BRAND_OF_INTEREST'
  | 'COPYRIGHT_IMAGE'
  | 'DEFAULT'
  | 'TRO'
  | 'TRUE_BRAND';

export type BrandedMerchantLifeTimeStatsObjectSchema = {
  readonly __typename?: 'BrandedMerchantLifeTimeStatsObjectSchema';
  readonly cost: CurrencyValue;
  readonly feedImpressions: Scalars['Int'];
  readonly gmv: CurrencyValue;
  readonly orders: Scalars['Int'];
  readonly quantitiesSold: Scalars['Int'];
};

export type BrandingSchema = {
  readonly __typename?: 'BrandingSchema';
  readonly brands: ReadonlyArray<MerchantBrandSchema>;
  readonly latestDateWithBrandData?: Maybe<Datetime>;
};


export type BrandingSchemaBrandsArgs = {
  brandIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

export type BulkMerchantWarningAction =
  | 'APPROVE'
  | 'CONFIRM'
  | 'DECLINE'
  | 'DECLINE_AND_CLOSE'
  | 'DELETE'
  | 'REVERSE';

export type BulkReviewInput = {
  readonly merchantIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly pausedImpressionState?: InputMaybe<Scalars['Boolean']>;
  readonly reviewComment: Scalars['String'];
  readonly reviewState: SanctionScreeningHitStateType;
};

export type BulkReviewMutation = {
  readonly __typename?: 'BulkReviewMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly successfullyUpdated: Scalars['Int'];
  readonly totalToUpdate: Scalars['Int'];
  readonly updatedIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type BulkUpsertMerchantWarning = {
  readonly __typename?: 'BulkUpsertMerchantWarning';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type BulkUpsertMerchantWarningInput = {
  readonly action: BulkMerchantWarningAction;
  readonly comment?: InputMaybe<Scalars['String']>;
  readonly message?: InputMaybe<Scalars['String']>;
  readonly warningIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type BusinessDocTypes =
  | 'ARTICLES_OF_INCORPORATION'
  | 'CERTIFICATE_OF_INCORPORATION'
  | 'CREDIT_CARD_STATEMENT'
  | 'ENTITY_TRADING_NAME'
  | 'GOVERNMENT_ISSUED_BUSINESS_LICENSE'
  | 'OFFICIAL_BANK_STATEMENT'
  | 'PRODUCT_LICENSING'
  | 'RECENT_BUSINESS_RETURNS'
  | 'SHARE_ALLOCATION_CERTIFICATE'
  | 'TAX_FORM'
  | 'TAX_FORM_W_8'
  | 'TAX_FORM_W_9'
  | 'UTILITY_BILL_STATEMENT';

export type BuyerFraudReasonCategory =
  | 'MERCHANT_REPORTED_OTHER'
  | 'MERCHANT_REPORTED_POLICY_ABUSE'
  | 'MERCHANT_REPORTED_SUSPICIOUS_QUANTITY_OR_PAYMENT'
  | 'MERCHANT_REPORTED_SUSPICIOUS_SHIPPING_LOCATION';

export type ByUserIdInput = {
  readonly id: Scalars['ObjectIdType'];
};

export type ByUserIdMutation = {
  readonly __typename?: 'ByUserIdMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly sessionKey?: Maybe<Scalars['String']>;
};

export type CaTaxConstants = {
  readonly __typename?: 'CATaxConstants';
  readonly marketplaceProvinces: ReadonlyArray<Scalars['String']>;
  readonly pstQstProvinces: ReadonlyArray<Scalars['String']>;
};

export type CsPerformanceStats = {
  readonly __typename?: 'CSPerformanceStats';
  readonly averageRating30d?: Maybe<Scalars['Float']>;
  readonly averageTicketResponseTime?: Maybe<Timedelta>;
  readonly chargeback?: Maybe<Scalars['Int']>;
  readonly chargebackAmount: CurrencyValue;
  readonly chargebackAmountRatio?: Maybe<Scalars['Float']>;
  readonly chargebackRatio?: Maybe<Scalars['Float']>;
  readonly customerSatisfaction?: Maybe<Scalars['Float']>;
  readonly customerSatisfactionScore?: Maybe<Scalars['Float']>;
  readonly endDate: Datetime;
  readonly gmv: CurrencyValue;
  readonly lateResponseRate30d?: Maybe<Scalars['Float']>;
  readonly orders?: Maybe<Scalars['Int']>;
  readonly orders30d?: Maybe<Scalars['Int']>;
  readonly orders93d?: Maybe<Scalars['Int']>;
  readonly refund30d?: Maybe<Scalars['Int']>;
  readonly refund93d?: Maybe<Scalars['Int']>;
  readonly refundRatio30d?: Maybe<Scalars['Float']>;
  readonly refundRatio93d?: Maybe<Scalars['Float']>;
  readonly startDate: Datetime;
  readonly ticketRatio?: Maybe<Scalars['Float']>;
  readonly tickets?: Maybe<Scalars['Int']>;
};

export type CsvAnnouncementSchema = {
  readonly __typename?: 'CSVAnnouncementSchema';
  readonly validate?: Maybe<CsvValidationSchema>;
};


export type CsvAnnouncementSchemaValidateArgs = {
  contentType: AnnouncementContentType;
  csvFileUrl: Scalars['String'];
  messageTemplateCn?: InputMaybe<Scalars['String']>;
  messageTemplateEn: Scalars['String'];
};

export type CsvExportFilterType =
  | 'FBS'
  | 'FBW'
  | 'NO_TRACKING'
  | 'REFUNDED'
  | 'REFUNDED_BY_WISH'
  | 'SHIPPED'
  | 'UNCONFIRMED_TRACKING';

export type CsvProductImportJobSchema = {
  readonly __typename?: 'CSVProductImportJobSchema';
  readonly addedCount: Scalars['Int'];
  readonly csvUrl?: Maybe<Scalars['String']>;
  readonly errorCount: Scalars['Int'];
  readonly feedType: ProductCsvJobType;
  readonly fileName?: Maybe<Scalars['String']>;
  readonly fpApprovedCount: Scalars['Int'];
  readonly fpBlockedCount: Scalars['Int'];
  readonly id: Scalars['ObjectIdType'];
  readonly processedCount: Scalars['Int'];
  readonly startTime: Datetime;
  readonly status: MerchantFeedJobStatus;
  readonly totalRows: Scalars['Int'];
  readonly updatedCount: Scalars['Int'];
};

export type CsvValidationSchema = {
  readonly __typename?: 'CSVValidationSchema';
  readonly columnMapping: ReadonlyArray<CsvColumnMappingEntrySchema>;
  readonly errors?: Maybe<Scalars['String']>;
  readonly midCount?: Maybe<Scalars['Int']>;
  readonly placeholderKeys?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly previewData?: Maybe<Scalars['JSONString']>;
};

export type CalculatedShippingAccountConfigType =
  | 'ACCOUNT_LEVEL_OFF'
  | 'ACCOUNT_LEVEL_ON'
  | 'USE_PRODUCT_LEVEL_CONFIG';

export type CampaignEventInfo = {
  readonly __typename?: 'CampaignEventInfo';
  readonly countries: ReadonlyArray<Country>;
  readonly description?: Maybe<Scalars['String']>;
  readonly endTime: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly minDiscountPercentage: Scalars['Float'];
  readonly name: Scalars['String'];
  readonly productCategoryRestrictions: ReadonlyArray<TaxonomyCategorySchema>;
  readonly promotionType: MfpCampaignPromotionType;
  readonly startTime: Datetime;
  readonly submissionDeadline: Datetime;
};

export type CampaignEventSort = {
  readonly field: MfpCampaignEventSortBy;
  readonly order: SortOrderType;
};

export type CampaignProductSchema = {
  readonly __typename?: 'CampaignProductSchema';
  readonly brandId?: Maybe<Scalars['ObjectIdType']>;
  readonly isMaxboost: Scalars['Boolean'];
  readonly keywords: ReadonlyArray<Scalars['String']>;
  readonly product?: Maybe<ProductSchema>;
  readonly productId: Scalars['ObjectIdType'];
};

export type CampaignSchema = {
  readonly __typename?: 'CampaignSchema';
  readonly bonusBudget: BonusBudgetSchema;
  readonly endDate: Datetime;
  readonly flexibleBudget: FlexibleBudgetSchema;
  readonly id: Scalars['ObjectIdType'];
  readonly intenseBoost: Scalars['Boolean'];
  readonly isEvergreen: Scalars['Boolean'];
  readonly localizedCurrency: PaymentCurrencyCode;
  readonly maxBudget: CurrencyValue;
  readonly merchant: MerchantSchema;
  readonly merchantBudget: CurrencyValue;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
  readonly products: ReadonlyArray<CampaignProductSchema>;
  readonly scheduledAddBudget: ScheduledAddBudgetSchema;
  readonly startDate: Datetime;
  readonly state: MarketingCampaignState;
};

export type CancelChargeTransactionInput = {
  readonly chargeId: Scalars['String'];
};

export type CancelChargeTransactionMutation = {
  readonly __typename?: 'CancelChargeTransactionMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CancelInfractionInput = {
  readonly reason: CancelReason;
};

export type CancelMfpCampaign = {
  readonly __typename?: 'CancelMFPCampaign';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CancelMfpCampaignInput = {
  readonly campaignId: Scalars['ObjectIdType'];
  readonly cancelReason: MfpCampaignCancelReason;
  readonly comment?: InputMaybe<Scalars['String']>;
};

export type CancelReason =
  | 'AGENT_ERROR'
  | 'ALREADY_DELETED'
  | 'EXPIRED'
  | 'INCORRECT_DATA'
  | 'OFFENDING_CONTENT_REMOVED'
  | 'PASSED_AUTHORIZATION_TAGGING'
  | 'POLICY_UPDATE'
  | 'WHITE_GLOVE_WISH_X_STRAT_MERCH';

export type CancelReturn = {
  readonly __typename?: 'CancelReturn';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CancelReturnInput = {
  readonly cancelReason: ReturnRequestCancelReason;
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly otherReasonExplanation?: InputMaybe<Scalars['String']>;
  readonly supportingDocument?: InputMaybe<Scalars['String']>;
};

export type CancelWfpWithholdMutation = {
  readonly __typename?: 'CancelWFPWithholdMutation';
  readonly merchantId?: Maybe<Scalars['String']>;
  readonly message: Scalars['String'];
  readonly ok: Scalars['Boolean'];
  readonly orderId?: Maybe<Scalars['String']>;
};

export type CancelWfpWithholdMutationInput = {
  readonly cancelReason?: InputMaybe<Scalars['String']>;
  readonly cancelTicket: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
};

export type CancelWpsTrackingIdInput = {
  readonly orderId: Scalars['ObjectIdType'];
};

export type CancelWpsTrackingIdMutation = {
  readonly __typename?: 'CancelWPSTrackingIDMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly wpsShipmentId?: Maybe<Scalars['String']>;
};

export type CannedResponseCategorySchema = {
  readonly __typename?: 'CannedResponseCategorySchema';
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
};

export type CannedResponseFeature =
  | 'DISPUTE'
  | 'FRAUD'
  | 'TICKET'
  | 'TRACKING_DISPUTE'
  | 'WARNING';

export type CannedResponseHub = {
  readonly __typename?: 'CannedResponseHub';
  readonly cannedResponseCategories?: Maybe<ReadonlyArray<CannedResponseCategorySchema>>;
  readonly cannedResponseCategoriesCount?: Maybe<Scalars['Int']>;
  readonly cannedResponses?: Maybe<ReadonlyArray<CannedResponseSchema>>;
  readonly cannedResponsesCount?: Maybe<Scalars['Int']>;
  readonly filledCannedResponseText?: Maybe<FilledCannedResponseTextSchema>;
};


export type CannedResponseHubCannedResponseCategoriesArgs = {
  feature: CannedResponseFeature;
  locale?: InputMaybe<Locale>;
};


export type CannedResponseHubCannedResponseCategoriesCountArgs = {
  feature: CannedResponseFeature;
  locale?: InputMaybe<Locale>;
};


export type CannedResponseHubCannedResponsesArgs = {
  canRePurchase?: InputMaybe<Scalars['Boolean']>;
  category?: InputMaybe<Scalars['ObjectIdType']>;
  feature: CannedResponseFeature;
  isRefund?: InputMaybe<Scalars['Boolean']>;
  locale?: InputMaybe<Locale>;
};


export type CannedResponseHubCannedResponsesCountArgs = {
  canRePurchase?: InputMaybe<Scalars['Boolean']>;
  category?: InputMaybe<Scalars['ObjectIdType']>;
  feature?: InputMaybe<CannedResponseFeature>;
  isRefund?: InputMaybe<Scalars['Boolean']>;
  locale?: InputMaybe<Locale>;
};


export type CannedResponseHubFilledCannedResponseTextArgs = {
  cannedResponseId: Scalars['ObjectIdType'];
  searchId: Scalars['ObjectIdType'];
  searchType?: InputMaybe<FilledCannedResponseSearchType>;
};

export type CannedResponseSchema = {
  readonly __typename?: 'CannedResponseSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
};

export type CartPriceDetailSchema = {
  readonly __typename?: 'CartPriceDetailSchema';
  readonly productPrice?: Maybe<CurrencyValue>;
  readonly shippingPrice?: Maybe<CurrencyValue>;
  readonly total?: Maybe<CurrencyValue>;
};


export type CartPriceDetailSchemaProductPriceArgs = {
  forMmrpRefund?: InputMaybe<Scalars['Boolean']>;
  includeTax?: InputMaybe<Scalars['Boolean']>;
};


export type CartPriceDetailSchemaShippingPriceArgs = {
  forMmrpRefund?: InputMaybe<Scalars['Boolean']>;
  includeTax?: InputMaybe<Scalars['Boolean']>;
};

export type CategorizationSource =
  | 'DISPUTE'
  | 'HUMAN_LABELED'
  | 'INFERENCE_MODEL'
  | 'MANUAL_OVERRIDE_TOOL'
  | 'MERCHANT_SPECIFIED'
  | 'MONGO_BACK_FILL';

export type CategoryClassificationTaggerJobSchema = {
  readonly __typename?: 'CategoryClassificationTaggerJobSchema';
  readonly description: Scalars['String'];
  readonly imageUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly jobId: Scalars['ObjectIdType'];
  readonly merchantGeneratedCategory?: Maybe<TaxonomyCategorySchema>;
  readonly modelGeneratedCategory?: Maybe<TaxonomyCategorySchema>;
  readonly title: Scalars['String'];
  readonly treeVersion?: Maybe<Scalars['String']>;
};

export type CategoryEprSchema = {
  readonly __typename?: 'CategoryEprSchema';
  readonly category: Scalars['Int'];
  readonly categoryName: Scalars['String'];
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly inScopePidCount: Scalars['Int'];
  readonly responsibleEntityName?: Maybe<Scalars['String']>;
  readonly status?: Maybe<EprStatus>;
  readonly uin?: Maybe<Scalars['String']>;
};

export type ChangeDisplayNameInput = {
  readonly displayName: Scalars['String'];
};

export type ChangeDisplayNameMutation = {
  readonly __typename?: 'ChangeDisplayNameMutation';
  readonly displayName?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
};

export type ChangeEmailInput = {
  readonly email: Scalars['String'];
  readonly password: Scalars['String'];
};

export type ChangeEmailMutation = {
  readonly __typename?: 'ChangeEmailMutation';
  readonly email?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly passwordOk?: Maybe<Scalars['Boolean']>;
};

export type ChangeLocale = {
  readonly __typename?: 'ChangeLocale';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ChangeLocaleInput = {
  readonly locale: Locale;
};

export type ChangeMftOptOutInput = {
  readonly isOptedOut: Scalars['Boolean'];
};

export type ChangeMftOptOutMutation = {
  readonly __typename?: 'ChangeMFTOptOutMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok?: Maybe<Scalars['String']>;
};

export type ChangePasswordInput = {
  readonly curPassword?: InputMaybe<Scalars['String']>;
  readonly newPassword?: InputMaybe<Scalars['String']>;
};

export type ChangePasswordMutation = {
  readonly __typename?: 'ChangePasswordMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly passwordOk?: Maybe<Scalars['Boolean']>;
};

export type ChangePhoneNumberMutation = {
  readonly __typename?: 'ChangePhoneNumberMutation';
  readonly sendCode: ChangePhoneNumberSendCodeMutation;
  readonly verifyCode: ChangePhoneNumberVerifyCodeMutation;
};


export type ChangePhoneNumberMutationSendCodeArgs = {
  input: ChangePhoneNumberSendCodeInput;
};


export type ChangePhoneNumberMutationVerifyCodeArgs = {
  input: ChangePhoneNumberVerifyCodeInput;
};

export type ChangePhoneNumberSendCodeInput = {
  readonly newPhoneNumber: Scalars['String'];
};

export type ChangePhoneNumberSendCodeMutation = {
  readonly __typename?: 'ChangePhoneNumberSendCodeMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly sentOk: Scalars['Boolean'];
};

export type ChangePhoneNumberVerifyCodeInput = {
  readonly newPhoneNumber: Scalars['String'];
  readonly verificationCode: Scalars['String'];
};

export type ChangePhoneNumberVerifyCodeMutation = {
  readonly __typename?: 'ChangePhoneNumberVerifyCodeMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly verifiedOk: Scalars['Boolean'];
};

export type ChangePreferredUnitsInput = {
  readonly preferredLengthUnit: LengthUnit;
  readonly preferredWeightUnit: WeightUnit;
};

export type ChangePreferredUnitsMutation = {
  readonly __typename?: 'ChangePreferredUnitsMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type ChangeShippingProviderStatus = {
  readonly __typename?: 'ChangeShippingProviderStatus';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingProvider?: Maybe<ShippingProviderSchema>;
};

export type ChangeShippingProviderStatusInput = {
  readonly providerId: Scalars['Int'];
};

export type ChangeVacationSettingsInput = {
  readonly endDate?: InputMaybe<DatetimeInput>;
  readonly primaryWarehouseOnly: Scalars['Boolean'];
  readonly startDate?: InputMaybe<DatetimeInput>;
};

export type ChangeVacationSettingsMutation = {
  readonly __typename?: 'ChangeVacationSettingsMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type ChargeInput = {
  readonly chargeId: Scalars['String'];
  readonly chargeProvider?: InputMaybe<ChargePaymentProviderType>;
  readonly clientToken?: InputMaybe<Scalars['String']>;
  readonly paypalDeviceData?: InputMaybe<Scalars['String']>;
  readonly paypalPayerEmail?: InputMaybe<Scalars['String']>;
  readonly paypalPayerId?: InputMaybe<Scalars['String']>;
};

export type ChargeItem = {
  readonly __typename?: 'ChargeItem';
  readonly type: ChargeItemType;
};

export type ChargeItemType =
  | 'PRODUCT_BOOST_CAMPAIGN'
  | 'STORE_REGISTRATION_FEE';

export type ChargeMutation = {
  readonly __typename?: 'ChargeMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ChargePaymentProviderType =
  | 'NONE'
  | 'PAYONEER'
  | 'PAYPAL'
  | 'UMPAY';

export type ChargeTransactionInfo = {
  readonly __typename?: 'ChargeTransactionInfo';
  readonly canChangeChargeProvider: Scalars['Boolean'];
  readonly chargeCreatedTime: Datetime;
  readonly chargeItem?: Maybe<ChargeItem>;
  readonly chargeProvider?: Maybe<ChargePaymentProviderType>;
  readonly chargeReceivedTime?: Maybe<Datetime>;
  readonly clientToken?: Maybe<Scalars['String']>;
  readonly currency?: Maybe<PaymentCurrencyCode>;
  readonly signupUrl?: Maybe<Scalars['String']>;
  readonly state: ChargeTransactionState;
  readonly totalAmount?: Maybe<CurrencyValue>;
  readonly totalAmountInUsd?: Maybe<CurrencyValue>;
  readonly type: ChargeTransactionType;
};

export type ChargeTransactionState =
  | 'EXCEPTION'
  | 'FAILED'
  | 'NEW'
  | 'PENDING'
  | 'REFUNDED'
  | 'REQUIRE_REVIEW'
  | 'SUCCEEDED'
  | 'VOIDED';

export type ChargeTransactionType =
  | 'BUYING'
  | 'INVOICING';

export type CheckpointAfterActionState =
  | 'ALERT'
  | 'ARRIVE_AT_DEST_COUNTRY'
  | 'ATTEMPT_FAIL'
  | 'AVAILABLE_FOR_PICKUP'
  | 'CANCELLED'
  | 'DELETE_FAIL'
  | 'DELETE_FOR_REUSE_API_FAIL'
  | 'DELETE_FOR_REUSE_API_SUCCESS'
  | 'DELETE_FOR_REUSE_DATA'
  | 'DELETE_SUCCESS'
  | 'DELIVERED'
  | 'EXCEPTION'
  | 'EXPIRED'
  | 'INFO_RECEIVED'
  | 'IN_TRANSIT'
  | 'MARKED_SHIPPED'
  | 'ORDER_PLACED'
  | 'OUT_FOR_DELIVERY'
  | 'PENDING'
  | 'REACTIVATE_FAIL'
  | 'REACTIVATE_SUCCESS'
  | 'SEND_TRACKING_FAIL'
  | 'SEND_TRACKING_SUCCESS'
  | 'TRACKING_CHANGED'
  | 'TRACK_END';

export type ChromeBadgeSchema = {
  readonly __typename?: 'ChromeBadgeSchema';
  readonly badgeType?: Maybe<ChromeBadgeType>;
  readonly expiryDate?: Maybe<Datetime>;
};

export type ChromeBadgeType =
  | 'BETA'
  | 'NEW';

export type ChromeNodeSchema = {
  readonly __typename?: 'ChromeNodeSchema';
  readonly badge?: Maybe<ChromeBadgeSchema>;
  readonly children?: Maybe<ReadonlyArray<ChromeNodeSchema>>;
  readonly countSelectors?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly description?: Maybe<Scalars['String']>;
  readonly keywords?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly label?: Maybe<Scalars['String']>;
  readonly mostRecentHit?: Maybe<Datetime>;
  readonly nodeid?: Maybe<Scalars['String']>;
  readonly openInNewTab?: Maybe<Scalars['Boolean']>;
  readonly overviewLabel?: Maybe<Scalars['String']>;
  readonly path?: Maybe<Scalars['String']>;
  readonly searchPhrase?: Maybe<Scalars['String']>;
  readonly showInSideMenu?: Maybe<Scalars['Boolean']>;
  readonly totalHits?: Maybe<Scalars['Int']>;
  readonly url?: Maybe<Scalars['String']>;
};

export type ChromeSchema = {
  readonly __typename?: 'ChromeSchema';
  readonly merchantGraph?: Maybe<ChromeNodeSchema>;
  readonly merchantGraphString?: Maybe<Scalars['String']>;
  readonly objectSearch?: Maybe<NavigationResultSchema>;
};


export type ChromeSchemaObjectSearchArgs = {
  currentPath?: InputMaybe<Scalars['String']>;
  objectId: Scalars['ObjectIdType'];
};

export type ClaimInfractionInput = {
  readonly warningIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type ClaimNotices = {
  readonly __typename?: 'ClaimNotices';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ClaimNoticesInput = {
  readonly noticeIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type ClearAllUiState = {
  readonly __typename?: 'ClearAllUIState';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ClearUiState = {
  readonly __typename?: 'ClearUIState';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ClearVacationSettingsMutation = {
  readonly __typename?: 'ClearVacationSettingsMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type ClientWritableBucket =
  | 'BANK_ACCOUNT_DOCUMENTS'
  | 'BRAND_LOGO'
  | 'PUBLIC_APP_LOGO'
  | 'RACC_SOURCE_ASSETS'
  | 'REGULATOR_REPORT_FILE_UPLOADS'
  | 'TAX_SETTING_FILE_UPLOADS'
  | 'TEMP_UPLOADS'
  | 'TEMP_UPLOADS_V2';

export type CloseInfractionInput = {
  readonly warningIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type ColumnCategoryId =
  | 'ADDITIONAL_ITEM_SHIPPING'
  | 'COUNTRY_SHIPPING'
  | 'LOGISTICS'
  | 'PRODUCT_DETAILS'
  | 'TTD';

export type ColumnCategorySchema = {
  readonly __typename?: 'ColumnCategorySchema';
  readonly id: ColumnCategoryId;
  readonly name: Scalars['String'];
};

export type CommerceMerchantEuEntityStatus =
  | 'NOT_ESTABLISHED'
  | 'NOT_STARTED'
  | 'PENDING_REVIEW'
  | 'REJECTED'
  | 'VALIDATED';

export type CommerceMerchantReviewStatus =
  | 'APPROVED'
  | 'FAILED'
  | 'NOT_APPLICABLE'
  | 'PENDING_ADMIN_REVIEW'
  | 'PENDING_AUTO_REVIEW';

export type CommerceMerchantState =
  | 'APPROVED'
  | 'DISABLED'
  | 'PENDING'
  | 'PENDING_EMAIL'
  | 'PENDING_PHONE'
  | 'REQUEST_INFO'
  | 'VACATION'
  | 'WISH_EXPRESS_ONLY';

export type CommerceMerchantTaxInfoGermanyNoNumberReason =
  | 'BUYER_IS_IMPORTER_OF_RECORD'
  | 'WILL_REGISTER_SOON';

export type CommerceMerchantTaxInfoStatus =
  | 'ACTIVE'
  | 'FAILED_REVIEW'
  | 'INACTIVE'
  | 'OLD_ACTIVE_NEW_PENDING_REVIEW'
  | 'PENDING_ONESOURCE_SETUP'
  | 'PENDING_REVIEW';

export type CommerceProductCondition =
  | 'NEW'
  | 'REFURBISHED'
  | 'USED';

export type CommerceProductFpReviewStatus =
  | 'APPROVED'
  | 'BLOCKED'
  | 'UNDER_REVIEW';

export type CommerceProductListingState =
  | 'ACTIVE'
  | 'MERCHANT_INACTIVE'
  | 'REMOVED_BY_MERCHANT'
  | 'REMOVED_BY_WISH'
  | 'WISH_INACTIVE';

export type CommerceProductListingStateReason =
  | 'AVAILABLE'
  | 'AVAILABLE_AND_BLOCKED_EDIT'
  | 'AVAILABLE_AND_PENDING_EDIT'
  | 'LISTING_BLOCKED'
  | 'LISTING_UNDER_REVIEW'
  | 'MERCH_INACTIVE'
  | 'MERCH_INACTIVE_AND_BLOCKED_EDIT'
  | 'MERCH_INACTIVE_AND_PENDING_EDIT'
  | 'NEW_LISTING_BLOCKED'
  | 'NEW_LISTING_UNDER_REVIEW'
  | 'NOT_AVAILABLE'
  | 'REMOVED_BY_MERCH'
  | 'REMOVED_BY_WISH';

export type CommerceProductReviewStatus =
  | 'APPROVED'
  | 'PENDING'
  | 'REJECTED';

export type CommerceProductStatus =
  | 'DISABLED'
  | 'ENABLED'
  | 'REMOVED_BY_MERCHANT';

export type CommerceTransactionClient =
  | 'ANDROID_APP'
  | 'ANDROID_INSTANT_APP'
  | 'IOS_APP'
  | 'IPAD_APP'
  | 'MOBILE_WEB'
  | 'WEB'
  | 'WINDOWS_APP'
  | 'WINDOWS_PHONE_APP';

export type CommerceTransactionState =
  | 'ACKNOWLEDGED'
  | 'APPROVED'
  | 'C2C_ACCEPTED'
  | 'C2C_DELIVERED'
  | 'C2C_ON_DELIVERY'
  | 'DECLINED'
  | 'DELAYING'
  | 'EXCEPTION'
  | 'GIFT_WAITING_FOR_ACCEPT'
  | 'LABEL_DOWNLOADED'
  | 'LABEL_GENERATED'
  | 'PENDING'
  | 'REFUNDED'
  | 'REQUIRE_REVIEW'
  | 'SHIPPED';

export type CommerceTransactionTaxEventType =
  | 'REFUND_PRICE'
  | 'REFUND_SHIPPING'
  | 'SALE_PRICE'
  | 'SALE_SHIPPING';

export type CommerceTransactionTaxRemitType =
  | 'MERCHANT_REMIT'
  | 'NO_REMIT'
  | 'TBD_REMIT'
  | 'WISH_REMIT';

export type CompleteDisputeReview = {
  readonly __typename?: 'CompleteDisputeReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CompleteDisputeReviewInput = {
  readonly disputeReviewResponse: Scalars['String'];
  readonly noticeId: Scalars['ObjectIdType'];
};

export type CompleteNoticeReview = {
  readonly __typename?: 'CompleteNoticeReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CompleteNoticeReviewInput = {
  readonly noticeId: Scalars['ObjectIdType'];
  readonly reviewResponse: Scalars['String'];
};

export type ConfirmedDeliveryCarriers = {
  readonly __typename?: 'ConfirmedDeliveryCarriers';
  readonly availableCountries: ReadonlyArray<Country>;
  readonly availableShippingCountries: ReadonlyArray<CountryAvailableShippingProviders>;
  readonly shippingProviders: ReadonlyArray<ShippingProviderSchema>;
  readonly swedenConfirmedDeliveredCarrierTypes: ReadonlyArray<SwedenConfirmedDeliveredCarrierTypes>;
};

export type ContactBuyer = {
  readonly __typename?: 'ContactBuyer';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ContactBuyerInput = {
  readonly contactReason: ReturnRequestContactBuyerReason;
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly otherReasonExplanation?: InputMaybe<Scalars['String']>;
  readonly supportingDocument?: InputMaybe<Scalars['String']>;
};

export type ContestWarningType =
  | 'CHEMICAL'
  | 'DEP_PASSENGER_OFF_ROAD_VEHICLE'
  | 'DEP_RECREATIONAL_VESSEL'
  | 'DIESEL_ENGINE'
  | 'FOOD'
  | 'FURNITURE'
  | 'ON_PRODUCT_CANCER'
  | 'ON_PRODUCT_COMBINED_CANCER_REPRODUCTIVE'
  | 'ON_PRODUCT_REPRODUCTIVE'
  | 'RAW_WOOD';

export type ConversionRate =
  | 'MKL_POLICY'
  | 'WISH_LATEST';

export type ConvertToPlus = {
  readonly __typename?: 'ConvertToPlus';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type ConvertToPlusInput = {
  readonly merchantIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type Count = {
  readonly __typename?: 'Count';
  readonly unit: CountUnit;
  readonly value: Scalars['Float'];
};


export type CountValueArgs = {
  targetUnit?: InputMaybe<CountUnit>;
};

export type CountInput = {
  readonly unit: CountUnit;
  readonly value: Scalars['Float'];
};

export type CountUnit =
  | 'COUNT'
  | 'LOAD'
  | 'POD'
  | 'ROLL'
  | 'WASH';

export type CounterfeitReasonCode =
  | 'ADULT_CONTENT'
  | 'AMBIGUOUS_LISTING'
  | 'ANIMAL_PRODUCTS'
  | 'BIKE_HELMETS'
  | 'BLURRED_INFORMATION'
  | 'BLURRED_LABEL'
  | 'BLURRED_WATERMARK'
  | 'CARSEAT'
  | 'CELEBRITY_PHOTO'
  | 'CENSORED_FACE'
  | 'CN_PROHIBITED_PRODUCTS'
  | 'CONSUMPTION_MATERIALS'
  | 'CONTACT_LENSES'
  | 'DANGEROUS_ITEMS'
  | 'DISTASTEFUL_CONTENT'
  | 'FALSE_ADVERTISING'
  | 'GRAPHIC_VIOLENCE'
  | 'HARMFUL_CHEMICALS'
  | 'HARNESS'
  | 'HATE_CRIME'
  | 'HAZARDOUS_MATERIALS'
  | 'HOVERBOARD'
  | 'ILLEGAL_ELECTRONICS'
  | 'IS_MAJOR_BRAND'
  | 'JEWELRY_AND_METALS'
  | 'LIGHTERS'
  | 'MEDICAL_MATERIALS'
  | 'MISLEADING_LISTING'
  | 'MISLEADING_LISTING_AUTHENTIC_BRAND'
  | 'NUDITY'
  | 'PICTURED_WITH_MAJOR_BRAND'
  | 'PIERCING_GUN'
  | 'PLANTS_AND_SEEDS'
  | 'PLANT_SEEDS'
  | 'PRICE_GOUGING'
  | 'PRODUCT_MODIFIED'
  | 'PROP_MONEY'
  | 'RECALLED_TOYS'
  | 'REGIONAL_RESTRICTIONS'
  | 'SAFETY_EQUIPMENT'
  | 'SMOKING'
  | 'TATTOO_GUN'
  | 'TEAM_LOGO'
  | 'TRICK_CANDLES'
  | 'UNLICENSED_MEDIA'
  | 'UNVERIFIED_MONEY'
  | 'VIRTUAL_GOODS'
  | 'WEAPON'
  | 'WISH_ADMIN';

export type CounterfeitRiskLevel =
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM';

export type CounterfeitViolationSchema = {
  readonly __typename?: 'CounterfeitViolationSchema';
  readonly isConfirmed: Scalars['Boolean'];
  readonly reason?: Maybe<CounterfeitReasonCode>;
  readonly reasonDisplayName?: Maybe<Scalars['String']>;
  readonly reasonExplanation?: Maybe<Scalars['String']>;
  readonly subcategoryMessage?: Maybe<Scalars['String']>;
};

export type Country = {
  readonly __typename?: 'Country';
  readonly code: CountryCode;
  readonly gmvRank?: Maybe<Scalars['Int']>;
  readonly hasWishReturnFacility: Scalars['Boolean'];
  readonly isEuVat: Scalars['Boolean'];
  readonly isFinalSaleAllowed: Scalars['Boolean'];
  readonly isInEurope: Scalars['Boolean'];
  readonly isMerchantReturnWishAuthAllowed: Scalars['Boolean'];
  readonly name: Scalars['String'];
  readonly regions?: Maybe<ReadonlyArray<Region>>;
  readonly restrictedProductRegion?: Maybe<RestrictedProductRegion>;
  readonly wishExpress: WishExpressCountryDetails;
};


export type CountryNameArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type CountryActionInput = {
  readonly action: CountryActionType;
  readonly countryCode: ShippableCountryCode;
  readonly data?: InputMaybe<Scalars['String']>;
};

export type CountryActionType =
  | 'ADD'
  | 'DELETE'
  | 'UPDATE';

export type CountryAvailableShippingProviders = {
  readonly __typename?: 'CountryAvailableShippingProviders';
  readonly country: Country;
  readonly providers: ReadonlyArray<ShippingProviderSchema>;
};

export type CountryCode =
  | 'AD'
  | 'AE'
  | 'AF'
  | 'AG'
  | 'AI'
  | 'AL'
  | 'AM'
  | 'AN'
  | 'AO'
  | 'AQ'
  | 'AR'
  | 'AS'
  | 'AT'
  | 'AU'
  | 'AW'
  | 'AX'
  | 'AZ'
  | 'BA'
  | 'BB'
  | 'BD'
  | 'BE'
  | 'BF'
  | 'BG'
  | 'BH'
  | 'BI'
  | 'BJ'
  | 'BL'
  | 'BM'
  | 'BN'
  | 'BO'
  | 'BQ'
  | 'BR'
  | 'BS'
  | 'BT'
  | 'BV'
  | 'BW'
  | 'BY'
  | 'BZ'
  | 'CA'
  | 'CC'
  | 'CD'
  | 'CF'
  | 'CG'
  | 'CH'
  | 'CI'
  | 'CK'
  | 'CL'
  | 'CM'
  | 'CN'
  | 'CO'
  | 'CR'
  | 'CV'
  | 'CW'
  | 'CX'
  | 'CY'
  | 'CZ'
  | 'DE'
  | 'DJ'
  | 'DK'
  | 'DM'
  | 'DO'
  | 'DZ'
  | 'EC'
  | 'EE'
  | 'EG'
  | 'EH'
  | 'ER'
  | 'ES'
  | 'ET'
  | 'FI'
  | 'FJ'
  | 'FK'
  | 'FM'
  | 'FO'
  | 'FR'
  | 'FX'
  | 'GA'
  | 'GB'
  | 'GD'
  | 'GE'
  | 'GF'
  | 'GG'
  | 'GH'
  | 'GI'
  | 'GL'
  | 'GM'
  | 'GN'
  | 'GP'
  | 'GQ'
  | 'GR'
  | 'GS'
  | 'GT'
  | 'GU'
  | 'GW'
  | 'GY'
  | 'HK'
  | 'HM'
  | 'HN'
  | 'HR'
  | 'HT'
  | 'HU'
  | 'ID'
  | 'IE'
  | 'IL'
  | 'IM'
  | 'IN'
  | 'IO'
  | 'IQ'
  | 'IS'
  | 'IT'
  | 'JE'
  | 'JM'
  | 'JO'
  | 'JP'
  | 'KE'
  | 'KG'
  | 'KH'
  | 'KI'
  | 'KM'
  | 'KN'
  | 'KR'
  | 'KW'
  | 'KY'
  | 'KZ'
  | 'LA'
  | 'LB'
  | 'LC'
  | 'LI'
  | 'LK'
  | 'LR'
  | 'LS'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'LY'
  | 'MA'
  | 'MC'
  | 'MD'
  | 'ME'
  | 'MF'
  | 'MG'
  | 'MH'
  | 'MK'
  | 'ML'
  | 'MM'
  | 'MN'
  | 'MO'
  | 'MP'
  | 'MQ'
  | 'MR'
  | 'MS'
  | 'MT'
  | 'MU'
  | 'MV'
  | 'MW'
  | 'MX'
  | 'MY'
  | 'MZ'
  | 'NA'
  | 'NC'
  | 'NE'
  | 'NF'
  | 'NG'
  | 'NI'
  | 'NL'
  | 'NO'
  | 'NP'
  | 'NR'
  | 'NU'
  | 'NZ'
  | 'OM'
  | 'PA'
  | 'PE'
  | 'PF'
  | 'PG'
  | 'PH'
  | 'PK'
  | 'PL'
  | 'PM'
  | 'PN'
  | 'PR'
  | 'PS'
  | 'PT'
  | 'PW'
  | 'PY'
  | 'QA'
  | 'RE'
  | 'RO'
  | 'RS'
  | 'RU'
  | 'RW'
  | 'SA'
  | 'SB'
  | 'SC'
  | 'SD'
  | 'SE'
  | 'SG'
  | 'SH'
  | 'SI'
  | 'SJ'
  | 'SK'
  | 'SL'
  | 'SM'
  | 'SN'
  | 'SO'
  | 'SR'
  | 'ST'
  | 'SV'
  | 'SX'
  | 'SZ'
  | 'TC'
  | 'TD'
  | 'TF'
  | 'TG'
  | 'TH'
  | 'TJ'
  | 'TK'
  | 'TM'
  | 'TN'
  | 'TO'
  | 'TP'
  | 'TR'
  | 'TT'
  | 'TV'
  | 'TW'
  | 'TZ'
  | 'UA'
  | 'UG'
  | 'UK'
  | 'UM'
  | 'US'
  | 'UY'
  | 'UZ'
  | 'VA'
  | 'VC'
  | 'VE'
  | 'VG'
  | 'VI'
  | 'VN'
  | 'VU'
  | 'WF'
  | 'WS'
  | 'YE'
  | 'YT'
  | 'YU'
  | 'ZA'
  | 'ZM'
  | 'ZR'
  | 'ZW';

export type CountryEprSchema = {
  readonly __typename?: 'CountryEPRSchema';
  readonly categories: ReadonlyArray<CategoryEprSchema>;
  readonly categoriesWithEpr: Scalars['Int'];
  readonly categoriesWithoutEpr: Scalars['Int'];
  readonly country: Country;
  readonly hasAcceptedTos: Scalars['Boolean'];
  readonly tos: Scalars['String'];
};

export type CountryShippingInput = {
  readonly additionalPrice?: InputMaybe<CurrencyInput>;
  readonly countryCode: CountryCode;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly price?: InputMaybe<CurrencyInput>;
  readonly regionShipping?: InputMaybe<ReadonlyArray<RegionShippingInput>>;
  readonly timeToDoor?: InputMaybe<Scalars['Int']>;
};

export type CountryShippingSchema = {
  readonly __typename?: 'CountryShippingSchema';
  readonly additionalPrice?: Maybe<CurrencyValue>;
  readonly country: Country;
  readonly enabled: Scalars['Boolean'];
  readonly price?: Maybe<CurrencyValue>;
  readonly regionShipping?: Maybe<ReadonlyArray<RegionShippingSchema>>;
  readonly timeToDoor?: Maybe<Scalars['Int']>;
  readonly wishExpressTtdRequirement?: Maybe<Scalars['Int']>;
};

export type CountryShippingSetting = {
  readonly countryCode: ShippableCountryCode;
  readonly enabled: Scalars['Boolean'];
  readonly price?: InputMaybe<CurrencyInput>;
};

export type CreateAnnouncementContentSchemaInput = {
  readonly ctaDueDate?: InputMaybe<DatetimeInput>;
  readonly ctaText?: InputMaybe<Scalars['String']>;
  readonly link?: InputMaybe<Scalars['String']>;
  readonly locale: AnnouncementLocale;
  readonly message: Scalars['String'];
  readonly title: Scalars['String'];
};

export type CreateBdBaseAnnouncement = {
  readonly __typename?: 'CreateBDBaseAnnouncement';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateBrandEnrollmentInput = {
  readonly brandOwnerName: Scalars['String'];
  readonly brandRepName: Scalars['String'];
  readonly brandRepTitle: Scalars['String'];
  readonly email: Scalars['String'];
  readonly isNewBrand: Scalars['Boolean'];
  readonly phoneNumber: Scalars['String'];
  readonly proofOfAuthorizations: ReadonlyArray<FileInput>;
  readonly proposedBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly providedBrandAdditionalInfo?: InputMaybe<Scalars['String']>;
  readonly providedBrandLogoFile?: InputMaybe<FileInput>;
  readonly providedBrandName: Scalars['String'];
  readonly providedBrandWebsite?: InputMaybe<Scalars['String']>;
  readonly trademarkInfos: ReadonlyArray<BrandPartnerTrademarkInfoInputObject>;
};

export type CreateBrandEnrollmentRequest = {
  readonly __typename?: 'CreateBrandEnrollmentRequest';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateBulkOneoffAdminToolPayments = {
  readonly __typename?: 'CreateBulkOneoffAdminToolPayments';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateBulkOneoffAdminToolPaymentsInput = {
  readonly s3FileUrl: Scalars['String'];
};

export type CreateChargeTransactionInput = {
  readonly amount: CurrencyInput;
  readonly flowType: ChargeTransactionType;
  readonly redirectUrl?: InputMaybe<Scalars['String']>;
  readonly type: ChargeItemType;
};

export type CreateChargeTransactionMutation = {
  readonly __typename?: 'CreateChargeTransactionMutation';
  readonly chargeId?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateClaim = {
  readonly __typename?: 'CreateClaim';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateClaimInput = {
  readonly claimReason: ReturnRequestClaimReason;
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly otherReasonExplanation?: InputMaybe<Scalars['String']>;
  readonly supportingDocument?: InputMaybe<Scalars['String']>;
};

export type CreateLqdCampaign = {
  readonly __typename?: 'CreateLQDCampaign';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateNotice = {
  readonly __typename?: 'CreateNotice';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateNoticeInput = {
  readonly description: Scalars['String'];
  readonly notifierEmail: Scalars['String'];
  readonly notifierName: Scalars['String'];
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly supportFiles?: InputMaybe<ReadonlyArray<FileInput>>;
};

export type CreateNotifier = {
  readonly __typename?: 'CreateNotifier';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateNotifierInput = {
  readonly countryCodes: ReadonlyArray<CountryCode>;
  readonly email: Scalars['String'];
  readonly isTrustedFlagger?: InputMaybe<Scalars['Boolean']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly notifierType: NotifierType;
  readonly organization: Scalars['String'];
};

export type CreateProductTaxonomyCategoryDispute = {
  readonly __typename?: 'CreateProductTaxonomyCategoryDispute';
  readonly ok: Scalars['Boolean'];
  readonly productDisputeEligibility: ProductTaxonomyCategoryDisputeEligibilityEnum;
};

export type CreateProductTaxonomyCategoryDisputeInput = {
  readonly categoryIdProposed: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly merchantNote?: InputMaybe<Scalars['String']>;
  readonly productId: Scalars['ObjectIdType'];
  readonly supportFiles?: InputMaybe<ReadonlyArray<FileInput>>;
};

export type CreateProductsDownloadJobInput = {
  readonly eventId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly promotionType: MfpCampaignPromotionType;
};

export type CreateProductsDownloadJobMutation = {
  readonly __typename?: 'CreateProductsDownloadJobMutation';
  readonly jobId?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateShippingPlan = {
  readonly __typename?: 'CreateShippingPlan';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingPlan?: Maybe<ShippingPlanSchema>;
};

export type CreateShippingProvider = {
  readonly __typename?: 'CreateShippingProvider';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingProvider?: Maybe<ShippingProviderSchema>;
};

export type CreateSystemUpdateBaseAnnouncement = {
  readonly __typename?: 'CreateSystemUpdateBaseAnnouncement';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateSystemUpdateBaseAnnouncementInput = {
  readonly audienceGroups?: InputMaybe<ReadonlyArray<AudienceGroup>>;
  readonly audienceSourceType: AnnouncementAudienceSourceType;
  readonly categories: ReadonlyArray<AnnouncementCategory>;
  readonly content: ReadonlyArray<CreateAnnouncementContentSchemaInput>;
  readonly contentType?: InputMaybe<AnnouncementContentType>;
  readonly csvFields?: InputMaybe<AnnouncementCsvFieldsSchemaInput>;
  readonly expiryDate?: InputMaybe<DatetimeInput>;
  readonly locales: ReadonlyArray<AnnouncementLocale>;
  readonly merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly overrideEmailPreference: Scalars['Boolean'];
  readonly program?: InputMaybe<AnnouncementProgram>;
  readonly publishDate?: InputMaybe<DatetimeInput>;
};

export type CreateTakedownRequest = {
  readonly __typename?: 'CreateTakedownRequest';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly takedownRequestId?: Maybe<Scalars['ObjectIdType']>;
};

export type CreateTakedownRequestInput = {
  readonly brandPartnerBrandInfoId: Scalars['ObjectIdType'];
  readonly notes?: InputMaybe<Scalars['String']>;
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly typeOfInfringement: TypeOfInfringement;
};

export type CreateUin = {
  readonly __typename?: 'CreateUin';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreateUinInput = {
  readonly category: Scalars['Int'];
  readonly country: CountryCode;
  readonly responsibleEntityName: Scalars['String'];
  readonly uin: Scalars['String'];
};

export type CreateWhitelistProductsInput = {
  readonly merchantId: Scalars['ObjectIdType'];
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type CreateWhitelistProductsMutation = {
  readonly __typename?: 'CreateWhitelistProductsMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type CreditPaymentType =
  | 'ENROLLMENT_FEE'
  | 'IMPRESSION_FEE'
  | 'OTHER';

export type CreditTransactionRecord = {
  readonly __typename?: 'CreditTransactionRecord';
  readonly campaignId?: Maybe<Scalars['ObjectIdType']>;
  readonly dateCreated: Datetime;
  readonly expiredDate?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly paymentType?: Maybe<CreditPaymentType>;
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
  readonly receiptId?: Maybe<Scalars['ObjectIdType']>;
  readonly transactionAmount?: Maybe<CurrencyValue>;
  readonly updateReasonDescription: Scalars['String'];
  readonly updatedReason: CreditUpdateReason;
};

export type CreditUpdateReason =
  | 'ISSUING_CREDITS'
  | 'PAYMENT_BY_CREDITS'
  | 'REFUND';

export type CsvColumnMappingEntryInput = {
  readonly key: Scalars['String'];
  readonly value: Scalars['Int'];
};

export type CsvColumnMappingEntrySchema = {
  readonly __typename?: 'CsvColumnMappingEntrySchema';
  readonly key: Scalars['String'];
  readonly value: Scalars['Int'];
};

export type CsvFulfillmentErrorSchema = {
  readonly __typename?: 'CsvFulfillmentErrorSchema';
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly row: Scalars['String'];
};

export type CsvFulfillmentJobSchema = {
  readonly __typename?: 'CsvFulfillmentJobSchema';
  readonly csvUrl: Scalars['String'];
  readonly errorCount: Scalars['Int'];
  readonly errors?: Maybe<ReadonlyArray<CsvFulfillmentErrorSchema>>;
  readonly fileName?: Maybe<Scalars['String']>;
  readonly fulfilledCount: Scalars['Int'];
  readonly id: Scalars['ObjectIdType'];
  readonly processedCount: Scalars['Int'];
  readonly startTime: Datetime;
  readonly status: MerchantFeedJobStatus;
  readonly totalRows: Scalars['Int'];
};

export type CurrencyInput = {
  readonly amount: Scalars['Float'];
  readonly currencyCode: PaymentCurrencyCode;
};

export type CurrencyValue = {
  readonly __typename?: 'CurrencyValue';
  readonly amount: Scalars['Float'];
  readonly convertedTo: CurrencyValue;
  readonly currencyCode: Scalars['String'];
  readonly display: Scalars['String'];
};


export type CurrencyValueConvertedToArgs = {
  currency: PaymentCurrencyCode;
  rate: ConversionRate;
};

export type CustomerIdentityInfo = {
  readonly __typename?: 'CustomerIdentityInfo';
  readonly number: Scalars['String'];
  readonly numberName: Scalars['String'];
};

export type CustomerPaymentSchema = {
  readonly __typename?: 'CustomerPaymentSchema';
  readonly id?: Maybe<Scalars['String']>;
  readonly paymentProvider: TransactionPaymentType;
};

export type CustomerPriceSchema = {
  readonly __typename?: 'CustomerPriceSchema';
  readonly credit?: Maybe<CurrencyValue>;
  readonly total: CurrencyValue;
  readonly unitPrice: CurrencyValue;
  readonly unitShipping: CurrencyValue;
};


export type CustomerPriceSchemaCreditArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type CustomerPriceSchemaTotalArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type CustomerPriceSchemaUnitPriceArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type CustomerPriceSchemaUnitShippingArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerSchema = {
  readonly __typename?: 'CustomerSchema';
  readonly payment: CustomerPaymentSchema;
  readonly pricing: CustomerPriceSchema;
  readonly user?: Maybe<WishUserSchema>;
};

export type CustomerSupportConstants = {
  readonly __typename?: 'CustomerSupportConstants';
  readonly issues: ReadonlyArray<CustomerSupportIssueType>;
};

export type CustomerSupportIssueType = {
  readonly __typename?: 'CustomerSupportIssueType';
  readonly id: Scalars['Int'];
  readonly label: Scalars['String'];
};

export type CustomerSupportServiceSchema = {
  readonly __typename?: 'CustomerSupportServiceSchema';
  readonly ticket?: Maybe<CustomerSupportTicket>;
  readonly ticketCount: Scalars['Int'];
  readonly tickets: ReadonlyArray<CustomerSupportTicket>;
};


export type CustomerSupportServiceSchemaTicketArgs = {
  id: Scalars['ObjectIdType'];
};


export type CustomerSupportServiceSchemaTicketCountArgs = {
  includeMissingTicketType?: InputMaybe<Scalars['Boolean']>;
  issueTypes?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  query?: InputMaybe<Scalars['String']>;
  requestTypes?: InputMaybe<ReadonlyArray<CustomerSupportTicketRequestType>>;
  searchType?: InputMaybe<TicketSearchType>;
  states?: InputMaybe<ReadonlyArray<CustomerSupportTicketState>>;
  types?: InputMaybe<ReadonlyArray<CustomerSupportTicketType>>;
};


export type CustomerSupportServiceSchemaTicketsArgs = {
  includeMissingTicketType?: InputMaybe<Scalars['Boolean']>;
  issueTypes?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  requestTypes?: InputMaybe<ReadonlyArray<CustomerSupportTicketRequestType>>;
  searchType?: InputMaybe<TicketSearchType>;
  sort?: InputMaybe<CustomerSupportTicketSort>;
  states?: InputMaybe<ReadonlyArray<CustomerSupportTicketState>>;
  types?: InputMaybe<ReadonlyArray<CustomerSupportTicketType>>;
};

export type CustomerSupportTicket = {
  readonly __typename?: 'CustomerSupportTicket';
  readonly closeDate?: Maybe<Datetime>;
  readonly createdTime: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly issueType?: Maybe<CustomerSupportIssueType>;
  readonly lastUpdateTime?: Maybe<Datetime>;
  readonly orderId?: Maybe<Scalars['ObjectIdType']>;
  readonly replies?: Maybe<ReadonlyArray<CustomerSupportTicketReplySchema>>;
  readonly requestType?: Maybe<CustomerSupportTicketRequestType>;
  readonly returnInformation?: Maybe<ReturnInformationSchema>;
  readonly state: CustomerSupportTicketState;
  readonly timeToRespond?: Maybe<Timedelta>;
  readonly type?: Maybe<CustomerSupportTicketType>;
  readonly user: WishUserSchema;
};

export type CustomerSupportTicketCancelReturnReasonSchema = {
  readonly __typename?: 'CustomerSupportTicketCancelReturnReasonSchema';
  readonly reason: ReturnRequestCancelReason;
};

export type CustomerSupportTicketIssueRefundReasonSchema = {
  readonly __typename?: 'CustomerSupportTicketIssueRefundReasonSchema';
  readonly reason: ReturnRequestRefundReason;
  readonly reasonText: Scalars['String'];
};

export type CustomerSupportTicketMutations = {
  readonly __typename?: 'CustomerSupportTicketMutations';
  readonly authorizeReturn?: Maybe<AuthorizeReturn>;
  readonly cancelReturn?: Maybe<CancelReturn>;
  readonly contactBuyer?: Maybe<ContactBuyer>;
  readonly createClaim?: Maybe<CreateClaim>;
  readonly issueRefund?: Maybe<IssueRefund>;
  readonly rejectReturn?: Maybe<RejectReturn>;
};


export type CustomerSupportTicketMutationsAuthorizeReturnArgs = {
  input: AuthorizeReturnInput;
};


export type CustomerSupportTicketMutationsCancelReturnArgs = {
  input: CancelReturnInput;
};


export type CustomerSupportTicketMutationsContactBuyerArgs = {
  input: ContactBuyerInput;
};


export type CustomerSupportTicketMutationsCreateClaimArgs = {
  input: CreateClaimInput;
};


export type CustomerSupportTicketMutationsIssueRefundArgs = {
  input: IssueRefundInput;
};


export type CustomerSupportTicketMutationsRejectReturnArgs = {
  input: RejectReturnInput;
};

export type CustomerSupportTicketReplyMessageType =
  | 'ACCEPT_REPLACEMENT_REQUEST'
  | 'ADMIN_DELEGATE'
  | 'ADMIN_REPLY'
  | 'ADMIN_REQUEST_REFUND_CONFIRMATION'
  | 'ADMIN_REQUEST_SUPER'
  | 'AUTO_BOUNCED_TO_ADMIN'
  | 'AUTO_BOUNCED_TO_ADMIN_24'
  | 'AUTO_BOUNCED_TO_ADMIN_120'
  | 'CANCELLED_REPLACEMENT_REQUEST'
  | 'CHANGE_LOCALE_REPLY'
  | 'CLOSE_REPLY'
  | 'COMMENT'
  | 'DECLINE_REPLACEMENT_REQUEST'
  | 'ESCALATE_TO_FRAUD_INTERNAL'
  | 'ESCALATE_TO_INTERNAL'
  | 'ESCALATE_TO_MERCHANT'
  | 'EXPIRED_REPLACEMENT_REQUEST'
  | 'GURU_LINK'
  | 'HIDDEN_TO_MERCHANT_ADMIN_REPLY'
  | 'LOGGED_OUT_FORM_CREATION_MESSAGE'
  | 'MANUAL_REFUND_CONFIRMATION'
  | 'MERCHANT_APPEAL_TO_SUPPORT'
  | 'MERGED'
  | 'MESSAGE_TO_ADMIN'
  | 'MOVE_TO_FRAUD_QUEUE'
  | 'MOVE_TO_ORIGINAL_QUEUE'
  | 'REFUND_CONFIRMATION'
  | 'RELABEL_REPLY'
  | 'REOPENED'
  | 'REPORT_STORE'
  | 'REQUIRE_REVIEW_MERCHANT_REPLY'
  | 'TEXT_REPLY'
  | 'USER_APPEAL_TO_SUPPORT'
  | 'WISH_APPEAL_TO_SUPPORT';

export type CustomerSupportTicketReplySchema = {
  readonly __typename?: 'CustomerSupportTicketReplySchema';
  readonly date?: Maybe<Datetime>;
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly imageUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly message: Scalars['String'];
  readonly messageType: CustomerSupportTicketReplyMessageType;
  readonly replyAttachments: ReadonlyArray<MerchantFileSchema>;
  readonly senderTitle: Scalars['String'];
  readonly senderType: CustomerSupportTicketReplySenderType;
  readonly userLocale?: Maybe<Scalars['String']>;
  readonly visibleToUser: Scalars['Boolean'];
};

export type CustomerSupportTicketReplySenderType =
  | 'ADMIN'
  | 'AUTO'
  | 'FAKE_AS_ADMIN'
  | 'LIVE_CHAT'
  | 'MERCHANT'
  | 'SHIP_PROVIDER'
  | 'USER'
  | 'WISH_ASSISTANT';

export type CustomerSupportTicketRequestType =
  | 'CLAIM'
  | 'OTHERS'
  | 'REFUND_REQUEST'
  | 'RETURN_REQUEST';

export type CustomerSupportTicketSort = {
  readonly field: TicketSortFieldType;
  readonly order: SortOrderType;
};

export type CustomerSupportTicketState =
  | 'ADMIN'
  | 'AWAITING_FRAUD'
  | 'AWAITING_MERCHANT'
  | 'AWAITING_REFUND_CONFIRMATION'
  | 'AWAITING_SHIP_PROVIDER'
  | 'AWAITING_USER'
  | 'CLOSED'
  | 'DELAYED'
  | 'ESCALATED_TO_FRAUD_INTERNAL'
  | 'ESCALATED_TO_INTERNAL'
  | 'MANUAL_REFUND_CONFIRMATION'
  | 'NEW'
  | 'PERM_CLOSED'
  | 'RETURN_AUTO_TICKET'
  | 'REVIEW_MERCHANT_REPLY'
  | 'SUPER_ADMIN';

export type CustomerSupportTicketType =
  | 'NON_ORDER'
  | 'ORDER'
  | 'POST_CUSTOMER_SUPPORT'
  | 'PRE_PURCHASE';

export type DsaCannedResponseSchema = {
  readonly __typename?: 'DSACannedResponseSchema';
  readonly content: Scalars['String'];
  readonly name: Scalars['String'];
};

export type DsaHub = {
  readonly __typename?: 'DSAHub';
  readonly notice?: Maybe<NoticeSchema>;
  readonly noticeCount: Scalars['Int'];
  readonly notices: ReadonlyArray<NoticeSchema>;
  readonly notifierCount: Scalars['Int'];
  readonly notifierOrganizations: ReadonlyArray<Scalars['String']>;
  readonly notifiers: ReadonlyArray<NotifierSchema>;
  readonly reviewCannedResponses: ReadonlyArray<DsaCannedResponseSchema>;
};


export type DsaHubNoticeArgs = {
  noticeId: Scalars['ObjectIdType'];
};


export type DsaHubNoticeCountArgs = {
  queryInput: NoticeQueryInput;
};


export type DsaHubNoticesArgs = {
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  queryInput: NoticeQueryInput;
};


export type DsaHubNotifierCountArgs = {
  queryInput: NotifierQueryInput;
};


export type DsaHubNotifiersArgs = {
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
  queryInput: NotifierQueryInput;
};

export type DsaMutations = {
  readonly __typename?: 'DSAMutations';
  readonly claimNotices?: Maybe<ClaimNotices>;
  readonly completeDisputeReview?: Maybe<CompleteDisputeReview>;
  readonly completeNoticeReview?: Maybe<CompleteNoticeReview>;
  readonly createNotifier?: Maybe<CreateNotifier>;
  readonly public?: Maybe<PublicDsaMutations>;
  readonly removeNotifier?: Maybe<RemoveNotifier>;
  readonly unclaimNotices?: Maybe<UnclaimNotices>;
  readonly updateNotifier?: Maybe<UpdateNotifier>;
};


export type DsaMutationsClaimNoticesArgs = {
  input: ClaimNoticesInput;
};


export type DsaMutationsCompleteDisputeReviewArgs = {
  input: CompleteDisputeReviewInput;
};


export type DsaMutationsCompleteNoticeReviewArgs = {
  input: CompleteNoticeReviewInput;
};


export type DsaMutationsCreateNotifierArgs = {
  input: CreateNotifierInput;
};


export type DsaMutationsRemoveNotifierArgs = {
  input: RemoveNotifierInput;
};


export type DsaMutationsUnclaimNoticesArgs = {
  input: UnclaimNoticesInput;
};


export type DsaMutationsUpdateNotifierArgs = {
  input: UpdateNotifierInput;
};

export type Datetime = {
  readonly __typename?: 'Datetime';
  readonly datetime: Scalars['String'];
  readonly formatted: Scalars['String'];
  readonly hasPassed: Scalars['Boolean'];
  readonly inTimezone: Datetime;
  readonly iso8061: Scalars['String'];
  readonly mmddyyyy: Scalars['String'];
  readonly timeSince: Timedelta;
  readonly timeUntil: Timedelta;
  readonly timezone: Scalars['String'];
  readonly unix: Scalars['Int'];
};


export type DatetimeFormattedArgs = {
  fmt?: InputMaybe<Scalars['String']>;
};


export type DatetimeInTimezoneArgs = {
  identifier: Scalars['String'];
};

export type DatetimeInput = {
  readonly fmt?: InputMaybe<Scalars['String']>;
  readonly formatted?: InputMaybe<Scalars['String']>;
  readonly iso8061?: InputMaybe<Scalars['String']>;
  readonly unix?: InputMaybe<Scalars['Int']>;
};

export type DeciderKeySchema = {
  readonly __typename?: 'DeciderKeySchema';
  readonly decideForName: Scalars['Boolean'];
};


export type DeciderKeySchemaDecideForNameArgs = {
  name: Scalars['String'];
};

export type DedupImageLibraryHub = {
  readonly __typename?: 'DedupImageLibraryHub';
  readonly imageCount: Scalars['Int'];
  readonly images: ReadonlyArray<DedupImageSchema>;
};


export type DedupImageLibraryHubImageCountArgs = {
  imageType: DedupImageType;
  inappropriateReasons?: InputMaybe<ReadonlyArray<CounterfeitReasonCode>>;
  inappropriateSubcategories?: InputMaybe<ReadonlyArray<TaggingViolationSubReasonCode>>;
  lastUpdateTimeEnd?: InputMaybe<DatetimeInput>;
  lastUpdateTimeStart?: InputMaybe<DatetimeInput>;
  query?: InputMaybe<Scalars['String']>;
};


export type DedupImageLibraryHubImagesArgs = {
  imageType: DedupImageType;
  inappropriateReasons?: InputMaybe<ReadonlyArray<CounterfeitReasonCode>>;
  inappropriateSubcategories?: InputMaybe<ReadonlyArray<TaggingViolationSubReasonCode>>;
  lastUpdateTimeEnd?: InputMaybe<DatetimeInput>;
  lastUpdateTimeStart?: InputMaybe<DatetimeInput>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  sort?: InputMaybe<DedupImageSort>;
};

export type DedupImageSchema = {
  readonly __typename?: 'DedupImageSchema';
  readonly brand?: Maybe<BrandSchema>;
  readonly counterfeitReason?: Maybe<TaggingViolationReason>;
  readonly counterfeitSubcategory?: Maybe<TaggingViolationSubcategory>;
  readonly createdTime: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly imagePhash: Scalars['String'];
  readonly imageType: DedupImageType;
  readonly inappropriateReason?: Maybe<TaggingViolationReason>;
  readonly inappropriateSubcategory?: Maybe<TaggingViolationSubcategory>;
  readonly sampleImageUrl?: Maybe<Scalars['String']>;
  readonly source?: Maybe<DedupSource>;
  readonly updateTime: Datetime;
};

export type DedupImageSort = {
  readonly field: DedupImageSortFieldType;
  readonly order: SortOrderType;
};

export type DedupImageSortFieldType =
  | 'BRAND_NAME'
  | 'CREATED_TIME'
  | 'LAST_UPDATE';

export type DedupImageType =
  | 'INAPPROPRIATE'
  | 'IP_VIOLATION';

export type DedupSource =
  | 'AUDIT_FEEDBACK'
  | 'MANUALLY_ADDED'
  | 'MANUAL_TAG'
  | 'TAKEDOWN_REQUEST';

export type DefaultShippingInput = {
  readonly price: CurrencyInput;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type DefaultShippingSchema = {
  readonly __typename?: 'DefaultShippingSchema';
  readonly price: CurrencyValue;
  readonly timeToDoor?: Maybe<Scalars['Int']>;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type DeleteAllDevicesMutation = {
  readonly __typename?: 'DeleteAllDevicesMutation';
  readonly deletedDeviceIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly deletedSessionIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly error?: Maybe<Scalars['String']>;
};

export type DeleteBrandEnrollment = {
  readonly __typename?: 'DeleteBrandEnrollment';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteBrandEnrollmentInput = {
  readonly brandInfoId: Scalars['ObjectIdType'];
};

export type DeleteDedupImage = {
  readonly __typename?: 'DeleteDedupImage';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteDedupImageInput = {
  readonly imageIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type DeleteDeviceInput = {
  readonly deviceId: Scalars['ObjectIdType'];
};

export type DeleteDeviceMutation = {
  readonly __typename?: 'DeleteDeviceMutation';
  readonly error?: Maybe<Scalars['String']>;
};

export type DeleteMerchantSenderAddressInput = {
  readonly merchantSenderAddressId: Scalars['ObjectIdType'];
};

export type DeleteMerchantSenderAddressMutation = {
  readonly __typename?: 'DeleteMerchantSenderAddressMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteMerchantWarehouseInput = {
  readonly id: Scalars['ObjectIdType'];
};

export type DeleteMerchantWarehouseMutation = {
  readonly __typename?: 'DeleteMerchantWarehouseMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteProductPostsInput = {
  readonly postIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type DeleteProductPostsMutation = {
  readonly __typename?: 'DeleteProductPostsMutation';
  readonly errorCode?: Maybe<ProductPostErrorCode>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteUin = {
  readonly __typename?: 'DeleteUin';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteUinInput = {
  readonly id: Scalars['ObjectIdType'];
};

export type DeleteWebhookSubscription = {
  readonly __typename?: 'DeleteWebhookSubscription';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DeleteWebhookSubscriptionInput = {
  readonly subscriptionId: Scalars['ObjectIdType'];
};

export type DeliveryCarrierUpsertInput = {
  readonly carrierId: Scalars['Int'];
  readonly countries: ReadonlyArray<CountryActionInput>;
  readonly date: Scalars['String'];
  readonly extraCountryData?: InputMaybe<ExtraCountryDataInput>;
  readonly reason?: InputMaybe<Scalars['String']>;
};

export type DeliveryPerformanceStats = {
  readonly __typename?: 'DeliveryPerformanceStats';
  readonly endDate: Datetime;
  readonly ordersConfirmedDelivered?: Maybe<Scalars['Int']>;
  readonly ordersConfirmedDeliveredRate?: Maybe<Scalars['Float']>;
  readonly shippingTime?: Maybe<Timedelta>;
  readonly startDate: Datetime;
  readonly timeToDoor?: Maybe<Timedelta>;
};

export type DestinationShippingProfileInput = {
  readonly destination?: InputMaybe<Scalars['String']>;
  readonly displayName?: InputMaybe<Scalars['String']>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly maxHoursToDoor?: InputMaybe<Scalars['Int']>;
  readonly rate?: InputMaybe<CurrencyInput>;
  readonly shippingDetailsPerDestination?: InputMaybe<ReadonlyArray<DestinationShippingProfileInput>>;
};

export type DestinationShippingProfileSchema = {
  readonly __typename?: 'DestinationShippingProfileSchema';
  readonly destination: Scalars['String'];
  readonly displayName: Scalars['String'];
  readonly enabled: Scalars['Boolean'];
  readonly maxHoursToDoor: Scalars['Int'];
  readonly rate: CurrencyValue;
  readonly shippingDetailsPerDestination?: Maybe<ReadonlyArray<DestinationShippingProfileSchema>>;
};

export type DetailedMerchantWarningReason =
  | 'BAD_CUSTOMER_SERVICE'
  | 'BAN_EARLY_STAGE_MERCHANT'
  | 'BRANDED_PRODUCT_GEOBLOCK'
  | 'CN_PROHIBITED_PRODUCTS'
  | 'CONFIRMED_DELIVERY_POLICY'
  | 'COUNTERFEIT_GOODS'
  | 'CS_LATE_RESPONSE_RATE'
  | 'CS_LOW_CSAT_SCORE'
  | 'DECEPTIVE_FULFILLMENT'
  | 'DEP_BAIT_VARIABLE_PRICING'
  | 'DEP_FINE_DISABLE_PROMOTED_PRODUCT'
  | 'DEP_FINE_DISABLE_PROMOTED_PRODUCT_FOR_COUNTRY'
  | 'DISINGENUOUS_CUSTOMER_SERVICE'
  | 'DUPLICATE_ACCOUNTS'
  | 'DUPLICATE_PRODUCTS'
  | 'EMPTY_PACKAGES'
  | 'EXTREMELY_HIGH_PRICE_SPREAD'
  | 'FAKE_RATING'
  | 'FAKE_TRACKING'
  | 'FINAL_JUDGEMENT_ORDER'
  | 'FINE_FOR_COUNTERFEIT_GOODS'
  | 'FINE_PRODUCT_SWAPPED'
  | 'FINE_UPDATE_TO_COUNTERFEIT'
  | 'FINE_WISH_EXPRESS_POLICY_VIOLATION'
  | 'HIGH_AUTO_REFUND'
  | 'HIGH_CHARGEBACK_AND_FRAUD_REFUND_RATIO'
  | 'HIGH_CHARGEBACK_RATIO'
  | 'HIGH_GMV_FROM_GAMING_AUDIT'
  | 'HIGH_GMV_FROM_GAMING_BAN'
  | 'HIGH_GMV_FROM_GAMING_FREEZE'
  | 'HIGH_GMV_FROM_MISLEADING_PRODUCTS'
  | 'HIGH_IP_INFRINGEMENT'
  | 'HIGH_REFUND_RATIO'
  | 'HIGH_RISK_PROHIBITED_PRODUCT'
  | 'INACTIVE_ACCOUNT'
  | 'INVALID_EU_RESPONSIBLE_PERSON'
  | 'INVALID_TRACKING_NUMBERS'
  | 'LATE_CONFIRMED_FULFILLMENT_VIOLATION'
  | 'LATE_FULFILLMENT_RATE'
  | 'LEGAL_TRO_TAKEDOWN'
  | 'MERCHANT_CANCELLATION_VIOLATION'
  | 'MERCHANT_CONTACT_INFO_INVALID'
  | 'MERCHANT_HARASSMENT'
  | 'MERCHANT_HIGH_CANCEL_ORDER_RATE'
  | 'MERCHANT_HIGH_QUALITY_REFUND_RATIO'
  | 'MERCHANT_HIGH_REFUND_EAT_COST'
  | 'MISLEADING_LISTING'
  | 'MISLEADING_VARIATION'
  | 'ORDER_NOT_DELIVERED'
  | 'PENALTY_FOR_AUTO_REFUND'
  | 'POLICY_TIER_DEMOTION'
  | 'PRODUCT_GEOBLOCK'
  | 'PRODUCT_HIGH_CANCEL_ORDER_RATE'
  | 'PRODUCT_HIGH_QUALITY_REFUND_RATIO'
  | 'PRODUCT_HIGH_REFUND_RATIO'
  | 'PRODUCT_HIGH_REFUND_RATIO_NO_REMOVE'
  | 'PRODUCT_IS_INAPPROPRIATE'
  | 'PRODUCT_LOW_RATING'
  | 'PRODUCT_LOW_RATING_NO_REMOVE'
  | 'PROHIBITED_PRODUCT'
  | 'RELATED_ACCOUNT_IS_BANNED'
  | 'REPEAT_IP_INFRINGEMENT_ON_BRAND_OWNER'
  | 'REPEAT_PRODUCT_SWAPPING'
  | 'REQUEST_MONEY'
  | 'REQUEST_USER_EMAIL'
  | 'RESPOND_TO_ADMIN'
  | 'REUPLOADING_COUNTERFEITS'
  | 'STORE_VALIDATION_INCOMPLETE'
  | 'STRIKE_BASED_HIGH_RISK_PROHIBITED'
  | 'SUSPECTED_FRAUD'
  | 'TAKE_USER_OUTSIDE_WISH'
  | 'TAX_SETTING_NOT_UPDATED'
  | 'UNCONFIRMED_TRACKING_NUMBERS'
  | 'UNFULFILLED_ORDER'
  | 'US_TAX_INFO_UNVALIDATED'
  | 'VIOLATE_POLICY'
  | 'VIOLATE_TS_POLICY'
  | 'VIOLATION_OF_POLICY_TIER'
  | 'VIOLATION_OF_TERMS'
  | 'WAREHOUSE_FULFILLMENT_POLICY_VIOLATION'
  | 'WISHPOST_ID_NOT_COMPLETE_FACE_RECOGNITION'
  | 'WISHPOST_NEGATIVE_BALANCE'
  | 'WISH_EXPRESS_POLICY_MERCHANT'
  | 'WISH_EXPRESS_POLICY_PRODUCT'
  | 'WISH_EXPRESS_POLICY_VIOLATION'
  | 'WISH_STANDARDS_BAN';

export type DetailedMerchantWarningReasonSchema = {
  readonly __typename?: 'DetailedMerchantWarningReasonSchema';
  readonly reason: DetailedMerchantWarningReason;
  readonly text: Scalars['String'];
};

export type DetectionFactor = {
  readonly __typename?: 'DetectionFactor';
  readonly detectedCountry?: Maybe<Country>;
  readonly factor: MerchantCountryDetectionFactorType;
};

export type DeviceSchema = {
  readonly __typename?: 'DeviceSchema';
  readonly deviceName?: Maybe<Scalars['String']>;
  readonly firstUsed: Scalars['DateTime'];
  readonly id: Scalars['ObjectIdType'];
  readonly ip?: Maybe<Scalars['String']>;
  readonly lastUsed?: Maybe<Scalars['DateTime']>;
  readonly location?: Maybe<Scalars['String']>;
  readonly status: DeviceStatus;
  readonly userAgent?: Maybe<Scalars['String']>;
};

export type DeviceStatus =
  | 'ACTIVE'
  | 'CURRENT'
  | 'INACTIVE';

export type DisableBrandPartner = {
  readonly __typename?: 'DisableBrandPartner';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DisableBrandPartnerInput = {
  readonly brandPartnerId: Scalars['ObjectIdType'];
};

export type DisbursementScheduleInfo = {
  readonly __typename?: 'DisbursementScheduleInfo';
  readonly merchantFileLink?: Maybe<Scalars['String']>;
};

export type DisputeInfractionInput = {
  readonly category?: InputMaybe<Scalars['String']>;
  readonly cost?: InputMaybe<CurrencyInput>;
  readonly description?: InputMaybe<Scalars['String']>;
  readonly disputeProof?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly explanation?: InputMaybe<Scalars['String']>;
  readonly photo?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly productName?: InputMaybe<Scalars['String']>;
  readonly retailPrice?: InputMaybe<CurrencyInput>;
  readonly subcategory?: InputMaybe<Scalars['String']>;
  readonly variationCount?: InputMaybe<Scalars['Int']>;
  readonly variationsSamePrice?: InputMaybe<Scalars['Boolean']>;
  readonly variationsSameProduct?: InputMaybe<Scalars['Boolean']>;
  readonly vendorAddress?: InputMaybe<AddressInput>;
};

export type DisputeMessageSchema = {
  readonly __typename?: 'DisputeMessageSchema';
  readonly date: Datetime;
  readonly files: ReadonlyArray<MerchantFileSchema>;
  readonly message?: Maybe<Scalars['String']>;
  readonly senderName: Scalars['String'];
  readonly senderType: DisputeMessageSenderType;
  readonly type: DisputeMessageType;
};

export type DisputeMessageSenderType =
  | 'ADMIN'
  | 'MERCHANT'
  | 'VIEW_ONLY';

export type DisputeMessageType =
  | 'ADMIN_COMMENT'
  | 'APPROVED'
  | 'CANCELLED'
  | 'CLOSED'
  | 'INITIATED'
  | 'PAID'
  | 'REOPEN'
  | 'REPLY';

export type DisputeNotice = {
  readonly __typename?: 'DisputeNotice';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DisputeNoticeInput = {
  readonly disputeDescription: Scalars['String'];
  readonly disputeSupportFiles?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly noticeId: Scalars['ObjectIdType'];
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type DisputeReason =
  | 'AUTHORIZED_TO_SELL'
  | 'BANNED_MERCHANT'
  | 'CORRECT_SIZE'
  | 'COUNTERFEIT_ITEM'
  | 'DELIVERED_TO_WRONG_ADDRESS'
  | 'DID_NOT_ACCEPT_TOS_ON_TIME'
  | 'EPC_LAST_MILE_CARRIERS_UNABLE_TO_SHIP'
  | 'EPC_OVERSIZE'
  | 'EPC_OVERVALUE'
  | 'EPC_OVERWEIGHT'
  | 'FAKE_TRACKING'
  | 'FBS_ITEM_NOT_PICKUP'
  | 'FRAUDULENT_BEHAVIOR'
  | 'INCOMPLETE_ORDER'
  | 'ITEM_IS_DAMAGED'
  | 'ITEM_IS_DANGEROUS'
  | 'ITEM_MARKED_DELIVERED_BUT_DID_NOT_ARRIVE'
  | 'ITEM_NOT_MATCH_LISTING'
  | 'LATE_CONFIRMED_FULFILLMENT'
  | 'MERCHANT_HIGH_REFUND_EAT_COST'
  | 'MERCHANT_MANAGED_SERVICES'
  | 'MERCHANT_REPORT_FRAUD'
  | 'MERCHANT_REPORT_RETURN'
  | 'MISLEADING_PRODUCT_TAG'
  | 'NOT_DELIVERED_ON_TIME'
  | 'NOT_QUALIFIED_SHIPPING_PROVIDER'
  | 'OUT_OF_STOCK'
  | 'PRODUCT_HIGH_REFUND_RATIO'
  | 'PRODUCT_LOW_RATING'
  | 'RETURNED_TO_SENDER'
  | 'RIGHT_OF_WITHDRAWAL'
  | 'STORE_UPLOADED_INVENTORY_RETURN'
  | 'VALID_TRACKING'
  | 'WISHBLUE_EPC_LATE_FULFULLMENT';

export type DisputeReasonSchema = {
  readonly __typename?: 'DisputeReasonSchema';
  readonly reason: DisputeReason;
  readonly subReason?: Maybe<DisputeSubReason>;
  readonly subReasonText?: Maybe<Scalars['String']>;
  readonly text?: Maybe<Scalars['String']>;
};

export type DisputeSchema = {
  readonly __typename?: 'DisputeSchema';
  readonly refundDispute?: Maybe<RefundDisputeHub>;
  readonly trackingDispute?: Maybe<TrackingDisputeHub>;
};

export type DisputeSort = {
  readonly field: DisputeSortFieldType;
  readonly order: SortOrderType;
};

export type DisputeSortFieldType =
  | 'DisputeID'
  | 'LastUpdate';

export type DisputeState =
  | 'APPROVED'
  | 'AWAITING_ADMIN'
  | 'AWAITING_MERCHANT'
  | 'CANCELLED'
  | 'CLOSED'
  | 'INVALID'
  | 'NEW'
  | 'PAID';

export type DisputeSubReason =
  | 'DID_NOT_RECEIVE_ITEM'
  | 'INCOMPLETE_ITEM'
  | 'INCORRECT_ITEM';

export type DomesticShippingInput = {
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly price?: InputMaybe<CurrencyInput>;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type DomesticShippingSchema = {
  readonly __typename?: 'DomesticShippingSchema';
  readonly enabled: Scalars['Boolean'];
  readonly price: CurrencyValue;
  readonly priceEstimate: CurrencyValue;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type DownloadAllProducts = {
  readonly __typename?: 'DownloadAllProducts';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DownloadAllProductsCsv = {
  readonly __typename?: 'DownloadAllProductsCSV';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type DownloadAllProductsCsvInput = {
  readonly categoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  readonly includeRejected?: InputMaybe<Scalars['Boolean']>;
  readonly templateType?: InputMaybe<ProductsCsvTemplateType>;
  readonly warehouseId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type DownloadAllProductsInput = {
  readonly categoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  readonly fileType?: InputMaybe<FileType>;
  readonly includeRejected?: InputMaybe<Scalars['Boolean']>;
  readonly templateType?: InputMaybe<ProductsCsvTemplateType>;
  readonly warehouseId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type DownloadEuComplianceProductLinks = {
  readonly __typename?: 'DownloadEUComplianceProductLinks';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type EprMutations = {
  readonly __typename?: 'EPRMutations';
  readonly acceptTos?: Maybe<AcceptTos>;
  readonly createUin?: Maybe<CreateUin>;
  readonly deleteUin?: Maybe<DeleteUin>;
  readonly updateUin?: Maybe<UpdateUin>;
};


export type EprMutationsAcceptTosArgs = {
  input: AcceptTosInput;
};


export type EprMutationsCreateUinArgs = {
  input: CreateUinInput;
};


export type EprMutationsDeleteUinArgs = {
  input: DeleteUinInput;
};


export type EprMutationsUpdateUinArgs = {
  input: UpdateUinInput;
};

export type EprNonCompliantSummaryRecordSchema = {
  readonly __typename?: 'EPRNonCompliantSummaryRecordSchema';
  readonly country: Country;
  readonly eprCategoryName: Scalars['String'];
  readonly nonCompliantProductCount: Scalars['Int'];
};

export type EprNonCompliantSummarySchema = {
  readonly __typename?: 'EPRNonCompliantSummarySchema';
  readonly productRecordTotal: Scalars['Int'];
  readonly productRecords: ReadonlyArray<EprProductRecordSchema>;
  readonly summaryRecords: ReadonlyArray<EprNonCompliantSummaryRecordSchema>;
};


export type EprNonCompliantSummarySchemaProductRecordTotalArgs = {
  countryCode: CountryCode;
  eprCategories?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  productId?: InputMaybe<Scalars['String']>;
};


export type EprNonCompliantSummarySchemaProductRecordsArgs = {
  countryCode: CountryCode;
  eprCategories?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  productId?: InputMaybe<Scalars['String']>;
  sortDesc?: InputMaybe<Scalars['Boolean']>;
};

export type EprProductRecordSchema = {
  readonly __typename?: 'EPRProductRecordSchema';
  readonly country: Country;
  readonly eprCategoryNames: ReadonlyArray<Scalars['String']>;
  readonly productId: Scalars['ObjectIdType'];
  readonly taxonomyCategoryNames: ReadonlyArray<Scalars['String']>;
};

export type EprStatus =
  | 'ADMIN_APPROVED'
  | 'COMPLETE'
  | 'DELETED'
  | 'IN_REVIEW'
  | 'REJECTED';

export type EuComplianceAddressInput = {
  readonly city: Scalars['String'];
  readonly countryCode?: InputMaybe<EuComplianceResponsiblePersonCountriesAndRegionsCode>;
  readonly county?: InputMaybe<Scalars['String']>;
  readonly name: Scalars['String'];
  readonly neighborhood?: InputMaybe<Scalars['String']>;
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly region?: InputMaybe<Scalars['String']>;
  readonly state: Scalars['String'];
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: InputMaybe<Scalars['String']>;
  readonly streetAddress3?: InputMaybe<Scalars['String']>;
  readonly zipcode?: InputMaybe<Scalars['String']>;
};

export type EuComplianceMutations = {
  readonly __typename?: 'EUComplianceMutations';
  readonly downloadProductLinks?: Maybe<DownloadEuComplianceProductLinks>;
  readonly upsertLink?: Maybe<UpsertLinkProductCompliance>;
  readonly upsertResponsiblePerson?: Maybe<UpsertResponsiblePerson>;
};


export type EuComplianceMutationsUpsertLinkArgs = {
  input?: InputMaybe<LinkProductComplianceUpsertInput>;
};


export type EuComplianceMutationsUpsertResponsiblePersonArgs = {
  input?: InputMaybe<ResponsiblePersonUpsertInput>;
};

export type EuComplianceResponsiblePersonCountriesAndRegions = {
  readonly __typename?: 'EUComplianceResponsiblePersonCountriesAndRegions';
  readonly code: EuComplianceResponsiblePersonCountriesAndRegionsCode;
  readonly name: Scalars['String'];
};

export type EuComplianceResponsiblePersonCountriesAndRegionsCode =
  | 'AT'
  | 'BE'
  | 'BG'
  | 'CY'
  | 'CZ'
  | 'DE'
  | 'DK'
  | 'EE'
  | 'ES'
  | 'FI'
  | 'FR'
  | 'GR'
  | 'HR'
  | 'HU'
  | 'IE'
  | 'IS'
  | 'IT'
  | 'LI'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'MT'
  | 'NIE'
  | 'NL'
  | 'NO'
  | 'PL'
  | 'PT'
  | 'RO'
  | 'SE'
  | 'SI'
  | 'SK';

export type EuProductComplianceCategory =
  | 'CHEMICAL'
  | 'COSMETICS'
  | 'EEE'
  | 'ENVIRONMENT'
  | 'FOOD'
  | 'OTHER'
  | 'TOYS';

export type EuvatRegistrationFieldsInput = {
  readonly countryCode: CountryCode;
  readonly vatNumber: Scalars['String'];
};

export type EuvatSchema = {
  readonly __typename?: 'EUVATSchema';
  readonly invoiceAmount?: Maybe<CurrencyValue>;
  readonly shippingPrice?: Maybe<CurrencyValue>;
};


export type EuvatSchemaInvoiceAmountArgs = {
  inAuthorityCurrency?: InputMaybe<Scalars['Boolean']>;
};


export type EuvatSchemaShippingPriceArgs = {
  inAuthorityCurrency?: InputMaybe<Scalars['Boolean']>;
};

export type EuvatTaxMutations = {
  readonly __typename?: 'EUVATTaxMutations';
  readonly uploadVatTaxQuestionnaire?: Maybe<UploadEuvatTaxQuestionnaire>;
};


export type EuvatTaxMutationsUploadVatTaxQuestionnaireArgs = {
  input: EuvatTaxQuestionnaireInput;
};

export type EuvatTaxQuestionnaireAddressInput = {
  readonly address: Scalars['String'];
  readonly city: Scalars['String'];
  readonly countryCode: CountryCode;
  readonly state: Scalars['String'];
  readonly zipcode: Scalars['String'];
};

export type EuvatTaxQuestionnaireInput = {
  readonly businessAddress?: InputMaybe<EuvatTaxQuestionnaireAddressInput>;
  readonly businessAddressInEu?: InputMaybe<Scalars['Boolean']>;
  readonly businessRegistrationNumber?: InputMaybe<Scalars['String']>;
  readonly employPersonnelInEu?: InputMaybe<Scalars['Boolean']>;
  readonly euVatRegistration?: InputMaybe<EuvatRegistrationFieldsInput>;
  readonly fileUrl?: InputMaybe<Scalars['String']>;
  readonly registeredWithTradeRegistryInEu?: InputMaybe<Scalars['Boolean']>;
  readonly subjectToTaxInEu?: InputMaybe<Scalars['Boolean']>;
};

export type EuvatTaxSchema = {
  readonly __typename?: 'EUVATTaxSchema';
  readonly euVatEntityStatus?: Maybe<CommerceMerchantEuEntityStatus>;
  readonly euVatSelfRemittanceEligible?: Maybe<Scalars['Boolean']>;
};

export type EditAddressInput = {
  readonly address: AddressInput;
  readonly orderId: Scalars['ObjectIdType'];
};

export type EditOriginAddresses = {
  readonly __typename?: 'EditOriginAddresses';
  readonly errorMessages?: Maybe<ReadonlyArray<AddressUpdateError>>;
  readonly updatedCount: Scalars['Int'];
};

export type EditShippingAddresses = {
  readonly __typename?: 'EditShippingAddresses';
  readonly errorMessages?: Maybe<ReadonlyArray<AddressUpdateError>>;
  readonly updatedCount: Scalars['Int'];
};

export type EditTrademarkInput = {
  readonly id: Scalars['ObjectIdType'];
  readonly location: BrandPartnerCountryAndRegionCode;
  readonly registrationDocs?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly registrationNumber: Scalars['String'];
  readonly registrationUrl?: InputMaybe<Scalars['String']>;
  readonly type: BrandPartnerTrademarkType;
};

export type EditTrademarksAndBrandInfo = {
  readonly __typename?: 'EditTrademarksAndBrandInfo';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type EditTrademarksAndBrandInfoInput = {
  readonly brandInfoId: Scalars['ObjectIdType'];
  readonly brandOwnerName?: InputMaybe<Scalars['String']>;
  readonly brandRepName?: InputMaybe<Scalars['String']>;
  readonly brandRepTitle?: InputMaybe<Scalars['String']>;
  readonly email?: InputMaybe<Scalars['String']>;
  readonly isNewBrand: Scalars['Boolean'];
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly proofOfAuthorizations?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly proposedBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly providedBrandAdditionalInfo?: InputMaybe<Scalars['String']>;
  readonly providedBrandLogoFile?: InputMaybe<FileInput>;
  readonly providedBrandName: Scalars['String'];
  readonly providedBrandWebsite?: InputMaybe<Scalars['String']>;
  readonly trademarks: ReadonlyArray<EditTrademarkInput>;
};

export type EligibleProductInfo = {
  readonly __typename?: 'EligibleProductInfo';
  readonly product: ProductSchema;
  readonly variations: ReadonlyArray<VariationSchema>;
};

export type EntityTypes =
  | 'COMPANY'
  | 'INDIVIDUAL';

export type ErrorCode =
  | 'ERROR_CODE_BOTH_PRODUCT_ID_AND_L1_CATEGORY_ID_SPECIFIED'
  | 'ERROR_CODE_INTERNAL_SERVER_ERROR'
  | 'ERROR_CODE_INVALID_L1_CATEGORY'
  | 'ERROR_CODE_INVALID_MERCHANT_ID'
  | 'ERROR_CODE_INVALID_PRODUCT_ID'
  | 'ERROR_CODE_MERCHANT_LISTING_INSIGHTS_UNAVAILABLE'
  | 'ERROR_CODE_MERCHANT_PERFORMANCE_UNAVAILABLE'
  | 'ERROR_CODE_NO_PRODUCT_ID_OR_L1_CATEGORY_ID_SPECIFIED'
  | 'ERROR_CODE_RATE_LIMIT'
  | 'ERROR_CODE_UNSPECIFIED';

export type EverCBrandCreateBrand = {
  readonly __typename?: 'EverCBrandCreateBrand';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type EverCBrandDeleteBrand = {
  readonly __typename?: 'EverCBrandDeleteBrand';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type EverCBrandMutations = {
  readonly __typename?: 'EverCBrandMutations';
  readonly createBrand?: Maybe<EverCBrandCreateBrand>;
  readonly deleteBrand?: Maybe<EverCBrandDeleteBrand>;
  readonly updateBrand?: Maybe<EverCBrandUpdateBrand>;
};


export type EverCBrandMutationsCreateBrandArgs = {
  input: EvercBrandUpsertBrandInput;
};


export type EverCBrandMutationsDeleteBrandArgs = {
  input: EvercBrandDeleteBrandInput;
};


export type EverCBrandMutationsUpdateBrandArgs = {
  input: EvercBrandUpsertBrandInput;
};

export type EverCBrandSchema = {
  readonly __typename?: 'EverCBrandSchema';
  readonly displayName: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
  readonly rightsHolderNames: ReadonlyArray<Scalars['String']>;
};

export type EverCBrandUpdateBrand = {
  readonly __typename?: 'EverCBrandUpdateBrand';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type EvercBrandDeleteBrandInput = {
  readonly evercBrandId: Scalars['ObjectIdType'];
};

export type EvercBrandUpsertBrandInput = {
  readonly displayName?: InputMaybe<Scalars['String']>;
  readonly evercBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly rightsHolders?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly wishBrandId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type ExistingSellingLocations =
  | 'NONE'
  | 'ONLINE'
  | 'ONLINE_AND_RETAIL'
  | 'RETAIL';

export type ExpSchema = {
  readonly __typename?: 'ExpSchema';
  readonly bucket: Scalars['String'];
};


export type ExpSchemaBucketArgs = {
  name: Scalars['String'];
};

export type ExpireWhitelistProductsInput = {
  readonly merchantId: Scalars['ObjectIdType'];
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type ExpireWhitelistProductsMutation = {
  readonly __typename?: 'ExpireWhitelistProductsMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ExtendedProducerResponsibilitySchema = {
  readonly __typename?: 'ExtendedProducerResponsibilitySchema';
  readonly countries: ReadonlyArray<CountryEprSchema>;
  readonly country: CountryEprSchema;
  readonly eprNonCompliantSummary: EprNonCompliantSummarySchema;
};


export type ExtendedProducerResponsibilitySchemaCountryArgs = {
  countryCode: CountryCode;
};

export type ExternalBoostAttributedStats = {
  readonly __typename?: 'ExternalBoostAttributedStats';
  readonly gmv: CurrencyValue;
  readonly orders: Scalars['Int'];
};

export type ExternalBoostChargingMethod =
  | 'CPA'
  | 'CPC';

export type ExtraCountryDataInput = {
  readonly swedenDeliveredCarrierTypes: ReadonlyArray<SwedenDeliveredCarrierType>;
};

export type ExtractionResultInput = {
  readonly name: Scalars['String'];
  readonly values: ReadonlyArray<Scalars['String']>;
};

export type FbwInventorySchema = {
  readonly __typename?: 'FBWInventorySchema';
  readonly activeInventory: Scalars['Int'];
  readonly pendingInventory: Scalars['Int'];
  readonly shippingType: WarehouseShippingType;
  readonly warehouse: FbwWarehouseSchema;
};

export type FbwRegion =
  | 'CN'
  | 'EU'
  | 'EU_UNBONDED'
  | 'US';

export type FbwWarehouseSchema = {
  readonly __typename?: 'FBWWarehouseSchema';
  readonly address: AddressSchema;
  readonly code: Scalars['String'];
  readonly estimatedFulfillTime: Timedelta;
  readonly feeLink: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly maxWeight: Weight;
  readonly name: Scalars['String'];
  readonly region: FbwRegion;
};

export type FpProductStateAttributeSchema = {
  readonly __typename?: 'FPProductStateAttributeSchema';
  readonly name: Scalars['String'];
  readonly value: Scalars['String'];
};

export type FpProductStateCondition =
  | 'NEW'
  | 'REFURBISHED'
  | 'USED';

export type FpProductStateCountryShippingSchema = {
  readonly __typename?: 'FPProductStateCountryShippingSchema';
  readonly destination: Scalars['String'];
  readonly isEnabled?: Maybe<Scalars['Boolean']>;
  readonly maxDeliveryDays?: Maybe<Scalars['Int']>;
  readonly overrides?: Maybe<ReadonlyArray<FpProductStateRegionShippingSchema>>;
  readonly price?: Maybe<CurrencyValue>;
};

export type FpProductStateDefaultShippingSchema = {
  readonly __typename?: 'FPProductStateDefaultShippingSchema';
  readonly price: CurrencyValue;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type FpProductStateImageSchema = {
  readonly __typename?: 'FPProductStateImageSchema';
  readonly id: Scalars['Int'];
  readonly isCleanImage?: Maybe<Scalars['Boolean']>;
  readonly removed?: Maybe<Scalars['Boolean']>;
  readonly wishUrl?: Maybe<Scalars['String']>;
};

export type FpProductStateInventorySchema = {
  readonly __typename?: 'FPProductStateInventorySchema';
  readonly count: Scalars['Int'];
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type FpProductStateRegionShippingSchema = {
  readonly __typename?: 'FPProductStateRegionShippingSchema';
  readonly destination: Scalars['String'];
  readonly isEnabled?: Maybe<Scalars['Boolean']>;
  readonly maxDeliveryDays?: Maybe<Scalars['Int']>;
  readonly price?: Maybe<CurrencyValue>;
  readonly useCountryShippingPrice?: Maybe<Scalars['Boolean']>;
};

export type FpProductStateSchema = {
  readonly __typename?: 'FPProductStateSchema';
  readonly attributes?: Maybe<ReadonlyArray<FpProductStateAttributeSchema>>;
  readonly brandId?: Maybe<Scalars['ObjectIdType']>;
  readonly chemicalNames?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly condition?: Maybe<FpProductStateCondition>;
  readonly defaultShipping?: Maybe<ReadonlyArray<FpProductStateDefaultShippingSchema>>;
  readonly description?: Maybe<Scalars['String']>;
  readonly extraImages?: Maybe<ReadonlyArray<FpProductStateImageSchema>>;
  readonly mainImage?: Maybe<FpProductStateImageSchema>;
  readonly maxQuantity?: Maybe<Scalars['Int']>;
  readonly msrp?: Maybe<CurrencyValue>;
  readonly name?: Maybe<Scalars['String']>;
  readonly parentSku?: Maybe<Scalars['String']>;
  readonly referenceUnit?: Maybe<UnitCombined>;
  readonly referenceValue?: Maybe<Scalars['Int']>;
  readonly tags?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly variations?: Maybe<ReadonlyArray<FpProductStateVariationSchema>>;
  readonly warehouseToShippings?: Maybe<ReadonlyArray<FpProductStateWarehouseToShippingSchema>>;
  readonly warningType?: Maybe<FpProductStateWarningType>;
};

export type FpProductStateVariationSchema = {
  readonly __typename?: 'FPProductStateVariationSchema';
  readonly color?: Maybe<Scalars['String']>;
  readonly customsHsCode?: Maybe<Scalars['String']>;
  readonly declaredLocalName?: Maybe<Scalars['String']>;
  readonly declaredName?: Maybe<Scalars['String']>;
  readonly declaredValue?: Maybe<CurrencyValue>;
  readonly enabled?: Maybe<Scalars['Boolean']>;
  readonly gtin?: Maybe<Scalars['String']>;
  readonly hasBattery?: Maybe<Scalars['Boolean']>;
  readonly hasLiquid?: Maybe<Scalars['Boolean']>;
  readonly hasMetal?: Maybe<Scalars['Boolean']>;
  readonly hasPowder?: Maybe<Scalars['Boolean']>;
  readonly height?: Maybe<Length>;
  readonly id: Scalars['ObjectIdType'];
  readonly image?: Maybe<FpProductStateImageSchema>;
  readonly inventory?: Maybe<ReadonlyArray<FpProductStateInventorySchema>>;
  readonly length?: Maybe<Length>;
  readonly originCountry?: Maybe<Country>;
  readonly pieces?: Maybe<Scalars['Int']>;
  readonly price?: Maybe<CurrencyValue>;
  readonly productId: Scalars['String'];
  readonly size?: Maybe<Scalars['String']>;
  readonly sku?: Maybe<Scalars['String']>;
  readonly weight?: Maybe<Weight>;
  readonly width?: Maybe<Length>;
};

export type FpProductStateWarehouseToShippingSchema = {
  readonly __typename?: 'FPProductStateWarehouseToShippingSchema';
  readonly shippingDetails: ReadonlyArray<FpProductStateCountryShippingSchema>;
  readonly warehouseId: Scalars['String'];
};

export type FpProductStateWarningType =
  | 'CHEMICAL'
  | 'DEP_PASSENGER_OFF_ROAD_VEHICLE'
  | 'DEP_RECREATIONAL_VESSEL'
  | 'DIESEL_ENGINE'
  | 'FOOD'
  | 'FURNITURE'
  | 'ON_PRODUCT_CANCER'
  | 'ON_PRODUCT_COMBINED_CANCER_REPRODUCTIVE'
  | 'ON_PRODUCT_REPRODUCTIVE'
  | 'RAW_WOOD';

export type FactoryMerchantConversionInput = {
  readonly userId: Scalars['String'];
};

export type FactoryToMerchantConversionMutation = {
  readonly __typename?: 'FactoryToMerchantConversionMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type FactoryUserMutations = {
  readonly __typename?: 'FactoryUserMutations';
  readonly convertFactoryToMerchant: FactoryToMerchantConversionMutation;
  readonly convertMerchantToFactory: MerchantToFactoryConversionMutation;
};


export type FactoryUserMutationsConvertFactoryToMerchantArgs = {
  input: FactoryMerchantConversionInput;
};


export type FactoryUserMutationsConvertMerchantToFactoryArgs = {
  input: FactoryMerchantConversionInput;
};

export type FeedProcessingWorkflowSchema = {
  readonly __typename?: 'FeedProcessingWorkflowSchema';
  readonly blockingReason?: Maybe<Scalars['String']>;
  readonly createdAt: Datetime;
  readonly id: Scalars['String'];
  readonly isMainImageBlankError: Scalars['Boolean'];
  readonly originalState?: Maybe<FpProductStateSchema>;
  readonly reviewStatus: CommerceProductFpReviewStatus;
  readonly upsertState?: Maybe<FpProductStateSchema>;
};

export type FileDataSchema = {
  readonly __typename?: 'FileDataSchema';
  readonly fileName: Scalars['String'];
  readonly fileUrl: Scalars['String'];
  readonly merchantFileId: Scalars['String'];
  readonly pictureType: PictureType;
};

export type FileInput = {
  readonly fileName: Scalars['String'];
  readonly url: Scalars['String'];
};

export type FileType =
  | 'CSV'
  | 'XLSX';

export type FilledCannedResponseSearchType =
  | 'COMMERCE_TICKET_ID'
  | 'DISPUTE_ID'
  | 'TRACKING_DISPUTE_ID';

export type FilledCannedResponseTextSchema = {
  readonly __typename?: 'FilledCannedResponseTextSchema';
  readonly customizations: ReadonlyArray<Scalars['String']>;
  readonly text: Scalars['String'];
};

export type FinalSaleCategory =
  | 'ADULT_TOYS'
  | 'FOOD_AND_BEVERAGES'
  | 'HOUSEHOLD_SUPPLIES'
  | 'MAKEUP_AND_BEAUTY'
  | 'OTC_MEDICATION'
  | 'PET_FOOD'
  | 'PLANT_AND_PLANT_SEEDS'
  | 'VITAMINS_AND_SUPPLEMENTS';

export type FinalSaleCategorySchema = {
  readonly __typename?: 'FinalSaleCategorySchema';
  readonly category: FinalSaleCategory;
  readonly description: Scalars['String'];
  readonly finalSaleEnabled: Scalars['Boolean'];
  readonly name: Scalars['String'];
  readonly totalProducts: Scalars['Int'];
};

export type FineReason =
  | 'B2B_SALE_FEE'
  | 'CN_ORDER_NOT_SHIP_WITH_WISHPOST'
  | 'CN_PROHIBITED_PRODUCTS'
  | 'COLLECTIONS_BOOST_CAMPAIGN_FEE'
  | 'CONSOLIDATE_MP_FINE'
  | 'DECEPTIVE_FULFILLMENT'
  | 'DEP_INFRACTION'
  | 'EARLY_PAYMENT_DEDUCTION'
  | 'EXTERNAL_BOOST_CPA_FEE'
  | 'EXTERNAL_BOOST_FEE'
  | 'FAKE_RATING'
  | 'FAKE_TRACKING'
  | 'FBW_FEE'
  | 'INVALID_EU_RESPONSIBLE_PERSON'
  | 'IP_INFRINGEMENT'
  | 'LATE_CONFIRMED_FULFILLMENT'
  | 'LCL_FBW_FEE'
  | 'LEGAL_SETTLEMENT'
  | 'LEGAL_SETTLEMENT_PAID'
  | 'LEGAL_SETTLEMENT_RESERVED'
  | 'LOGISTIC_FEE'
  | 'MERCHANT_CANCELLATION'
  | 'MERCHANT_HARASSMENT'
  | 'MERCHANT_INCENTIVE'
  | 'MISLEADING_LISTING'
  | 'MISLEADING_LISTING_AUTHENTIC_BRAND'
  | 'MISLEADING_VARIATION'
  | 'ONEOFF'
  | 'ONEOFF_FEE'
  | 'PAID_PLACEMENT_ENROLLMENT_FEE'
  | 'PAID_PLACEMENT_IMPRESSION_FEE'
  | 'POLICY_VIOLATION'
  | 'PRODUCT_LISTING_FEE'
  | 'PRODUCT_SWAPPED'
  | 'PROHIBITED_PRODUCT_FINE'
  | 'PROMOTED_PRODUCT_DISABLE_FINE'
  | 'PROMOTION_FEE'
  | 'QUALITY_REFUND_FINE'
  | 'REPEAT_IP_INFRINGEMENT'
  | 'RETURN_LABEL_FEE'
  | 'SE_CASH_BACK'
  | 'STORE_PAYMENT_CANCELLATION'
  | 'STORE_PAYMENT_DEDUCTION'
  | 'UNCONFIRMED_CARRIER'
  | 'UNFULFILLED_ORDER'
  | 'UNREASONABLE_PRICE_GAUGE'
  | 'WISHPOST_ADJUSTMENT_DEDUCTION'
  | 'WISHPOST_FULFILLMENT_FEE'
  | 'WISHPOST_LOGISTICS_FEE'
  | 'WISH_EXPRESS_VIOLATION'
  | 'WISH_EXPRESS_WITHHELD_ORDER'
  | 'WISH_PARCEL_SERVICE_ADJUST_FEE'
  | 'WISH_PARCEL_SERVICE_FEE'
  | 'WITHHOLD_FUND';

export type FlatRateShippingCountryCandidate = {
  readonly __typename?: 'FlatRateShippingCountryCandidate';
  readonly country: Country;
  readonly price: CurrencyValue;
};

export type FlexibleBudgetSchema = {
  readonly __typename?: 'FlexibleBudgetSchema';
  readonly enabled: Scalars['Boolean'];
  readonly type: MarketingFlexibleBudgetType;
};

export type FloorBidsSchema = {
  readonly __typename?: 'FloorBidsSchema';
  readonly bidPrice: CurrencyValue;
  readonly date: Datetime;
  readonly trueTag: TrueTagSchema;
  readonly trueTagId: Scalars['ObjectIdType'];
};

export type ForceApproveProduct = {
  readonly __typename?: 'ForceApproveProduct';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ForceApproveProductInput = {
  readonly productId: Scalars['ObjectIdType'];
};

export type FranceComplianceMutations = {
  readonly __typename?: 'FranceComplianceMutations';
  readonly upsertLink?: Maybe<UpsertFranceLinkProductCompliance>;
  readonly upsertUin?: Maybe<UpsertFranceProductUniqueIdentificationNumber>;
};


export type FranceComplianceMutationsUpsertLinkArgs = {
  input: UpsertFranceLinkProductComplianceInput;
};


export type FranceComplianceMutationsUpsertUinArgs = {
  input?: InputMaybe<FranceProductUniqueIdentificationNumberUpsertInput>;
};

export type FranceProductUniqueIdentificationNumberAction =
  | 'CREATE'
  | 'DELETE'
  | 'UPDATE';

export type FranceProductUniqueIdentificationNumberCategory =
  | 'BATTERIES'
  | 'ELECTRIC_AND_ELECTRONIC_EQUIPMENTS'
  | 'FURNITURE'
  | 'PAPER'
  | 'PRIMARY_PACKAGING'
  | 'SECONDARY_PACKAGING'
  | 'TEXTILE'
  | 'TIRES';

export type FranceProductUniqueIdentificationNumberSchema = {
  readonly __typename?: 'FranceProductUniqueIdentificationNumberSchema';
  readonly category?: Maybe<FranceProductUniqueIdentificationNumberCategory>;
  readonly id: Scalars['ObjectIdType'];
  readonly linkCount: Scalars['Int'];
  readonly merchant: MerchantSchema;
  readonly productResponsibilityOrganization: Scalars['String'];
  readonly status?: Maybe<FranceProductUniqueIdentificationNumberStatus>;
  readonly uniqueIdentificationNumber: Scalars['String'];
};

export type FranceProductUniqueIdentificationNumberStatus =
  | 'ADMIN_APPROVED'
  | 'COMPLETE'
  | 'DELETED'
  | 'INREVIEW'
  | 'REJECTED';

export type FranceProductUniqueIdentificationNumberUpsertInput = {
  readonly action: FranceProductUniqueIdentificationNumberAction;
  readonly category?: InputMaybe<FranceProductUniqueIdentificationNumberCategory>;
  readonly productResponsibilityOrganization?: InputMaybe<Scalars['String']>;
  readonly uinId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly uniqueIdentificationNumber?: InputMaybe<Scalars['String']>;
};

export type FreezeReversalType =
  | 'FINE_PAYMENT_ONLY'
  | 'FINE_REVERSAL_AND_PAYMENT'
  | 'FINE_REVERSAL_ONLY';

export type FulfillOrderInput = {
  readonly orderId: Scalars['ObjectIdType'];
  readonly originCountryCode: CountryCode;
  readonly providerId: Scalars['Int'];
  readonly shipNote?: InputMaybe<Scalars['String']>;
  readonly trackingId: Scalars['String'];
};

export type FulfillOrders = {
  readonly __typename?: 'FulfillOrders';
  readonly errorMessages?: Maybe<ReadonlyArray<FulfillmentError>>;
  readonly reusedTracking: Scalars['Boolean'];
  readonly shippedCount: Scalars['Int'];
};

export type FulfilledByWishMutations = {
  readonly __typename?: 'FulfilledByWishMutations';
  readonly createShippingPlan?: Maybe<CreateShippingPlan>;
};


export type FulfilledByWishMutationsCreateShippingPlanArgs = {
  input: ShippingPlanInput;
};

export type FulfilledByWishSchema = {
  readonly __typename?: 'FulfilledByWishSchema';
  readonly actionRequiredShippingPlans?: Maybe<Scalars['Int']>;
  readonly lowInventoryCount?: Maybe<Scalars['Int']>;
  readonly totalActionRequired?: Maybe<Scalars['Int']>;
};

export type FulfillmentCsvSchema = {
  readonly __typename?: 'FulfillmentCSVSchema';
  readonly optionalColumns: ReadonlyArray<OrderCsvColumnSchema>;
  readonly requiredColumns: ReadonlyArray<OrderCsvColumnSchema>;
};

export type FulfillmentError = {
  readonly __typename?: 'FulfillmentError';
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
};

export type FulfillmentMutation = {
  readonly __typename?: 'FulfillmentMutation';
  readonly actionRequiredOrdersCsvDownload: ActionRequiredOrdersCsvDownload;
  readonly cancelWpsTrackingId: CancelWpsTrackingIdMutation;
  readonly editOriginAddresses: EditOriginAddresses;
  readonly editShippingAddresses: EditShippingAddresses;
  readonly fulfillOrders: FulfillOrders;
  readonly fulfillOrdersFromCsv: FulfillmentOrdersFromCsv;
  readonly generateTestOrders?: Maybe<GenerateTestOrders>;
  readonly modifyTrackingOrders: ModifyTrackingOrders;
  readonly modifyWpsTrackingId: ModifyWpsTrackingIdMutation;
  readonly ordersCsvDownload: OrdersCsvDownload;
  readonly refundOrders: RefundOrders;
  readonly selectWpsShippingOption: SelectWpsShippingOptionMutation;
  readonly setWpsPackageType: SetWpsPackageTypeMutation;
  readonly updateDeliveryConfirmation: UpdateOrderDeliveryConfirmation;
};


export type FulfillmentMutationActionRequiredOrdersCsvDownloadArgs = {
  input: ActionRequiredOrdersCsvDownloadInput;
};


export type FulfillmentMutationCancelWpsTrackingIdArgs = {
  input: CancelWpsTrackingIdInput;
};


export type FulfillmentMutationEditOriginAddressesArgs = {
  input: ReadonlyArray<EditAddressInput>;
};


export type FulfillmentMutationEditShippingAddressesArgs = {
  input: ReadonlyArray<EditAddressInput>;
};


export type FulfillmentMutationFulfillOrdersArgs = {
  input: ReadonlyArray<FulfillOrderInput>;
};


export type FulfillmentMutationFulfillOrdersFromCsvArgs = {
  input: FulfillmentOrdersFromCsvInput;
};


export type FulfillmentMutationGenerateTestOrdersArgs = {
  input: GenerateTestOrdersInput;
};


export type FulfillmentMutationModifyTrackingOrdersArgs = {
  input: ReadonlyArray<ModifyTrackingOrderInput>;
};


export type FulfillmentMutationModifyWpsTrackingIdArgs = {
  input: ModifyWpsTrackingIdInput;
};


export type FulfillmentMutationOrdersCsvDownloadArgs = {
  input: OrdersCsvDownloadInput;
};


export type FulfillmentMutationRefundOrdersArgs = {
  input: ReadonlyArray<RefundOrderInput>;
};


export type FulfillmentMutationSelectWpsShippingOptionArgs = {
  input: SelectWpsShippingOptionInput;
};


export type FulfillmentMutationSetWpsPackageTypeArgs = {
  input: SetWpsPackageTypeInput;
};


export type FulfillmentMutationUpdateDeliveryConfirmationArgs = {
  input: UpdateOrderDeliveryConfirmationInput;
};

export type FulfillmentOrdersFromCsv = {
  readonly __typename?: 'FulfillmentOrdersFromCsv';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly jobUrl?: Maybe<Scalars['String']>;
  readonly status?: Maybe<MerchantFeedJobStatus>;
};

export type FulfillmentOrdersFromCsvInput = {
  readonly columnIdList: ReadonlyArray<Scalars['String']>;
  readonly csvDelimiter: Scalars['String'];
  readonly fileUrl: Scalars['String'];
};

export type FulfillmentSchema = {
  readonly __typename?: 'FulfillmentSchema';
  readonly actionRequiredOrderCount?: Maybe<Scalars['Int']>;
  readonly actionRequiredOrders?: Maybe<ReadonlyArray<OrderSchema>>;
  readonly actionRequiredOrdersCsvUrl?: Maybe<Scalars['String']>;
  readonly bulkJobs?: Maybe<ReadonlyArray<CsvFulfillmentJobSchema>>;
  readonly csvFulfillmentJobsCount?: Maybe<Scalars['Int']>;
  readonly fulfillmentCsv?: Maybe<FulfillmentCsvSchema>;
  readonly historicalOrders?: Maybe<ReadonlyArray<OrderSchema>>;
  readonly order?: Maybe<OrderSchema>;
  readonly orders?: Maybe<ReadonlyArray<OrderSchema>>;
  readonly ordersCount?: Maybe<Scalars['Int']>;
  readonly ordersCsvUrl?: Maybe<Scalars['String']>;
  readonly wpsShippingOptions?: Maybe<WpsGetShippingOptionsSchema>;
};


export type FulfillmentSchemaActionRequiredOrderCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ActionRequiredSearchType>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaActionRequiredOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ActionRequiredSearchType>;
  sort?: InputMaybe<ActionRequiredSort>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaActionRequiredOrdersCsvUrlArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ActionRequiredSearchType>;
  sort?: InputMaybe<ActionRequiredSort>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaBulkJobsArgs = {
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
};


export type FulfillmentSchemaHistoricalOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<OrderHistorySearchType>;
  sort?: InputMaybe<OrderHistorySort>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaOrderArgs = {
  id: Scalars['String'];
};


export type FulfillmentSchemaOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<OrderHistorySearchType>;
  sort?: InputMaybe<OrderHistorySort>;
  states?: InputMaybe<ReadonlyArray<CommerceTransactionState>>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaOrdersCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<OrderHistorySearchType>;
  states?: InputMaybe<ReadonlyArray<CommerceTransactionState>>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaOrdersCsvUrlArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<OrderHistorySearchType>;
  sort?: InputMaybe<OrderHistorySort>;
  wishExpress?: InputMaybe<Scalars['Boolean']>;
};


export type FulfillmentSchemaWpsShippingOptionsArgs = {
  orderId: Scalars['String'];
};

export type GbVatEntityType =
  | 'HAVE_OBLIGATION'
  | 'NOT_APPLICABLE'
  | 'NO_OBLIGATION';

export type GcpeListingReviewSchema = {
  readonly __typename?: 'GCPEListingReviewSchema';
  readonly datetimeCompleted?: Maybe<Datetime>;
  readonly datetimeQueued: Datetime;
  readonly mainImageUrl: Scalars['String'];
  readonly oldMainImageUrl?: Maybe<Scalars['String']>;
  readonly oldProductName?: Maybe<Scalars['String']>;
  readonly productId: Scalars['ObjectIdType'];
  readonly productName: Scalars['String'];
  readonly reviewId: Scalars['ObjectIdType'];
};

export type GenWechatQrInput = {
  readonly scene?: InputMaybe<Scalars['String']>;
};

export type GenWechatQrMutation = {
  readonly __typename?: 'GenWechatQrMutation';
  readonly ticket?: Maybe<Scalars['String']>;
};

export type Gender =
  | 'FEMALE'
  | 'MALE'
  | 'NEUTRAL'
  | 'UNKNOWN';

export type GeneralTaggingManagement = {
  readonly __typename?: 'GeneralTaggingManagement';
  readonly localToLocalAllowedSubcategories?: Maybe<ReadonlyArray<TaggingViolationSubcategory>>;
  readonly taxonomyCategory?: Maybe<TaxonomyCategorySchema>;
};


export type GeneralTaggingManagementTaxonomyCategoryArgs = {
  categoryId?: InputMaybe<Scalars['Int']>;
  treeVersion?: InputMaybe<Scalars['String']>;
};

export type GenerateTestOrders = {
  readonly __typename?: 'GenerateTestOrders';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type GenerateTestOrdersInput = {
  readonly country?: InputMaybe<CountryCode>;
  readonly logisticsOption: GenerateTestOrdersLogisticsOptions;
  readonly productId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly quantity?: InputMaybe<Scalars['Int']>;
  readonly state?: InputMaybe<Scalars['String']>;
  readonly variationId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly zipcode?: InputMaybe<Scalars['String']>;
};

export type GenerateTestOrdersLogisticsOptions =
  | 'ADVANCED_LOGISTICS'
  | 'CONFIRMED_DELIVERY_POLICY'
  | 'LESS_THAN_TRUCKLOAD'
  | 'NONE'
  | 'OPTIONAL_ADVANCED_LOGISTICS'
  | 'RANDOM'
  | 'WISH_EXPRESS';

export type GenerateVideoInput = {
  readonly slides?: InputMaybe<ReadonlyArray<VideoSlideSpec>>;
};

export type GenerateVideoMutation = {
  readonly __typename?: 'GenerateVideoMutation';
  readonly ok?: Maybe<Scalars['Boolean']>;
  readonly videoUrl?: Maybe<Scalars['String']>;
};

export type GeoCoordinates = {
  readonly __typename?: 'GeoCoordinates';
  readonly latitude: Scalars['String'];
  readonly longitude: Scalars['String'];
};

export type GermanyComplianceMutations = {
  readonly __typename?: 'GermanyComplianceMutations';
  readonly upsertLink?: Maybe<UpsertGermanyLinkProductCompliance>;
  readonly upsertUin?: Maybe<UpsertGermanyProductUniqueIdentificationNumber>;
};


export type GermanyComplianceMutationsUpsertLinkArgs = {
  input: UpsertGermanyLinkProductComplianceInput;
};


export type GermanyComplianceMutationsUpsertUinArgs = {
  input?: InputMaybe<GermanyProductUniqueIdentificationNumberUpsertInput>;
};

export type GermanyProductUniqueIdentificationNumberAction =
  | 'CREATE'
  | 'DELETE'
  | 'UPDATE';

export type GermanyProductUniqueIdentificationNumberCategory =
  | 'BATTERIES'
  | 'ELECTRIC_AND_ELECTRONIC_EQUIPMENTS'
  | 'PACKAGING';

export type GermanyProductUniqueIdentificationNumberSchema = {
  readonly __typename?: 'GermanyProductUniqueIdentificationNumberSchema';
  readonly category?: Maybe<GermanyProductUniqueIdentificationNumberCategory>;
  readonly eprNumber: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly linkCount: Scalars['Int'];
  readonly merchant: MerchantSchema;
  readonly organizationOrRepresentativeName?: Maybe<Scalars['String']>;
  readonly status?: Maybe<GermanyProductUniqueIdentificationNumberStatus>;
  readonly updateTime?: Maybe<Datetime>;
};

export type GermanyProductUniqueIdentificationNumberStatus =
  | 'ADMIN_APPROVED'
  | 'COMPLETE'
  | 'DELETED'
  | 'INREVIEW'
  | 'REJECTED';

export type GermanyProductUniqueIdentificationNumberUpsertInput = {
  readonly action: GermanyProductUniqueIdentificationNumberAction;
  readonly category?: InputMaybe<GermanyProductUniqueIdentificationNumberCategory>;
  readonly eprNumber?: InputMaybe<Scalars['String']>;
  readonly organizationOrRepresentativeName?: InputMaybe<Scalars['String']>;
  readonly uinId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type GetAndClaimProductTaxonomyCategoryDisputeForReview = {
  readonly __typename?: 'GetAndClaimProductTaxonomyCategoryDisputeForReview';
  readonly dispute?: Maybe<ProductTaxonomyCategoryDisputeSchema>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type GetAndClaimProductTaxonomyCategoryDisputeForReviewInput = {
  readonly disputeId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type GoogleLoginDetails = {
  readonly __typename?: 'GoogleLoginDetails';
  readonly authUrl: Scalars['String'];
};

export type GtinProductSchema = {
  readonly __typename?: 'GtinProductSchema';
  readonly asin?: Maybe<Scalars['String']>;
  readonly brand?: Maybe<Scalars['String']>;
  readonly categories?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly description?: Maybe<Scalars['String']>;
  readonly features?: Maybe<Scalars['String']>;
  readonly gtinFormats?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly gtins: ReadonlyArray<Scalars['String']>;
  readonly imageUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly title?: Maybe<Scalars['String']>;
  readonly variations?: Maybe<ReadonlyArray<GtinVariationSchema>>;
  readonly wishBrand?: Maybe<BrandSchema>;
};

export type GtinProductServiceSchema = {
  readonly __typename?: 'GtinProductServiceSchema';
  readonly product?: Maybe<GtinProductSchema>;
};


export type GtinProductServiceSchemaProductArgs = {
  gtins: ReadonlyArray<Scalars['String']>;
};

export type GtinVariationSchema = {
  readonly __typename?: 'GtinVariationSchema';
  readonly ageGroup?: Maybe<Scalars['String']>;
  readonly color?: Maybe<Scalars['String']>;
  readonly energyEfficiencyClass?: Maybe<Scalars['String']>;
  readonly format?: Maybe<Scalars['String']>;
  readonly gender?: Maybe<Scalars['String']>;
  readonly gtin: Scalars['String'];
  readonly height?: Maybe<Length>;
  readonly imageUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly ingredients?: Maybe<Scalars['String']>;
  readonly length?: Maybe<Length>;
  readonly manufacturer?: Maybe<Scalars['String']>;
  readonly material?: Maybe<Scalars['String']>;
  readonly model?: Maybe<Scalars['String']>;
  readonly mpn?: Maybe<Scalars['String']>;
  readonly multipack?: Maybe<Scalars['String']>;
  readonly nutritionFacts?: Maybe<Scalars['String']>;
  readonly pattern?: Maybe<Scalars['String']>;
  readonly price?: Maybe<CurrencyValue>;
  readonly size?: Maybe<Scalars['String']>;
  readonly weight?: Maybe<Weight>;
  readonly width?: Maybe<Length>;
};

export type IpViolationBrandCategory = {
  readonly __typename?: 'IPViolationBrandCategory';
  readonly category: BrandCategoryCode;
  readonly displayName: Scalars['String'];
};

export type IpViolationTaggingManagement = {
  readonly __typename?: 'IPViolationTaggingManagement';
  readonly brandCategories: ReadonlyArray<IpViolationBrandCategory>;
  readonly ipViolationReasons: ReadonlyArray<TaggingViolationReason>;
  readonly taggableBrands: ReadonlyArray<BrandSchema>;
};

export type IdDetails = {
  readonly __typename?: 'IdDetails';
  readonly id: Scalars['String'];
  readonly redirectType: RedirectType;
};

export type IdDocTypes =
  | 'DRIVER_LICENSE'
  | 'GOVERNMENT_ISSUED_STATE_ID'
  | 'PASSPORT';

export type IdentityMutations = {
  readonly __typename?: 'IdentityMutations';
  readonly factoryMutations?: Maybe<FactoryUserMutations>;
  readonly updatePermission?: Maybe<UpdatePermissionMutation>;
  readonly updateQueue?: Maybe<UpdateUserQueuesMutation>;
  readonly updateRole?: Maybe<UpdateRoleMutation>;
  readonly updateUserInfo?: Maybe<UpdateUserInfoMutation>;
};


export type IdentityMutationsUpdatePermissionArgs = {
  input: UpdatePermissionInput;
};


export type IdentityMutationsUpdateQueueArgs = {
  input: UpdateUserQueuesInput;
};


export type IdentityMutationsUpdateRoleArgs = {
  input: UpdateRoleInput;
};


export type IdentityMutationsUpdateUserInfoArgs = {
  input: UpdateUserInfoInput;
};

export type IdentityServiceSchema = {
  readonly __typename?: 'IdentityServiceSchema';
  readonly platformBdMerchantCountries: ReadonlyArray<BdMerchantCountryCodeType>;
  readonly platformRoles: ReadonlyArray<RoleSchema>;
  readonly user?: Maybe<UserSchema>;
  readonly users?: Maybe<ReadonlyArray<UserSchema>>;
  readonly usersCount?: Maybe<Scalars['Int']>;
  readonly visibleRoles: ReadonlyArray<RoleSchema>;
};


export type IdentityServiceSchemaUserArgs = {
  id: Scalars['String'];
};


export type IdentityServiceSchemaUsersArgs = {
  includeDisabledUsers?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  roles?: InputMaybe<ReadonlyArray<RoleType>>;
  sortField?: InputMaybe<UsersSortFieldType>;
  sortOrder?: InputMaybe<SortOrderType>;
};


export type IdentityServiceSchemaUsersCountArgs = {
  includeDisabledUsers?: InputMaybe<Scalars['Boolean']>;
  query?: InputMaybe<Scalars['String']>;
  roles?: InputMaybe<ReadonlyArray<RoleType>>;
};

export type ImageChangeMlTaggerJobSchema = {
  readonly __typename?: 'ImageChangeMlTaggerJobSchema';
  readonly datetimeCompleted?: Maybe<Datetime>;
  readonly datetimeQueued: Datetime;
  readonly gcpeListingReview: GcpeListingReviewSchema;
  readonly jobId: Scalars['ObjectIdType'];
  readonly mlEdition?: Maybe<Scalars['Int']>;
  readonly predictionProbability?: Maybe<Scalars['Float']>;
  readonly productId: Scalars['ObjectIdType'];
  readonly result?: Maybe<TaggingMlResult>;
  readonly state: TaggingJobState;
  readonly taggingUser?: Maybe<UserSchema>;
};

export type ImageInput = {
  readonly id?: InputMaybe<Scalars['Int']>;
  readonly isCleanImage?: InputMaybe<Scalars['Boolean']>;
  readonly url: Scalars['String'];
};

export type ImageSchema = {
  readonly __typename?: 'ImageSchema';
  readonly id: Scalars['Int'];
  readonly isCleanImage: Scalars['Boolean'];
  readonly wishUrl: Scalars['String'];
};


export type ImageSchemaWishUrlArgs = {
  size?: InputMaybe<ImageSize>;
};

export type ImageSize =
  | 'LARGE'
  | 'MEDIUM'
  | 'ORIGINAL'
  | 'SMALL'
  | 'TINY';

export type InappropriateViolationSchema = {
  readonly __typename?: 'InappropriateViolationSchema';
  readonly isConfirmed: Scalars['Boolean'];
  readonly reason?: Maybe<CounterfeitReasonCode>;
  readonly reasonDisplayName?: Maybe<Scalars['String']>;
  readonly reasonExplanation?: Maybe<Scalars['String']>;
  readonly subcategoryMessage?: Maybe<Scalars['String']>;
};

export type InappropriateViolationTaggingManagement = {
  readonly __typename?: 'InappropriateViolationTaggingManagement';
  readonly violationReasons: ReadonlyArray<TaggingViolationReason>;
  readonly violationSubcategories: ReadonlyArray<TaggingViolationSubcategory>;
};


export type InappropriateViolationTaggingManagementViolationSubcategoriesArgs = {
  inappropirateReason?: InputMaybe<CounterfeitReasonCode>;
};

export type InfoCollectedForPaymentProvider = {
  readonly __typename?: 'InfoCollectedForPaymentProvider';
  readonly email?: Maybe<Scalars['String']>;
};

export type InfractionSchema = {
  readonly __typename?: 'InfractionSchema';
  readonly id: Scalars['String'];
  readonly reasonText?: Maybe<Scalars['String']>;
  readonly stateText?: Maybe<Scalars['String']>;
  readonly updatedAt: Datetime;
};

export type InitiateUploadInput = {
  readonly bucket: ClientWritableBucket;
  readonly contentType: Scalars['String'];
  readonly filename?: InputMaybe<Scalars['String']>;
};

export type InitiateUploadMutation = {
  readonly __typename?: 'InitiateUploadMutation';
  readonly downloadUrl?: Maybe<Scalars['String']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly uploadHeaders?: Maybe<Scalars['JSONString']>;
  readonly uploadUrl?: Maybe<Scalars['String']>;
};

export type InjunctionMerchantFreezeBulkCreateFreezes = {
  readonly __typename?: 'InjunctionMerchantFreezeBulkCreateFreezes';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeBulkReverseFreezes = {
  readonly __typename?: 'InjunctionMerchantFreezeBulkReverseFreezes';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeBulkUploadInput = {
  readonly file: FileInput;
};

export type InjunctionMerchantFreezeCreateFreeze = {
  readonly __typename?: 'InjunctionMerchantFreezeCreateFreeze';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeCreateFreezeInput = {
  readonly creationTimestamp: DatetimeInput;
  readonly fine?: InputMaybe<CurrencyInput>;
  readonly fineType: FineReason;
  readonly freezeType: InjunctionMerchantFreezeType;
  readonly isCascading: Scalars['Boolean'];
  readonly merchantId: Scalars['ObjectIdType'];
  readonly notes: Scalars['String'];
  readonly troNumber: Scalars['Int'];
  readonly useFullAccountBalance: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeExportCsv = {
  readonly __typename?: 'InjunctionMerchantFreezeExportCSV';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeFilterInput = {
  readonly fineIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly freezeIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly freezeTypes?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeType>>;
  readonly legalEndDateUnix?: InputMaybe<Scalars['Int']>;
  readonly legalStartDateUnix?: InputMaybe<Scalars['Int']>;
  readonly merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly states?: InputMaybe<ReadonlyArray<InjunctionMerchantFreezeState>>;
  readonly troNumbers?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  readonly updatedEndDateUnix?: InputMaybe<Scalars['Int']>;
  readonly updatedStartDateUnix?: InputMaybe<Scalars['Int']>;
};

export type InjunctionMerchantFreezeFinePaymentInput = {
  readonly amountInUsd: Scalars['Float'];
  readonly fineType: FineReason;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly troNumber: Scalars['Int'];
};

export type InjunctionMerchantFreezeFineReversalInput = {
  readonly fineId: Scalars['ObjectIdType'];
  readonly notes: Scalars['String'];
  readonly reversal: CurrencyInput;
  readonly shouldCascadeFunds: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeMutations = {
  readonly __typename?: 'InjunctionMerchantFreezeMutations';
  readonly bulkCreateFreezes?: Maybe<InjunctionMerchantFreezeBulkCreateFreezes>;
  readonly bulkReverseFreezes?: Maybe<InjunctionMerchantFreezeBulkReverseFreezes>;
  readonly createFreeze?: Maybe<InjunctionMerchantFreezeCreateFreeze>;
  readonly exportCsv?: Maybe<InjunctionMerchantFreezeExportCsv>;
  readonly resolveFreeze?: Maybe<InjunctionMerchantFreezeResolveFreeze>;
  readonly reverseAllFines?: Maybe<InjunctionMerchantFreezeReverseAllFines>;
  readonly reverseFreeze?: Maybe<InjunctionMerchantFreezeReverseFreeze>;
  readonly updateLegalTimestamp?: Maybe<InjunctionMerchantFreezeUpdateLegalTimestamp>;
};


export type InjunctionMerchantFreezeMutationsBulkCreateFreezesArgs = {
  input: InjunctionMerchantFreezeBulkUploadInput;
};


export type InjunctionMerchantFreezeMutationsBulkReverseFreezesArgs = {
  input: InjunctionMerchantFreezeBulkUploadInput;
};


export type InjunctionMerchantFreezeMutationsCreateFreezeArgs = {
  input: ReadonlyArray<InjunctionMerchantFreezeCreateFreezeInput>;
};


export type InjunctionMerchantFreezeMutationsExportCsvArgs = {
  input: InjunctionMerchantFreezeFilterInput;
};


export type InjunctionMerchantFreezeMutationsResolveFreezeArgs = {
  input: InjunctionMerchantFreezeResolveFreezeInput;
};


export type InjunctionMerchantFreezeMutationsReverseAllFinesArgs = {
  input: InjunctionMerchantFreezeReverseAllFinesInput;
};


export type InjunctionMerchantFreezeMutationsReverseFreezeArgs = {
  input: InjunctionMerchantFreezeReverseFreezeInput;
};


export type InjunctionMerchantFreezeMutationsUpdateLegalTimestampArgs = {
  input: InjunctionMerchantFreezeUpdateLegalTimestampInput;
};

export type InjunctionMerchantFreezeResolveFreeze = {
  readonly __typename?: 'InjunctionMerchantFreezeResolveFreeze';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeResolveFreezeInput = {
  readonly freezeId: Scalars['ObjectIdType'];
};

export type InjunctionMerchantFreezeReversalRequestInput = {
  readonly paymentInput?: InputMaybe<InjunctionMerchantFreezeFinePaymentInput>;
  readonly reversalInput?: InputMaybe<InjunctionMerchantFreezeFineReversalInput>;
  readonly reversalType: FreezeReversalType;
};

export type InjunctionMerchantFreezeReverseAllFines = {
  readonly __typename?: 'InjunctionMerchantFreezeReverseAllFines';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeReverseAllFinesInput = {
  readonly freezeId: Scalars['ObjectIdType'];
  readonly merchantId: Scalars['ObjectIdType'];
  readonly requests: ReadonlyArray<InjunctionMerchantFreezeFineReversalInput>;
};

export type InjunctionMerchantFreezeReverseFreeze = {
  readonly __typename?: 'InjunctionMerchantFreezeReverseFreeze';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeReverseFreezeInput = {
  readonly requests: ReadonlyArray<InjunctionMerchantFreezeReversalRequestInput>;
  readonly useBackend?: InputMaybe<Scalars['Boolean']>;
};

export type InjunctionMerchantFreezeSchema = {
  readonly __typename?: 'InjunctionMerchantFreezeSchema';
  readonly fineIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly fines: ReadonlyArray<MerchantFineSchema>;
  readonly freezeType: InjunctionMerchantFreezeType;
  readonly id: Scalars['ObjectIdType'];
  readonly lastUpdatedAt: Datetime;
  readonly legalCounselCreationTs: Datetime;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly state: InjunctionMerchantFreezeState;
  readonly sumOfFineAmounts: CurrencyValue;
  readonly tentativeFreezeAmount?: Maybe<CurrencyValue>;
  readonly troNumber: Scalars['Int'];
};

export type InjunctionMerchantFreezeState =
  | 'ACTIVE'
  | 'RESOLVED';

export type InjunctionMerchantFreezeType =
  | 'FULL_ASSET_FREEZE'
  | 'ONE_TIME_FREEZE';

export type InjunctionMerchantFreezeUpdateLegalTimestamp = {
  readonly __typename?: 'InjunctionMerchantFreezeUpdateLegalTimestamp';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type InjunctionMerchantFreezeUpdateLegalTimestampInput = {
  readonly freezeId: Scalars['ObjectIdType'];
  readonly newTimestamp: DatetimeInput;
};

export type InventoryInput = {
  readonly count: Scalars['Int'];
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type InventorySchema = {
  readonly __typename?: 'InventorySchema';
  readonly count: Scalars['Int'];
  readonly shippingType: WarehouseShippingType;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type IsRequiredEnum =
  | 'NOT_INCLUDED'
  | 'OPTIONAL'
  | 'REQUIRED';

export type IssueRefund = {
  readonly __typename?: 'IssueRefund';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type IssueRefundInput = {
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly partialRefundType?: InputMaybe<PartialRefundType>;
  readonly refundAmount?: InputMaybe<CurrencyInput>;
  readonly refundPercentage?: InputMaybe<Scalars['Float']>;
  readonly refundQuantity?: InputMaybe<Scalars['Int']>;
  readonly refundReason: ReturnRequestRefundReason;
  readonly refundType: RefundType;
};

export type KycMerchantType =
  | 'COMPANY'
  | 'INDIVIDUAL'
  | 'NOT_SET';

export type KycProfilePaymentStatus =
  | 'PAYMENT_ALLOWED'
  | 'PAYMENT_HELD'
  | 'PAYMENT_HOLD_PROPOSED';

export type KycProfileVerificationAdminStatus =
  | 'APPROVED'
  | 'INVALID'
  | 'IN_PROGRESS'
  | 'NOT_SET'
  | 'ON_HOLD'
  | 'REJECTED';

export type KycProfileVerificationRiskScore =
  | 'HIGH'
  | 'LOW'
  | 'MEDIUM'
  | 'NOT_SET'
  | 'VERY_HIGH';

export type KycProfileVerificationStatus =
  | 'COMPLETE'
  | 'INCOMPLETE'
  | 'REJECTED';

export type KycVerificationSchema = {
  readonly __typename?: 'KycVerificationSchema';
  readonly adminStatus?: Maybe<KycProfileVerificationAdminStatus>;
  readonly canStart: Scalars['Boolean'];
  readonly fromV2Flow: Scalars['Boolean'];
  readonly isMandatory?: Maybe<Scalars['Boolean']>;
  readonly merchantType?: Maybe<KycMerchantType>;
  readonly paymentStatus?: Maybe<KycProfilePaymentStatus>;
  readonly riskScore?: Maybe<KycProfileVerificationRiskScore>;
  readonly status?: Maybe<KycProfileVerificationStatus>;
};

export type LqdCampaignInput = {
  readonly productId: Scalars['ObjectIdType'];
  readonly startDate: DatetimeInput;
};

export type LqdCampaignSchema = {
  readonly __typename?: 'LQDCampaignSchema';
  readonly endDate: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly impressions: Scalars['Int'];
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
  readonly startDate: Datetime;
  readonly state: LqdCampaignState;
};

export type LqdCampaignState =
  | 'CANCELLED'
  | 'ENDED'
  | 'NEW'
  | 'SAVED'
  | 'STARTED';

export type LqdProductStatsByDaySchema = {
  readonly __typename?: 'LQDProductStatsByDaySchema';
  readonly clicks: Scalars['Int'];
  readonly date: Datetime;
  readonly gmv: CurrencyValue;
  readonly impressions: Scalars['Int'];
  readonly lqdOrders: Scalars['Int'];
  readonly orders: Scalars['Int'];
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
};

export type LqdPromotionSchema = {
  readonly __typename?: 'LQDPromotionSchema';
  readonly campaigns: ReadonlyArray<LqdCampaignSchema>;
  readonly campaignsCount: Scalars['Int'];
};


export type LqdPromotionSchemaCampaignsArgs = {
  endDate: DatetimeInput;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  startDate: DatetimeInput;
};


export type LqdPromotionSchemaCampaignsCountArgs = {
  endDate: DatetimeInput;
  startDate: DatetimeInput;
};

export type LqdPromotionStats = {
  readonly __typename?: 'LQDPromotionStats';
  readonly byDay: ReadonlyArray<LqdProductStatsByDaySchema>;
};

export type LateDeliverySchema = {
  readonly __typename?: 'LateDeliverySchema';
  readonly rate?: Maybe<Scalars['Float']>;
  readonly threshhold?: Maybe<Scalars['Float']>;
};

export type LedgerAccountBalance = {
  readonly __typename?: 'LedgerAccountBalance';
  readonly amount: Scalars['Float'];
  readonly balanceType: LedgerAccountBalanceType;
  readonly currency: PaymentCurrencyCode;
};

export type LedgerAccountBalanceType =
  | 'CONFIRMED'
  | 'PENDING';

export type LedgerEvent = {
  readonly __typename?: 'LedgerEvent';
  readonly data: Scalars['String'];
  readonly documentId?: Maybe<Scalars['String']>;
  readonly eventTime: Datetime;
  readonly eventType: LedgerEventType;
  readonly id: Scalars['String'];
};

export type LedgerEventType =
  | 'ACCOUNT_BALANCES_FETCH'
  | 'ARRIVE_AT_EPC_WAREHOUSE'
  | 'CONFIRMED_DELIVERED'
  | 'CONFIRMED_SHIPPED'
  | 'DISPUTE_SUCCESS'
  | 'FEE_CREATION'
  | 'FEE_ELIGIBILITY_UPDATE'
  | 'FEE_REVERSAL'
  | 'FINE_CREATION'
  | 'FINE_ELIGIBILITY_UPDATE'
  | 'FINE_REVERSAL'
  | 'LEDGER_ITEM_FETCH'
  | 'LEDGER_ITEM_STATE_BATCH_UPDATE'
  | 'MARKED_SHIPPED'
  | 'ONEOFF_PAYMENT_CANCEL'
  | 'ONEOFF_PAYMENT_CREATION'
  | 'ORDER_REFUND'
  | 'ORDER_RELEASED'
  | 'ORDER_WITHHOLD'
  | 'ORDER_WITHHOLD_CANCEL'
  | 'PAYMENT_AMOUNT_AMENDMENT'
  | 'REBATE_CANCEL'
  | 'REBATE_CREATE'
  | 'RECEIVE_INITIAL_WP_SHIPPING'
  | 'RECEIVE_WP_SHIPPING_ADJUSTMENT'
  | 'REMOVED_FROM_A_PLUS'
  | 'TAX_ADJUSTMENT'
  | 'TAX_UPDATE'
  | 'TRACKING_AMENDMENT'
  | 'TRACKING_CANCELLED'
  | 'USER_CONFIRMED_DELIVERED';

export type LedgerItem = {
  readonly __typename?: 'LedgerItem';
  readonly createdTime: Datetime;
  readonly creditAmount?: Maybe<CurrencyValue>;
  readonly debitAmount?: Maybe<CurrencyValue>;
  readonly description: LedgerItemDescriptionDetails;
  readonly documentId: Scalars['String'];
  readonly id?: Maybe<Scalars['String']>;
  readonly merchantId: Scalars['String'];
  readonly merchantPayableId: Scalars['String'];
  readonly payableType: LedgerPayableType;
  readonly paymentEligibleTime?: Maybe<Datetime>;
  readonly paymentType: PaymentType;
  readonly state: LedgerPayableState;
  readonly type: LedgerLineItemType;
};

export type LedgerItemDescriptionDetails = {
  readonly __typename?: 'LedgerItemDescriptionDetails';
  readonly descriptionText: Scalars['String'];
  readonly idDetailList?: Maybe<ReadonlyArray<IdDetails>>;
};

export type LedgerItemInfo = {
  readonly __typename?: 'LedgerItemInfo';
  readonly itemCount?: Maybe<Scalars['Int']>;
  readonly itemList?: Maybe<ReadonlyArray<LedgerItem>>;
  readonly nextCutoffId?: Maybe<Scalars['String']>;
  readonly nextCutoffTime?: Maybe<Datetime>;
};

export type LedgerLineItemType =
  | 'CONSOLIDATION'
  | 'ESTIMATED_WP_SHIPPING'
  | 'ESTIMATED_WP_SHIPPING_REFUND'
  | 'FEE_DEDUCTION'
  | 'FEE_REVERSAL'
  | 'FINE_DEDUCTION'
  | 'FINE_REVERSAL'
  | 'INITIAL_WP_SHIPPING'
  | 'INITIAL_WP_SHIPPING_OFFSET'
  | 'INITIAL_WP_SHIPPING_REFUND'
  | 'INITIAL_WP_SHIPPING_REFUND_OFFSET'
  | 'ONEOFF_PAYMENT'
  | 'ONEOFF_PAYMENT_CANCELLATION'
  | 'ORDER'
  | 'PAYMENT'
  | 'REBATE'
  | 'REBATE_CANCEL'
  | 'REFUND'
  | 'TAX'
  | 'TAX_ADJUSTMENT'
  | 'TAX_REFUND';

export type LedgerOrderInfo = {
  readonly __typename?: 'LedgerOrderInfo';
  readonly carrierTier?: Maybe<OrderCarrierTier>;
  readonly confirmedDeliveredTime?: Maybe<Datetime>;
  readonly confirmedShippedTime?: Maybe<Datetime>;
  readonly disputeCarrierTier?: Maybe<OrderCarrierTier>;
  readonly disputeConfirmedTime?: Maybe<Datetime>;
  readonly disputeDeliveredTime?: Maybe<Datetime>;
  readonly isAplusOrder?: Maybe<Scalars['Boolean']>;
  readonly isEpcOrder?: Maybe<Scalars['Boolean']>;
  readonly isExpeditedPolicy?: Maybe<Scalars['Boolean']>;
  readonly isFakeTrackingOrder?: Maybe<Scalars['Boolean']>;
  readonly isFbwFastPayment?: Maybe<Scalars['Boolean']>;
  readonly isTopStandingMerchant?: Maybe<Scalars['Boolean']>;
  readonly isUnityOrder?: Maybe<Scalars['Boolean']>;
  readonly isValueOrder?: Maybe<Scalars['Boolean']>;
  readonly isWishExpress?: Maybe<Scalars['Boolean']>;
  readonly isWishLocal?: Maybe<Scalars['Boolean']>;
  readonly orderReleasedTime?: Maybe<Datetime>;
  readonly removedFromAplusTime?: Maybe<Datetime>;
  readonly shippedTime?: Maybe<Datetime>;
  readonly trackingCancelledTime?: Maybe<Datetime>;
  readonly trackingId?: Maybe<Scalars['String']>;
  readonly userReceivedTime?: Maybe<Datetime>;
  readonly warehouseArrivalTime?: Maybe<Datetime>;
};

export type LedgerPayableInfo = {
  readonly __typename?: 'LedgerPayableInfo';
  readonly ledgerEvents?: Maybe<ReadonlyArray<LedgerEvent>>;
  readonly ledgerItems?: Maybe<ReadonlyArray<LedgerItem>>;
};

export type LedgerPayableState =
  | 'LIMBO'
  | 'NEW'
  | 'PAID_IN_CLROOT'
  | 'SETTLED';

export type LedgerPayableType =
  | 'FINE'
  | 'ONEOFF'
  | 'ORDER'
  | 'PAYOUT'
  | 'SETTLEMENT';

export type LegacyRefundSource =
  | 'AUTO_LATE_FULFILL'
  | 'MERCHANT'
  | 'USER_CANCEL'
  | 'WISH_ADMIN_BOTH_EAT_COST'
  | 'WISH_ADMIN_MERCHANT_EATS_COST'
  | 'WISH_ADMIN_WISH_EATS_COST';

export type Length = {
  readonly __typename?: 'Length';
  readonly unit: LengthUnit;
  readonly value: Scalars['Float'];
};


export type LengthValueArgs = {
  targetUnit?: InputMaybe<LengthUnit>;
};

export type LengthInput = {
  readonly unit: LengthUnit;
  readonly value: Scalars['Float'];
};

export type LengthUnit =
  | 'CENTIMETER'
  | 'FEET'
  | 'INCH'
  | 'METER'
  | 'YARD';

export type LineItemSearchType =
  | 'CAMPAIGN_ID'
  | 'CHARGING_ID'
  | 'CTXN_REFUND_ITEM_ID'
  | 'DISPUTE_ID'
  | 'FBW_INVOICE_ID'
  | 'FINE_ID'
  | 'FINE_REVERSAL_ID'
  | 'ID'
  | 'LOGISTIC_OPTION_ID'
  | 'LOGISTIC_PROVIDER_ID'
  | 'MERCHANT_ONEOFF_PAYMENT_ID'
  | 'MERCHANT_PAYMENT_ID'
  | 'ORDER_ID'
  | 'REFUND_DETAIL_ID'
  | 'TRANSACTION_REFUND_ID'
  | 'WARNING_ID';

export type LineItemType =
  | 'B2B_SALE_FEE'
  | 'CANCEL_WITHHOLD_PAYMENT'
  | 'CHINA_POST_SUBSIDY'
  | 'CHINA_POST_SUBSIDY_REVERSE'
  | 'CN_ORDER_NOT_SHIP_WITH_WISHPOST_FINE'
  | 'COLLECTIONS_BOOST_CAMPAIGN_FEE'
  | 'CONSOLIDATE_MP_FINE'
  | 'CONSOLIDATE_MP_PAYMENT'
  | 'COUNTERFEIT_REFUND'
  | 'COVID19_SUBSIDY'
  | 'COVID19_SUBSIDY_REVERSE'
  | 'DECEPTIVE_FULFILLMENT_FINE'
  | 'DISPUTE_APPROVED'
  | 'DOUBLE_DEDUCTION_BOOK_KEEPER'
  | 'EARLY_PAYMENT'
  | 'EARLY_PAYMENT_CANCELLATION'
  | 'EARLY_PAYMENT_DEDUCTION'
  | 'EARLY_PAYMENT_REIMBURSEMENT_FEE'
  | 'ESTIMATED_WISHPOST_SHIPPING'
  | 'ESTIMATED_WISHPOST_SHIPPING_REFUND'
  | 'EXTERNAL_BOOST_CPA_FEE'
  | 'EXTERNAL_BOOST_FEE'
  | 'FAKE_RATING_FINE'
  | 'FAKE_TRACKING_FINE'
  | 'FBW_FEE'
  | 'FBW_PAYMENT'
  | 'FINE_REVERSED'
  | 'INFRACTION_FINE'
  | 'INITIAL_WISHPOST_SHIPPING'
  | 'INITIAL_WISHPOST_SHIPPING_OFFSET'
  | 'INITIAL_WISHPOST_SHIPPING_REFUND'
  | 'INITIAL_WISHPOST_SHIPPING_REFUND_OFFSET'
  | 'LATE_CONFIRMED_FULFILLMENT_FINE'
  | 'LCL_FBW_FEE'
  | 'LEGAL_SETTLEMENT_FINE'
  | 'LEGAL_SETTLEMENT_PAID_PENALTY'
  | 'LEGAL_SETTLEMENT_RESERVED_PENALTY'
  | 'LOGISTIC_FEE'
  | 'MARKETING_REBATE'
  | 'MARKETING_REBATE_REVERSE'
  | 'MERCHANT_CANCELLATION_FINE'
  | 'MERCHANT_HARASSMENT'
  | 'MERCHANT_INCENTIVE'
  | 'MERCHANT_INCENTIVE_REVERSE'
  | 'MISLEADING_VARIATION_FINE'
  | 'NEW_REFUNDED'
  | 'ONEOFF'
  | 'ONEOFF_ADMIN_TOOL'
  | 'ONEOFF_FINE'
  | 'OTHER_DEDUCTION'
  | 'OVERPAY_PAYMENT_AMOUNT'
  | 'PAID_PLACEMENT_ENROLLMENT_FEE'
  | 'PAID_PLACEMENT_IMPRESSION_FEE'
  | 'PAYMENT'
  | 'POLICY_VIOLATION_FINE'
  | 'PRODUCT_BOOST_BALANCE_REFUND'
  | 'PRODUCT_LISTING_FEE'
  | 'PRODUCT_REBATE'
  | 'PRODUCT_UNTAGGED_MISLEADING'
  | 'PROMOTED_PRODUCT_DISABLE_FINE'
  | 'PROMOTION_FEE'
  | 'QUALITY_REFUND_FINE'
  | 'REFUNDED'
  | 'REGISTRATION_REFUND'
  | 'RETROACTIVE_REFUND_FOR_LOW_RATED_PRODUCT'
  | 'RETROACTIVE_REFUND_FOR_PROBLEM_PRODUCT'
  | 'RETURN_LABEL_FEE'
  | 'REV_SHARE_ADJUST_PAYMENT'
  | 'SE_CASH_BACK'
  | 'SE_CASH_BACK_REVERSE'
  | 'SHIPPED'
  | 'STORE_PAYMENT'
  | 'STORE_PAYMENT_CANCELLATION'
  | 'STORE_PAYMENT_DEDUCTION'
  | 'STRATEGIC_ORDER_REBATE'
  | 'STRATEGIC_ORDER_REBATE_REVERSE'
  | 'TRANSACTION_FEE_REBATE'
  | 'TRANSACTION_FEE_REBATE_REVERSE'
  | 'UNCONFIRMED_CARRIER_FINE'
  | 'UNDERPAY_PAYMENT_AMOUNT'
  | 'UNFULFILLED_ORDER_FINE'
  | 'WISHPOST_ADJUSTMENT_DEDUCTION'
  | 'WISHPOST_ADJUSTMENT_PAYMENT'
  | 'WISHPOST_FULFILLMENT_FEE'
  | 'WISHPOST_LOGISTICS_FEE'
  | 'WISH_EXPRESS_REBATE'
  | 'WISH_EXPRESS_REBATE_REVERSE'
  | 'WISH_PARCEL_SERVICE_ADJUST_FEE'
  | 'WISH_PARCEL_SERVICE_ADJUST_PAYMENT'
  | 'WISH_PARCEL_SERVICE_FEE'
  | 'WITHHELD_RELEASED'
  | 'WITHHOLD_FUND_FINE'
  | 'WITHHOLD_PAYMENT'
  | 'WITHHOLD_RELEASE';

export type LinkProductComplianceAction =
  | 'UPDATE_EU_RP'
  | 'UPDATE_FRANCE_UIN'
  | 'UPDATE_GERMANY_UIN';

export type LinkProductComplianceSchema = {
  readonly __typename?: 'LinkProductComplianceSchema';
  readonly complianceCategories: ReadonlyArray<EuProductComplianceCategory>;
  readonly euResponsiblePerson?: Maybe<ResponsiblePersonSchema>;
  readonly franceUins?: Maybe<ReadonlyArray<FranceProductUniqueIdentificationNumberSchema>>;
  readonly germanyUins?: Maybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberSchema>>;
  readonly id: Scalars['ObjectIdType'];
  readonly isLinkedWithFranceUin?: Maybe<Scalars['Boolean']>;
  readonly isLinkedWithGermanyUin?: Maybe<Scalars['Boolean']>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly product?: Maybe<ProductSchema>;
  readonly productCategories: ReadonlyArray<MsrCategory>;
  readonly reviewState: LinkProductComplianceState;
  readonly trueTags?: Maybe<ReadonlyArray<TrueTagSchema>>;
};

export type LinkProductComplianceState =
  | 'HAS_RP'
  | 'HAS_UIN'
  | 'NO_RP'
  | 'NO_UIN';

export type LinkProductComplianceType =
  | 'DE_COMPLIANCE'
  | 'EU_COMPLIANCE'
  | 'FR_COMPLIANCE';

export type LinkProductComplianceUpsertInput = {
  readonly action: LinkProductComplianceAction;
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly responsiblePersonId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly uinIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type LinkShippingProfile = {
  readonly __typename?: 'LinkShippingProfile';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ListingQualityInsightsReportSchema = {
  readonly __typename?: 'ListingQualityInsightsReportSchema';
  readonly errorCode?: Maybe<ErrorCode>;
  readonly presignedS3Url?: Maybe<Scalars['String']>;
  readonly reportName?: Maybe<Scalars['String']>;
};

export type ListingQualityInsightsSchema = {
  readonly __typename?: 'ListingQualityInsightsSchema';
  readonly report?: Maybe<ListingQualityInsightsReportSchema>;
};

export type ListingStateSchema = {
  readonly __typename?: 'ListingStateSchema';
  readonly reason?: Maybe<CommerceProductListingStateReason>;
  readonly state: CommerceProductListingState;
};

export type Locale =
  | 'ar'
  | 'cs'
  | 'da'
  | 'de'
  | 'en'
  | 'es'
  | 'fi'
  | 'fr'
  | 'hu'
  | 'id'
  | 'it'
  | 'ja'
  | 'ko'
  | 'nb'
  | 'nl'
  | 'pl'
  | 'pt'
  | 'sv'
  | 'th'
  | 'tr'
  | 'up'
  | 'vi'
  | 'zh';

export type LocaleMutations = {
  readonly __typename?: 'LocaleMutations';
  readonly changeLocale: ChangeLocale;
};


export type LocaleMutationsChangeLocaleArgs = {
  input: ChangeLocaleInput;
};

export type LogToTreasureData = {
  readonly __typename?: 'LogToTreasureData';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type LogToTreasureDataInput = {
  readonly data: Scalars['JSONString'];
  readonly table: LoggableTable;
};

export type LoggableTable =
  | 'ADD_GTIN_PRODUCT'
  | 'ADD_PRODUCT_BUTTON_CLICK'
  | 'BLACKLIST_CRITERIA_DASHBOARD_ACTION'
  | 'BRAND_EDUCATION_CLICK'
  | 'CAMPAIGN_DETAILS_PAGE_MERCHANT_ACTION'
  | 'CHROME_SEARCH'
  | 'CLICK_CHECK_MY_MAIL'
  | 'COLLECTIONS_BOOST_UI'
  | 'EARLY_PAYMENT_PAGE'
  | 'EARLY_PAYMENT_REQUESTS'
  | 'FBS_PERFORMANCE_PAGE_ACTION'
  | 'FBW_INVENTORY_LISTING_PAGE_ACTION'
  | 'FBW_RECOMMENDATION_DASHBOARD_CLICK'
  | 'FBW_SHIPPING_PLAN_CREATION'
  | 'FBW_SPLASH_PAGE'
  | 'FINE_POLICY_PAGE_CLICK'
  | 'HOME_BANNER_CTA_CLICK'
  | 'HOME_BANNER_IMPRESSION'
  | 'HOME_PAGE_TUTORIAL_VIDEO_PLAYS'
  | 'MERCHANT_CS_SURVEY_RESULT'
  | 'MERCHANT_FAILED_PASSWORD_ATTEMPTS'
  | 'MERCHANT_NAV_CLICK'
  | 'MERCHANT_STANDING_CLICK'
  | 'MERCHANT_TODO_ITEMS'
  | 'MERCHANT_VACATION_MODE_SURVEY'
  | 'MERCHANT_WISH_PARCEL_SERVICE'
  | 'MFP_MERCHANT_ACTIVITY_LOG'
  | 'MM_INTERNAL_DOWNLOADS'
  | 'PB_AUTOMATED_CAMPAIGN_PUBLISHED_NOTI'
  | 'PB_BUDGET_DEPLETION_NOTI'
  | 'PB_BUDGET_DEPLETION_SOURCE'
  | 'PB_CREATE_CAMPAIGN_ACTIVITY_TRACKER'
  | 'PB_CREATE_CAMPAIGN_BUDGET_TRACKER'
  | 'PB_CREATE_CAMPAIGN_USER_ERRORS'
  | 'PB_PRODUCT_FEED_UPLOAD_PORTAL'
  | 'PB_V2_CREATE_CAMPAIGN_ACTIVITY_TRACKER'
  | 'PERFORMANCE_OVERVIEW_DASHBOARD'
  | 'PLUS_KYC_VERIFICATION_UI'
  | 'PLUS_PRODUCT_UPLOAD'
  | 'PLUS_SELLER_VERIFICATION_UI'
  | 'PLUS_WISH_EXPRESS_UI'
  | 'PRODUCT_BOOST_CREATE_DAILY_BUDGET_CAMPAIGN_CLICK'
  | 'PRODUCT_BOOST_CREATE_DAILY_BUDGET_CAMPAIGN_PAGE_VIEW'
  | 'PRODUCT_BOOST_DUPLICATE_CAMPAIGN_REMINDER_CLICK'
  | 'PRODUCT_BOOST_DUPLICATE_CAMPAIGN_REMINDER_VIEW'
  | 'PRODUCT_BOOST_ENABLE_PENDING_CAMPAIGN_MODAL'
  | 'PRODUCT_BOOST_ENABLE_PENDING_CAMPAIGN_MODAL_CLICK'
  | 'PRODUCT_BOOST_EXPOSURE_BOX_CREATE_CLICK'
  | 'PRODUCT_BOOST_EXPOSURE_BOX_LEARN_MORE_CLICK'
  | 'PRODUCT_BOOST_EXPOSURE_BOX_VIEW'
  | 'PRODUCT_BOOST_FREE_CREDIT_MODAL'
  | 'PRODUCT_BOOST_FREE_PROMOTION_CAMPAIGN_MODAL_CLICK'
  | 'PRODUCT_BOOST_FREE_PROMOTION_CAMPAIGN_MODAL_VIEW'
  | 'PRODUCT_BOOST_LIST_CAMPAIGN_BUDGET_DEPLETION_CLICK'
  | 'PRODUCT_BOOST_LIST_CAMPAIGN_BUDGET_DEPLETION_VIEW'
  | 'PRODUCT_BOOST_MANAGE_DAILY_BUDGET_CAMPAIGN_PAGE_VIEW'
  | 'PRODUCT_BOOST_NEW_NAV_TAB_CLICK'
  | 'PRODUCT_BOOST_NEW_PAGES_BUTTON_CLICK'
  | 'PRODUCT_BOOST_ONE_CLICK_DUPLICATE_AUTOMATED'
  | 'PRODUCT_BOOST_PRODUCT_FEEDBACK_VIEW'
  | 'PRODUCT_BOOST_PRODUCT_LIFETIME_PERFORMANCE_PAGE_VIEW'
  | 'PRODUCT_BOOST_PROMOTION_MODAL'
  | 'PRODUCT_BOOST_PUBLISH_AUTOMATED_CAMPAIGN_MODAL_CLICK'
  | 'PRODUCT_BOOST_PUBLISH_AUTOMATED_CAMPAIGN_MODAL_VIEW'
  | 'PRODUCT_BOOST_SPLASH_PAGE'
  | 'PRODUCT_BOOST_TRENDING_CATEGORIES_MODAL'
  | 'PRODUCT_BOOST_UPDATE_DAILY_BUDGET_CAMPAIGN_CLICK'
  | 'PRODUCT_SHIPPING_CLICK_SAVE'
  | 'PRODUCT_SHIPPING_PAGE_VIEW'
  | 'RECOMMENDATION_EMAIL_METRICS'
  | 'RESELLER_AGREEMENT_PAGE'
  | 'SIGNUP_V3_ID_CARD_EXAMPLE'
  | 'TAX_DECLINE_ENROLLMENT';

export type LogicalQueueSchema = {
  readonly __typename?: 'LogicalQueueSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly name?: Maybe<Scalars['String']>;
  readonly state?: Maybe<LogicalQueueStateType>;
};

export type LogicalQueueStateType =
  | 'ACTIVE'
  | 'DISABLED';

export type LoginAsMutations = {
  readonly __typename?: 'LoginAsMutations';
  readonly user?: Maybe<ByUserIdMutation>;
};


export type LoginAsMutationsUserArgs = {
  input: ByUserIdInput;
};

export type LoginErrorState =
  | 'CAPTCHA_REQUIRED'
  | 'LOGIN_ERROR'
  | 'TFA_REQUIRED';

export type LoginMutation = {
  readonly __typename?: 'LoginMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly errorState?: Maybe<LoginErrorState>;
  readonly loginOk: Scalars['Boolean'];
  readonly obfuscatedPhoneNumber?: Maybe<Scalars['String']>;
  readonly preferQr?: Maybe<Scalars['Boolean']>;
  readonly sessionKey?: Maybe<Scalars['String']>;
  readonly wechatBound?: Maybe<Scalars['Boolean']>;
};

export type LoginMutationInput = {
  readonly captchaCode?: InputMaybe<Scalars['String']>;
  readonly captchaToken?: InputMaybe<Scalars['String']>;
  readonly deviceId?: InputMaybe<Scalars['String']>;
  readonly deviceName?: InputMaybe<Scalars['String']>;
  readonly password: Scalars['String'];
  readonly qrTicket?: InputMaybe<Scalars['String']>;
  readonly rememberMe?: InputMaybe<Scalars['Boolean']>;
  readonly tfaToken?: InputMaybe<Scalars['String']>;
  readonly username: Scalars['String'];
};

export type LogisticsMetadataSchema = {
  readonly __typename?: 'LogisticsMetadataSchema';
  readonly gmvPer1k?: Maybe<CurrencyValue>;
  readonly height?: Maybe<Length>;
  readonly isFbwRecommended?: Maybe<Scalars['Boolean']>;
  readonly length?: Maybe<Length>;
  readonly weight?: Maybe<Weight>;
  readonly width?: Maybe<Length>;
};

export type LogisticsMutations = {
  readonly __typename?: 'LogisticsMutations';
  readonly changeShippingProviderStatus: ChangeShippingProviderStatus;
  readonly createShippingProvider: CreateShippingProvider;
  readonly fulfilledByWish?: Maybe<FulfilledByWishMutations>;
  readonly updateShippingProvider: UpdateShippingProvider;
  readonly updateShippingProviderName: UpdateShippingProviderName;
  readonly upsertConfirmedDeliveryCarrier?: Maybe<UpsertConfirmedDeliveryCarrier>;
};


export type LogisticsMutationsChangeShippingProviderStatusArgs = {
  input: ChangeShippingProviderStatusInput;
};


export type LogisticsMutationsCreateShippingProviderArgs = {
  input: ShippingProviderInput;
};


export type LogisticsMutationsUpdateShippingProviderArgs = {
  input: ShippingProviderInput;
};


export type LogisticsMutationsUpdateShippingProviderNameArgs = {
  input: UpdateShippingProviderNameInput;
};


export type LogisticsMutationsUpsertConfirmedDeliveryCarrierArgs = {
  input: DeliveryCarrierUpsertInput;
};

export type LogisticsSchema = {
  readonly __typename?: 'LogisticsSchema';
  readonly confirmedDeliveryCarrier?: Maybe<ConfirmedDeliveryCarriers>;
  readonly fbw: FulfilledByWishSchema;
  readonly nextProviderId?: Maybe<Scalars['Int']>;
  readonly shippingProviders?: Maybe<ReadonlyArray<ShippingProviderSchema>>;
  readonly shippingProvidersCount?: Maybe<Scalars['Int']>;
};


export type LogisticsSchemaShippingProvidersArgs = {
  isQualified?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ShippingProviderSearchType>;
  states?: InputMaybe<ReadonlyArray<ShippingProviderState>>;
};


export type LogisticsSchemaShippingProvidersCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ShippingProviderSearchType>;
  states?: InputMaybe<ReadonlyArray<ShippingProviderState>>;
};

export type LogoutMutation = {
  readonly __typename?: 'LogoutMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MfpCampaignCancelInfo = {
  readonly __typename?: 'MFPCampaignCancelInfo';
  readonly cancelledTime: Datetime;
  readonly comment?: Maybe<Scalars['String']>;
  readonly reason: MfpCampaignCancelReason;
};

export type MfpCampaignCancelReason =
  | 'MERCHANT_CANCELLED_WRONG_CAMPAIGN_INFO'
  | 'OTHER'
  | 'WISH_CANCELLED_FAILED_DEPENDENCIES'
  | 'WISH_CANCELLED_UNQUALIFIED_MERCHANT'
  | 'WRONG_PRODUCTS';

export type MfpCampaignConstantsSchema = {
  readonly __typename?: 'MFPCampaignConstantsSchema';
  readonly maxAllowedQuantity: Scalars['Int'];
  readonly maxCampaignDelayInHour: Scalars['Int'];
  readonly maxCampaignDurationInDays: Scalars['Int'];
  readonly maxCampaignNameLength: Scalars['Int'];
  readonly maxCampaignsPerRequest: Scalars['Int'];
  readonly maxDiscountPercentage: Scalars['Float'];
  readonly maxProductVariations: Scalars['Int'];
  readonly minCampaignDelayInHour: Scalars['Int'];
  readonly minDiscountPercentage: Scalars['Float'];
  readonly pricingGamingCancelThreshold: Scalars['Float'];
  readonly pricingGamingIgnoreThreshold: Scalars['Float'];
};

export type MfpCampaignEventConfig =
  | 'EVENT_ONLY'
  | 'EXCLUDE_EVENT'
  | 'UNSPECIFIED';

export type MfpCampaignEventSortBy =
  | 'END_TIME'
  | 'START_TIME'
  | 'SUBMISSION_DEADLINE';

export type MfpCampaignPromotionType =
  | 'FLASH_SALE'
  | 'PRICE_DISCOUNT'
  | 'SPEND_MORE_AND_SAVE_MORE';

export type MfpCampaignSchema = {
  readonly __typename?: 'MFPCampaignSchema';
  readonly cancelInfo?: Maybe<MfpCampaignCancelInfo>;
  readonly countries?: Maybe<ReadonlyArray<Country>>;
  readonly creationTime: Datetime;
  readonly discountDetails?: Maybe<ReadonlyArray<MfpVariationDiscountData>>;
  readonly discountDetailsProductCount?: Maybe<Scalars['Int']>;
  readonly endTime: Datetime;
  readonly event?: Maybe<CampaignEventInfo>;
  readonly flashSaleDetails?: Maybe<ReadonlyArray<MfpVariationDiscountData>>;
  readonly flashSaleDetailsProductCount?: Maybe<Scalars['Int']>;
  readonly genericDiscountDetails?: Maybe<Scalars['GenericScalar']>;
  readonly genericFlashSaleDetails?: Maybe<Scalars['GenericScalar']>;
  readonly genericUnqualifiedProductVariations?: Maybe<Scalars['GenericScalar']>;
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
  readonly promotionType: MfpCampaignPromotionType;
  readonly skipShipping: Scalars['Boolean'];
  readonly startTime: Datetime;
  readonly state: MfpCampaignState;
  readonly unqualifiedProductVariations?: Maybe<ReadonlyArray<MfpUnqualifiedVariationData>>;
};


export type MfpCampaignSchemaGenericDiscountDetailsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  performanceEndDate?: InputMaybe<DatetimeInput>;
  performanceStartDate?: InputMaybe<DatetimeInput>;
};


export type MfpCampaignSchemaGenericFlashSaleDetailsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  performanceEndDate?: InputMaybe<DatetimeInput>;
  performanceStartDate?: InputMaybe<DatetimeInput>;
};

export type MfpCampaignSearchType =
  | 'CAMPAIGN_ID'
  | 'CAMPAIGN_NAME'
  | 'PRODUCT_ID';

export type MfpCampaignState =
  | 'APPROVED'
  | 'CANCELLED'
  | 'PENDING';

export type MfpConstantsSchema = {
  readonly __typename?: 'MFPConstantsSchema';
  readonly campaign?: Maybe<MfpCampaignConstantsSchema>;
  readonly discountCampaign?: Maybe<MfpDiscountCampaignConstantsSchema>;
  readonly flashSaleCampaign?: Maybe<MfpFlashSaleConstantsSchema>;
};

export type MfpDiscountCampaignConstantsSchema = {
  readonly __typename?: 'MFPDiscountCampaignConstantsSchema';
  readonly maxDiscountDifference: Scalars['Float'];
  readonly maxDiscountPercentage: Scalars['Float'];
  readonly maxShippingIncreasePercentage: Scalars['Float'];
  readonly minDaysProductListed: Scalars['Int'];
  readonly minDaysVariationListed: Scalars['Int'];
  readonly minDiscountPercentage: Scalars['Float'];
  readonly minStartTimeForLaunch: Datetime;
  readonly minimumCooldownDays: Scalars['Int'];
  readonly minimumPercentageRequired: Scalars['Int'];
  readonly minimumProductHistoryDays: Scalars['Int'];
  readonly minimumProductRatingRequired: Scalars['Int'];
  readonly minimumProductSaleRequired: Scalars['Int'];
  readonly productAndShippingPriceDays: Scalars['Int'];
};

export type MfpFlashSaleConstantsSchema = {
  readonly __typename?: 'MFPFlashSaleConstantsSchema';
  readonly maxDiscountDifference: Scalars['Float'];
  readonly maxDiscountPercentage: Scalars['Float'];
  readonly maxShippingIncreasePercentage: Scalars['Float'];
  readonly minDaysProductListed: Scalars['Int'];
  readonly minDaysVariationListed: Scalars['Int'];
  readonly minDealQuantityPercentage: Scalars['Float'];
  readonly minDiscountPercentage: Scalars['Float'];
  readonly minStartTimeForLaunch: Datetime;
  readonly minimumCooldownDays: Scalars['Int'];
  readonly minimumPercentageRequired: Scalars['Int'];
  readonly minimumProductHistoryDays: Scalars['Int'];
  readonly minimumProductRatingRequired: Scalars['Int'];
  readonly minimumProductSaleRequired: Scalars['Int'];
  readonly productAndShippingPriceDays: Scalars['Int'];
};

export type MfpProductSearchType =
  | 'ID'
  | 'NAME'
  | 'SKU';

export type MfpServiceAdminMutations = {
  readonly __typename?: 'MFPServiceAdminMutations';
  readonly createWhitelistProducts: CreateWhitelistProductsMutation;
  readonly expireWhitelistProducts: ExpireWhitelistProductsMutation;
};


export type MfpServiceAdminMutationsCreateWhitelistProductsArgs = {
  input: CreateWhitelistProductsInput;
};


export type MfpServiceAdminMutationsExpireWhitelistProductsArgs = {
  input: ExpireWhitelistProductsInput;
};

export type MfpServiceMutations = {
  readonly __typename?: 'MFPServiceMutations';
  readonly admin?: Maybe<MfpServiceAdminMutations>;
  readonly cancelMfpCampaign: CancelMfpCampaign;
  readonly createProductsDownloadJob: CreateProductsDownloadJobMutation;
  readonly upsertDiscountCampaign: UpsertDiscountCampaignMutation;
  readonly upsertFlashSaleCampaign: UpsertFlashSaleCampaignMutation;
};


export type MfpServiceMutationsCancelMfpCampaignArgs = {
  input: CancelMfpCampaignInput;
};


export type MfpServiceMutationsCreateProductsDownloadJobArgs = {
  input: CreateProductsDownloadJobInput;
};


export type MfpServiceMutationsUpsertDiscountCampaignArgs = {
  input: UpsertDiscountCampaignInput;
};


export type MfpServiceMutationsUpsertFlashSaleCampaignArgs = {
  input: UpsertFlashSaleCampaignInput;
};

export type MfpServiceSchema = {
  readonly __typename?: 'MFPServiceSchema';
  readonly activeWhitelistProducts?: Maybe<ReadonlyArray<WhitelistProductInfo>>;
  readonly activeWhitelistProductsCount?: Maybe<Scalars['Int']>;
  readonly campaignEvents?: Maybe<ReadonlyArray<CampaignEventInfo>>;
  readonly campaignEventsCount?: Maybe<Scalars['Int']>;
  readonly campaigns?: Maybe<ReadonlyArray<MfpCampaignSchema>>;
  readonly campaignsCount?: Maybe<Scalars['Int']>;
  readonly checkEligibility?: Maybe<Scalars['GenericScalar']>;
  readonly eligibleProducts?: Maybe<ReadonlyArray<EligibleProductInfo>>;
  readonly eligibleProductsCount?: Maybe<Scalars['Int']>;
  readonly genericCampaigns?: Maybe<ReadonlyArray<Scalars['GenericScalar']>>;
  readonly genericEligibleProducts?: Maybe<Scalars['GenericScalar']>;
};


export type MfpServiceSchemaActiveWhitelistProductsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sort?: InputMaybe<WhitelistProductSort>;
};


export type MfpServiceSchemaActiveWhitelistProductsCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};


export type MfpServiceSchemaCampaignEventsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType>>;
  sort?: InputMaybe<CampaignEventSort>;
  startAtMax?: InputMaybe<DatetimeInput>;
  startAtMin?: InputMaybe<DatetimeInput>;
  submitAtMax?: InputMaybe<DatetimeInput>;
  submitAtMin?: InputMaybe<DatetimeInput>;
};


export type MfpServiceSchemaCampaignEventsCountArgs = {
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType>>;
  startAtMax?: InputMaybe<DatetimeInput>;
  startAtMin?: InputMaybe<DatetimeInput>;
  submitAtMax?: InputMaybe<DatetimeInput>;
  submitAtMin?: InputMaybe<DatetimeInput>;
};


export type MfpServiceSchemaCampaignsArgs = {
  endAtMax?: InputMaybe<DatetimeInput>;
  endAtMin?: InputMaybe<DatetimeInput>;
  eventConfig?: InputMaybe<MfpCampaignEventConfig>;
  eventIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType>>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpCampaignSearchType>;
  startAtMax?: InputMaybe<DatetimeInput>;
  startAtMin?: InputMaybe<DatetimeInput>;
  states?: InputMaybe<ReadonlyArray<MfpCampaignState>>;
};


export type MfpServiceSchemaCampaignsCountArgs = {
  endAtMax?: InputMaybe<DatetimeInput>;
  endAtMin?: InputMaybe<DatetimeInput>;
  eventConfig?: InputMaybe<MfpCampaignEventConfig>;
  eventIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType>>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpCampaignSearchType>;
  startAtMax?: InputMaybe<DatetimeInput>;
  startAtMin?: InputMaybe<DatetimeInput>;
  states?: InputMaybe<ReadonlyArray<MfpCampaignState>>;
};


export type MfpServiceSchemaCheckEligibilityArgs = {
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  promotionType?: InputMaybe<MfpCampaignPromotionType>;
  variationIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};


export type MfpServiceSchemaEligibleProductsArgs = {
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  promotionType?: InputMaybe<MfpCampaignPromotionType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpProductSearchType>;
  sort?: InputMaybe<ProductSort>;
};


export type MfpServiceSchemaEligibleProductsCountArgs = {
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  promotionType?: InputMaybe<MfpCampaignPromotionType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpProductSearchType>;
};


export type MfpServiceSchemaGenericCampaignsArgs = {
  endAtMax?: InputMaybe<DatetimeInput>;
  endAtMin?: InputMaybe<DatetimeInput>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  performanceEndDate?: InputMaybe<DatetimeInput>;
  performanceStartDate?: InputMaybe<DatetimeInput>;
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType>>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpCampaignSearchType>;
  startAtMax?: InputMaybe<DatetimeInput>;
  startAtMin?: InputMaybe<DatetimeInput>;
  states?: InputMaybe<ReadonlyArray<MfpCampaignState>>;
};


export type MfpServiceSchemaGenericEligibleProductsArgs = {
  countries?: InputMaybe<ReadonlyArray<CountryCode>>;
  currency: PaymentCurrencyCode;
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  promotionType?: InputMaybe<MfpCampaignPromotionType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MfpProductSearchType>;
  sort?: InputMaybe<ProductSort>;
};

export type MfpUnqualifiedVariationData = {
  readonly __typename?: 'MFPUnqualifiedVariationData';
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
  readonly reason: MfpVariationUnqualifiedReason;
  readonly variation: VariationSchema;
  readonly variationId: Scalars['ObjectIdType'];
};

export type MfpVariationDiscountData = {
  readonly __typename?: 'MFPVariationDiscountData';
  readonly discountAmount?: Maybe<CurrencyValue>;
  readonly discountPercentage: Scalars['Float'];
  readonly maxQuantity?: Maybe<Scalars['Int']>;
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
  readonly scheduledEndTime?: Maybe<Datetime>;
  readonly scheduledStartTime?: Maybe<Datetime>;
  readonly variation: VariationSchema;
  readonly variationId: Scalars['ObjectIdType'];
};

export type MfpVariationUnqualifiedReason =
  | 'CAMPAIGN_LIMIT'
  | 'COMPETING_PROMOTION'
  | 'DISCOUNT_PRICE_HISTORY'
  | 'FLASH_SALE_MINIMUM_DEAL_QUANTITY'
  | 'FLASH_SALE_MINIMUM_VARIATION_INVENTORY'
  | 'FRS_DISCOUNT_PRICE'
  | 'FRS_HIGH_DISCOUNT'
  | 'FRS_LOW_DISCOUNT'
  | 'FRS_NEGATIVE_PRICE'
  | 'INVALID_ID'
  | 'LOW_RATING'
  | 'MERCHANT_ELIGIBILITY'
  | 'MININUM_VARIATION_PERCENTAGE'
  | 'NEGATIVE_PRODUCT_PRICE'
  | 'NOT_IN_STOCK'
  | 'NOT_OWNED_BY_MERCHANT'
  | 'PRODUCT_CATEGORY'
  | 'PRODUCT_LISTED_DAYS'
  | 'PRODUCT_PRICE'
  | 'PRODUCT_SHIPPING_PRICE'
  | 'PROMOTION_HISTORY'
  | 'SALE_HISTORY'
  | 'UNITY_PRODUCT'
  | 'VARIATIONS_PRICING_GAMING';

export type MfpWhitelistProductSortBy =
  | 'END_TIME'
  | 'START_TIME';

export type MmsLeadProductCategory =
  | 'ARTS_CRAFTS_AND_SEWING'
  | 'BABY_AND_TODDLER'
  | 'BOOKS'
  | 'CARS_AND_AUTOMOTIVE'
  | 'CLOTHING_SHOES_AND_ACCESSORIES'
  | 'COLLECTABLES_AND_MEMORABILIA'
  | 'ELECTRONICS_AND_TECHNOLOGY'
  | 'FOOD_AND_DRINK'
  | 'HEALTH_AND_BEAUTY'
  | 'HOME_GARDEN_AND_PETS'
  | 'HOUSEHOLD_SUPPLIES'
  | 'JEWELLERY_AND_WATCHES'
  | 'MOVIES_VIDEO_GAMES_AND_MUSIC'
  | 'MUSICAL_INSTRUMENTS_AND_DJ'
  | 'OTHER'
  | 'REFURBISHED_ELECTRONICS'
  | 'SPORTS_AND_OUTDOORS'
  | 'TOOLS_AND_DIY'
  | 'TOYS_AND_GAMES';

export type MmsLeadSubmissionInput = {
  readonly annualRevenue: MmsLeadYearlyRevenue;
  readonly companyLegalName: Scalars['String'];
  readonly emailAddress: Scalars['String'];
  readonly firstName: Scalars['String'];
  readonly lastName: Scalars['String'];
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly productCategory: MmsLeadProductCategory;
  readonly websiteUrl: Scalars['String'];
};

export type MmsLeadSubmissionMutation = {
  readonly __typename?: 'MMSLeadSubmissionMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MmsLeadYearlyRevenue = {
  readonly end: CurrencyInput;
  readonly start: CurrencyInput;
};

export type MsrCategory =
  | 'ELECTRICAL_PRODUCTS'
  | 'ELECTRONICS'
  | 'PPE'
  | 'TOYS';

export type ManualLinkAuthentication = {
  readonly merchant: Scalars['String'];
  readonly password: Scalars['String'];
  readonly sendPhoneCall?: InputMaybe<Scalars['Boolean']>;
};

export type ManualLinkAuthenticationMutation = {
  readonly __typename?: 'ManualLinkAuthenticationMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly obfuscatedPhoneNumber?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly supportVerificationCode?: Maybe<Scalars['String']>;
};

export type ManualLinkDeletion = {
  readonly merchant: Scalars['String'];
};

export type ManualLinkDeletionMutation = {
  readonly __typename?: 'ManualLinkDeletionMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ManualLinkVerification = {
  readonly merchant: Scalars['String'];
  readonly verificationCode: Scalars['String'];
};

export type ManualLinkVerificationMutation = {
  readonly __typename?: 'ManualLinkVerificationMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MarkProductTaxonomyCategoryDisputeUnchanged = {
  readonly __typename?: 'MarkProductTaxonomyCategoryDisputeUnchanged';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MarkProductTaxonomyCategoryDisputeUnchangedInput = {
  readonly adminNote?: InputMaybe<Scalars['String']>;
  readonly adminUnchangedReason: ProductTaxonomyCategoryDisputeAdminUnchangedReason;
  readonly disputeId: Scalars['ObjectIdType'];
};

export type MarkProductTaxonomyCategoryDisputeUpdated = {
  readonly __typename?: 'MarkProductTaxonomyCategoryDisputeUpdated';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MarkProductTaxonomyCategoryDisputeUpdatedInput = {
  readonly categoryIdApproved: Scalars['Int'];
  readonly categoryPath: Scalars['String'];
  readonly categoryTreeId: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly disputeId: Scalars['ObjectIdType'];
  readonly l1CategoryIdApproved: Scalars['Int'];
};

export type MarketingBonusBudgetType =
  | 'CNY_BONUS_BUDGET'
  | 'DECREASED_PB_SPEND_BONUS_BUDGET'
  | 'NO_PROMOTION'
  | 'VIDEO_PRODUCTS_BONUS_BUDGET';

export type MarketingCampaignPropertySchema = {
  readonly __typename?: 'MarketingCampaignPropertySchema';
  readonly campaignLockDays: Scalars['Int'];
  readonly flexibleBudgetSuggestedBudgetFactor: Scalars['Float'];
  readonly learningStatusThreshold: Scalars['Int'];
  readonly maxBid: CurrencyValue;
  readonly maxCampaignNameLength: Scalars['Int'];
  readonly maxCsvDownloadRows: Scalars['Int'];
  readonly maxKeywordLen: Scalars['Int'];
  readonly maxKeywords: Scalars['Int'];
  readonly maxNumWeeks: Scalars['Int'];
  readonly maxProducts: Scalars['Int'];
  readonly maxStartDate: Datetime;
  readonly minBid: CurrencyValue;
  readonly minKeywords: Scalars['Int'];
  readonly minStartDate: Datetime;
};

export type MarketingCampaignState =
  | 'CANCELLED'
  | 'DRAFTING'
  | 'ENDED'
  | 'NEW'
  | 'PAID'
  | 'PENDING'
  | 'READY'
  | 'SAVED'
  | 'STARTED'
  | 'STOPPED';

export type MarketingFlexibleBudgetType =
  | 'ALL_TIER'
  | 'DISABLED'
  | 'SILVER_TIER';

export type MarketingImpressionDailyStats = {
  readonly __typename?: 'MarketingImpressionDailyStats';
  readonly date: Datetime;
  readonly impressions?: Maybe<Scalars['Int']>;
};

export type MarketingMerchantPropertySchema = {
  readonly __typename?: 'MarketingMerchantPropertySchema';
  readonly allowLocalizedCurrency: Scalars['Boolean'];
  readonly allowMaxboost: Scalars['Boolean'];
  readonly canAcceptTos: Scalars['Boolean'];
  readonly dailyMinBudget: CurrencyValue;
  readonly defaultFlexibleBudgetType: MarketingFlexibleBudgetType;
  readonly hasAutomatedCampaign: Scalars['Boolean'];
  readonly isFreeBudgetMerchant: Scalars['Boolean'];
  readonly latestTosVersion: Scalars['Int'];
  readonly maxBudgetToAdd: CurrencyValue;
  readonly minBudgetToAdd: CurrencyValue;
  readonly minSpendPerProduct: CurrencyValue;
  readonly offsiteBoost: OffsiteBoost;
  readonly refundAssuranceConstants: RefundAssuranceConstants;
  readonly showCredits: Scalars['Boolean'];
  readonly spending: MarketingSpendingBreakdown;
  readonly state: MarketingMerchantState;
  readonly wishSubsidyDiscountFactor: Scalars['Float'];
};

export type MarketingMerchantState =
  | 'APPROVED'
  | 'INVITED'
  | 'PENDING'
  | 'REJECTED';

export type MarketingPeriodImpressionStats = {
  readonly __typename?: 'MarketingPeriodImpressionStats';
  readonly endDate: Datetime;
  readonly impressionDailyStats: ReadonlyArray<MarketingImpressionDailyStats>;
  readonly startDate: Datetime;
  readonly totalImpressions: Scalars['String'];
};

export type MarketingServiceMutations = {
  readonly __typename?: 'MarketingServiceMutations';
  readonly acceptTos: ProductBoostAcceptTos;
  readonly createLqdCampaign: CreateLqdCampaign;
  readonly updateOffsiteBoost: UpdateOffsiteBoost;
};


export type MarketingServiceMutationsAcceptTosArgs = {
  input: ProductBoostAcceptTosInput;
};


export type MarketingServiceMutationsCreateLqdCampaignArgs = {
  input: LqdCampaignInput;
};


export type MarketingServiceMutationsUpdateOffsiteBoostArgs = {
  input: OffsiteBoostPropertyInput;
};

export type MarketingServiceSchema = {
  readonly __typename?: 'MarketingServiceSchema';
  readonly actionRequiredCampaignCount: Scalars['Int'];
  readonly balanceTransactions: ReadonlyArray<BalanceTransactionRecord>;
  readonly balanceTransactionsCount: Scalars['Int'];
  readonly campaign?: Maybe<CampaignSchema>;
  readonly campaignProperty?: Maybe<MarketingCampaignPropertySchema>;
  readonly creditTransactions: ReadonlyArray<CreditTransactionRecord>;
  readonly creditTransactionsCount: Scalars['Int'];
  readonly currentMerchant?: Maybe<MarketingMerchantPropertySchema>;
  readonly floorbids: ReadonlyArray<FloorBidsSchema>;
  readonly impressionStats: MarketingPeriodImpressionStats;
  readonly lowBudgetCampaignCount: Scalars['Int'];
  readonly lqdPromotion: LqdPromotionSchema;
  readonly merchantProperty?: Maybe<MarketingMerchantPropertySchema>;
  readonly pendingCampaignCount: Scalars['Int'];
  readonly productPromotion?: Maybe<ProductPromotionSchema>;
  readonly productPromotions: ReadonlyArray<ProductPromotionSchema>;
  readonly productPromotionsCount: Scalars['Int'];
  readonly promotableProducts: ReadonlyArray<PromotableProduct>;
  readonly promotableProductsCount: Scalars['Int'];
  readonly trendingCategories: ReadonlyArray<TrueTagSchema>;
};


export type MarketingServiceSchemaActionRequiredCampaignCountArgs = {
  createdInPastDays?: InputMaybe<Scalars['Int']>;
};


export type MarketingServiceSchemaBalanceTransactionsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type MarketingServiceSchemaCampaignArgs = {
  duplicateId?: InputMaybe<Scalars['ObjectIdType']>;
  id: Scalars['ObjectIdType'];
};


export type MarketingServiceSchemaCreditTransactionsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type MarketingServiceSchemaImpressionStatsArgs = {
  endTime: DatetimeInput;
  startTime: DatetimeInput;
};


export type MarketingServiceSchemaMerchantPropertyArgs = {
  merchantId: Scalars['ObjectIdType'];
};


export type MarketingServiceSchemaPendingCampaignCountArgs = {
  createdInPastDays?: InputMaybe<Scalars['Int']>;
};


export type MarketingServiceSchemaProductPromotionArgs = {
  productId: Scalars['ObjectIdType'];
};


export type MarketingServiceSchemaProductPromotionsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  promotionStatuses?: InputMaybe<ReadonlyArray<ProductPromotionStatus>>;
  query?: InputMaybe<Scalars['String']>;
  refundAssuranceType?: InputMaybe<ProductPromotionRefundAssuranceType>;
  searchType?: InputMaybe<ProductPromotionSearchType>;
};


export type MarketingServiceSchemaProductPromotionsCountArgs = {
  promotionStatuses?: InputMaybe<ReadonlyArray<ProductPromotionStatus>>;
  query?: InputMaybe<Scalars['String']>;
  refundAssuranceType?: InputMaybe<ProductPromotionRefundAssuranceType>;
  searchType?: InputMaybe<ProductPromotionSearchType>;
};


export type MarketingServiceSchemaPromotableProductsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductPromotionSearchType>;
  wishExpressOnly?: InputMaybe<Scalars['Boolean']>;
};


export type MarketingServiceSchemaPromotableProductsCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductPromotionSearchType>;
  wishExpressOnly?: InputMaybe<Scalars['Boolean']>;
};

export type MarketingSpendingBreakdown = {
  readonly __typename?: 'MarketingSpendingBreakdown';
  readonly accountBalance: CurrencyValue;
  readonly budgetAvailable: CurrencyValue;
  readonly pending: CurrencyValue;
  readonly promotionBalance: CurrencyValue;
  readonly promotionCredit: CurrencyValue;
  readonly promotionLoan: CurrencyValue;
  readonly promotionLoanDescription: Scalars['String'];
};

export type MarketingStats = {
  readonly __typename?: 'MarketingStats';
  readonly lqdPromotion: LqdPromotionStats;
  readonly offsiteBoost: OffsiteBoostStats;
};


export type MarketingStatsLqdPromotionArgs = {
  campaignId: Scalars['ObjectIdType'];
};


export type MarketingStatsOffsiteBoostArgs = {
  endDate: DatetimeInput;
  startDate: DatetimeInput;
};

export type MerchantActionsRequiredSchema = {
  readonly __typename?: 'MerchantActionsRequiredSchema';
  readonly actionsCompleted: ReadonlyArray<MerchantActionsType>;
  readonly actionsRequired: ReadonlyArray<MerchantActionsType>;
  readonly currentAction: MerchantActionsType;
  readonly id: Scalars['ObjectIdType'];
  readonly merchantId: Scalars['ObjectIdType'];
  readonly state: MerchantActionsRequiredStateType;
};

export type MerchantActionsRequiredStateType =
  | 'COMPLETED'
  | 'IN_PROGRESS'
  | 'REJECTED';

export type MerchantActionsType =
  | 'BANK_VERIFICATION'
  | 'SELLER_PROFILE_VERIFICATION';

export type MerchantAnnouncementCategory =
  | 'ACCOUNT_SETTINGS'
  | 'API'
  | 'INSIGHTS'
  | 'INTELLECTUAL_PROPERTY'
  | 'LOCAL_CURRENCY'
  | 'LOGISTICS'
  | 'LOGISTICS_PRICING'
  | 'ORDERS'
  | 'PAYMENTS'
  | 'POLICIES_AND_TERMS'
  | 'PRODUCTS'
  | 'SHIPPING_CARRIERS'
  | 'TAX';

export type MerchantAnnouncementProgram =
  | 'ADVANCED_LOGISTICS_PROGRAM'
  | 'EPC'
  | 'FBW_FBS'
  | 'MERCHANT_FUNDED_PROMOTIONS'
  | 'MERCHANT_STANDING'
  | 'PARTIAL_REFUNDS'
  | 'PRODUCTBOOST'
  | 'RETURNS_PROGRAM'
  | 'VIDEOS'
  | 'WISHPOST'
  | 'WISH_EXPRESS'
  | 'WISH_STANDARDS';

export type MerchantAnnouncementSchema = {
  readonly __typename?: 'MerchantAnnouncementSchema';
  readonly categories?: Maybe<ReadonlyArray<AnnouncementCategorySchema>>;
  readonly createdAt?: Maybe<Datetime>;
  readonly ctaDueDate?: Maybe<Datetime>;
  readonly ctaLink?: Maybe<Scalars['String']>;
  readonly ctaText?: Maybe<Scalars['String']>;
  readonly expiryDate?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly important?: Maybe<Scalars['Boolean']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly program?: Maybe<AnnouncementProgramSchema>;
  readonly sender: UserSchema;
  readonly state: MerchantAnnouncementState;
  readonly title?: Maybe<Scalars['String']>;
  readonly type: MerchantAnnouncementType;
};

export type MerchantAnnouncementState =
  | 'COMPLETE'
  | 'CREATING'
  | 'NEW'
  | 'UPDATE'
  | 'UPDATING';

export type MerchantAnnouncementType =
  | 'BD_ANNOUNCEMENT'
  | 'SYSTEM_UPDATE';

export type MerchantAnnouncementV2Schema = {
  readonly __typename?: 'MerchantAnnouncementV2Schema';
  readonly audienceSourceType: AnnouncementAudienceSourceType;
  readonly categories: ReadonlyArray<AnnouncementCategorySchemaV2>;
  readonly contentType?: Maybe<AnnouncementContentType>;
  readonly ctaDueDate?: Maybe<Datetime>;
  readonly ctaText?: Maybe<Scalars['String']>;
  readonly expiryDate?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly important?: Maybe<Scalars['Boolean']>;
  readonly link?: Maybe<Scalars['String']>;
  readonly locales: ReadonlyArray<AnnouncementLocale>;
  readonly message?: Maybe<Scalars['String']>;
  readonly program?: Maybe<AnnouncementProgramSchemaV2>;
  readonly publishDate: Datetime;
  readonly sender: UserSchema;
  readonly state: AnnouncementState;
  readonly title?: Maybe<Scalars['String']>;
  readonly type: AnnouncementType;
  readonly userAnnouncementCount: Scalars['Int'];
};

export type MerchantBrandSchema = {
  readonly __typename?: 'MerchantBrandSchema';
  readonly brand: BrandSchema;
  readonly lifetimeStatsObject?: Maybe<BrandedMerchantLifeTimeStatsObjectSchema>;
  readonly numProducts: Scalars['Int'];
};

export type MerchantConnectionSchema = {
  readonly __typename?: 'MerchantConnectionSchema';
  readonly confidence?: Maybe<Scalars['Float']>;
  readonly id: Scalars['ObjectIdType'];
  readonly matchedValue: Scalars['String'];
  readonly merchantIds: ReadonlyArray<Scalars['String']>;
  readonly merchants: ReadonlyArray<MerchantSchema>;
  readonly reason: Scalars['String'];
  readonly updatedTime?: Maybe<Datetime>;
};

export type MerchantCountryDetailsSchema = {
  readonly __typename?: 'MerchantCountryDetailsSchema';
  readonly detectedDomicileCountry?: Maybe<Country>;
  readonly detectedShipFromCountry?: Maybe<Country>;
  readonly domicileDetectionFactors: ReadonlyArray<DetectionFactor>;
  readonly domicileDetectionReason?: Maybe<Scalars['String']>;
};

export type MerchantCountryDetectionFactorType =
  | 'BD_REP_COUNTRY'
  | 'BOUND_WISHPOST'
  | 'BUSINESS_ADDRESS'
  | 'DOMICILE_OVERRIDE'
  | 'EMAIL_PROVIDER'
  | 'ERP_ENROLLMENT'
  | 'GEOIP_LOGIN'
  | 'MERCHANT_GROUP'
  | 'ORDER_SHIPPING_PROVIDER'
  | 'ORDER_TRACKING_ORIGIN'
  | 'PAYMENT_PROVIDER'
  | 'PHONE_COUNTRY'
  | 'SHIP_FROM_OVERRIDE'
  | 'STORE_ADDRESS'
  | 'VERIFIED_PROFILE'
  | 'WISHPOST_LINKED';

export type MerchantEntityManualLinkMutations = {
  readonly __typename?: 'MerchantEntityManualLinkMutations';
  readonly completeManualLink?: Maybe<ManualLinkVerificationMutation>;
  readonly deleteManualLink?: Maybe<ManualLinkDeletionMutation>;
  readonly requestManualLink?: Maybe<ManualLinkAuthenticationMutation>;
};


export type MerchantEntityManualLinkMutationsCompleteManualLinkArgs = {
  input: ManualLinkVerification;
};


export type MerchantEntityManualLinkMutationsDeleteManualLinkArgs = {
  input: ManualLinkDeletion;
};


export type MerchantEntityManualLinkMutationsRequestManualLinkArgs = {
  input: ManualLinkAuthentication;
};

export type MerchantEntitySchema = {
  readonly __typename?: 'MerchantEntitySchema';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly merchantConnections?: Maybe<ReadonlyArray<MerchantConnectionSchema>>;
  readonly merchants?: Maybe<ReadonlyArray<MerchantSchema>>;
  readonly updatedTime?: Maybe<Datetime>;
};

export type MerchantFbwSchema = {
  readonly __typename?: 'MerchantFBWSchema';
  readonly availableWarehouses?: Maybe<ReadonlyArray<FbwWarehouseSchema>>;
  readonly availableWarehousesForShippingPlanSubmission?: Maybe<ReadonlyArray<FbwWarehouseSchema>>;
};

export type MerchantFacingPayoutState =
  | 'CANCELLED'
  | 'DELAYED'
  | 'FAILED'
  | 'GENERATING'
  | 'IN_PROGRESS'
  | 'NA'
  | 'PENDING'
  | 'REISSUED'
  | 'RELEASED'
  | 'RESUBMITTED'
  | 'SUCCESS'
  | 'WITHHOLD';

export type MerchantFeedJobStatus =
  | 'CANCELLED'
  | 'EXCEPTION'
  | 'FINISHED'
  | 'FINISHED_AND_EMAILED'
  | 'NEW'
  | 'NEW_AND_EMAILED'
  | 'PENDING'
  | 'RUNNING';

export type MerchantFileSchema = {
  readonly __typename?: 'MerchantFileSchema';
  readonly displayFilename: Scalars['String'];
  readonly fileUrl: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly isImageFile: Scalars['Boolean'];
};


export type MerchantFileSchemaFileUrlArgs = {
  console?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantFinalSaleAction =
  | 'DISABLE'
  | 'ENABLE';

export type MerchantFinalSaleMutations = {
  readonly __typename?: 'MerchantFinalSaleMutations';
  readonly updateMerchantFinalSale?: Maybe<UpdateMerchantFinalSale>;
};


export type MerchantFinalSaleMutationsUpdateMerchantFinalSaleArgs = {
  input?: InputMaybe<MerchantFinalSaleUpdateInput>;
};

export type MerchantFinalSaleUpdateInput = {
  readonly action: MerchantFinalSaleAction;
  readonly category: FinalSaleCategory;
  readonly merchantId: Scalars['ObjectIdType'];
};

export type MerchantFineExemptionInfoLinkType =
  | 'ARTICLE'
  | 'CATEGORY'
  | 'FULL_LINK';

export type MerchantFineSchema = {
  readonly __typename?: 'MerchantFineSchema';
  readonly amount?: Maybe<Scalars['Float']>;
  readonly creator?: Maybe<UserSchema>;
  readonly delayedDeductionDate?: Maybe<Datetime>;
  readonly exemptInfoLink?: Maybe<Scalars['String']>;
  readonly exemptLinkType?: Maybe<MerchantFineExemptionInfoLinkType>;
  readonly fineType: FineReason;
  readonly id: Scalars['ObjectIdType'];
  readonly isExempt: Scalars['Boolean'];
  readonly localizedAmount?: Maybe<CurrencyValue>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly merchantPaymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly merchantPaymentTime?: Maybe<Datetime>;
  readonly phabTicketId?: Maybe<Scalars['String']>;
  readonly policyLink?: Maybe<Scalars['String']>;
  readonly reversals?: Maybe<ReadonlyArray<Reversal>>;
  readonly status: Status;
  readonly timestamp?: Maybe<Datetime>;
};

export type MerchantFulfillmentTimeInfoInput = {
  readonly carrierPickupTime?: InputMaybe<Scalars['String']>;
  readonly merchantHandlingTime?: InputMaybe<Scalars['Int']>;
  readonly pickupCarrier?: InputMaybe<PickupCarrier>;
  readonly workdayCalendar?: InputMaybe<WorkdayCalenderInput>;
  readonly workdayOverrideCalendar?: InputMaybe<ReadonlyArray<InputMaybe<WorkDayOverrideInput>>>;
};

export type MerchantGamingReviewFieldTicketType =
  | 'lastSourceUpsertDate';

export type MerchantGamingReviewMutations = {
  readonly __typename?: 'MerchantGamingReviewMutations';
  readonly manualCreate?: Maybe<MerchantGamingReviewTicketManualCreation>;
  readonly manualCreateUpload?: Maybe<MerchantGamingReviewTicketManualCreationUpload>;
  readonly updateMerchantGamingReviewTicket?: Maybe<UpdateMerchantGamingReviewTicket>;
};


export type MerchantGamingReviewMutationsManualCreateArgs = {
  input: MerchantGamingReviewTicketManualCreationUploadInput;
};


export type MerchantGamingReviewMutationsManualCreateUploadArgs = {
  input: MerchantGamingReviewTicketManualCreationUploadInput;
};


export type MerchantGamingReviewMutationsUpdateMerchantGamingReviewTicketArgs = {
  input?: InputMaybe<MerchantGamingReviewUpdateInput>;
};

export type MerchantGamingReviewPolicyTierType =
  | 'HOME_TIER'
  | 'PROBATION_TIER'
  | 'SUSPICIOUS_TIER';

export type MerchantGamingReviewSourceType =
  | 'GATE_KEEPER'
  | 'POLICY'
  | 'WISH_ADMIN';

export type MerchantGamingReviewState =
  | 'AWAITING_ADMIN'
  | 'CLOSED'
  | 'CONFIRMED'
  | 'ESCALATED'
  | 'REJECTED';

export type MerchantGamingReviewTicketAction =
  | 'CLAIM'
  | 'CLOSE'
  | 'COMMENT'
  | 'ESCALATE'
  | 'UNCLAIM'
  | 'UPDATE_POLICY_TIER';

export type MerchantGamingReviewTicketCommentSchema = {
  readonly __typename?: 'MerchantGamingReviewTicketCommentSchema';
  readonly date: Datetime;
  readonly message: Scalars['String'];
  readonly senderId?: Maybe<Scalars['ObjectIdType']>;
  readonly senderName?: Maybe<Scalars['String']>;
};

export type MerchantGamingReviewTicketManualCreation = {
  readonly __typename?: 'MerchantGamingReviewTicketManualCreation';
  readonly logs?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MerchantGamingReviewTicketManualCreationSchema = {
  readonly __typename?: 'MerchantGamingReviewTicketManualCreationSchema';
  readonly merchantId: Scalars['ObjectIdType'];
  readonly reason: Scalars['String'];
};

export type MerchantGamingReviewTicketManualCreationUpload = {
  readonly __typename?: 'MerchantGamingReviewTicketManualCreationUpload';
  readonly logs?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly updateList: ReadonlyArray<MerchantGamingReviewTicketManualCreationSchema>;
};

export type MerchantGamingReviewTicketManualCreationUploadInput = {
  readonly fileUrl: Scalars['String'];
};

export type MerchantGamingReviewTicketSchema = {
  readonly __typename?: 'MerchantGamingReviewTicketSchema';
  readonly claimedAdminId?: Maybe<Scalars['ObjectIdType']>;
  readonly claimedAdminUser?: Maybe<UserSchema>;
  readonly claimedDate?: Maybe<Datetime>;
  readonly comments?: Maybe<ReadonlyArray<MerchantGamingReviewTicketCommentSchema>>;
  readonly decisionAdminId?: Maybe<Scalars['ObjectIdType']>;
  readonly decisionDate?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly infractionIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly isClaimed: Scalars['Boolean'];
  readonly isClosed: Scalars['Boolean'];
  readonly isOpen: Scalars['Boolean'];
  readonly lastSourceUpsertDate: Datetime;
  readonly merchant?: Maybe<MerchantSchema>;
  readonly merchantGamingReviewPolicyTier?: Maybe<MerchantGamingReviewPolicyTierType>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly sources: ReadonlyArray<MerchantGamingReviewTicketSourceSchema>;
  readonly state: MerchantGamingReviewState;
};

export type MerchantGamingReviewTicketSort = {
  readonly field: MerchantGamingReviewFieldTicketType;
  readonly order: SortOrderType;
};

export type MerchantGamingReviewTicketSourceSchema = {
  readonly __typename?: 'MerchantGamingReviewTicketSourceSchema';
  readonly creator?: Maybe<UserSchema>;
  readonly reason?: Maybe<Scalars['String']>;
  readonly sourceType: MerchantGamingReviewSourceType;
  readonly triggerDate: Datetime;
};

export type MerchantGamingReviewUpdateInput = {
  readonly action: MerchantGamingReviewTicketAction;
  readonly id: Scalars['ObjectIdType'];
  readonly infractionIds?: InputMaybe<Scalars['String']>;
  readonly message?: InputMaybe<Scalars['String']>;
  readonly policyTier?: InputMaybe<MerchantGamingReviewPolicyTierType>;
};

export type MerchantIdentityMutations = {
  readonly __typename?: 'MerchantIdentityMutations';
  readonly bankAccountVerification: BankAccountVerificationReviewerMutations;
};

export type MerchantIdentityServiceSchema = {
  readonly __typename?: 'MerchantIdentityServiceSchema';
  readonly bankAccountVerifications?: Maybe<ReadonlyArray<BankAccountVerificationSchema>>;
  readonly bankAccountVerificationsCount?: Maybe<Scalars['Int']>;
};


export type MerchantIdentityServiceSchemaBankAccountVerificationsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<BankAccountVerificationStatus>;
};


export type MerchantIdentityServiceSchemaBankAccountVerificationsCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  state?: InputMaybe<BankAccountVerificationStatus>;
};

export type MerchantInviteInfo = {
  readonly __typename?: 'MerchantInviteInfo';
  readonly email?: Maybe<Scalars['String']>;
  readonly promotionPeriodInDays?: Maybe<Scalars['Int']>;
  readonly promotionRevShare?: Maybe<Scalars['Float']>;
  readonly useMarketingTransactionBonus?: Maybe<Scalars['Boolean']>;
  readonly valid: Scalars['Boolean'];
};

export type MerchantLeadNumberOfSkUs = {
  readonly end: Scalars['Int'];
  readonly start: Scalars['Int'];
};

export type MerchantLeadProductCategory =
  | 'ARTS_CRAFTS_AND_SEWING'
  | 'BABY_AND_TODDLER'
  | 'BOOKS'
  | 'CARS_AND_AUTOMOTIVE'
  | 'CLOTHING_SHOES_AND_ACCESSORIES'
  | 'COLLECTABLES_AND_MEMORABILIA'
  | 'ELECTRONICS_AND_TECHNOLOGY'
  | 'FOOD_AND_DRINK'
  | 'HEALTH_AND_BEAUTY'
  | 'HOME_GARDEN_AND_PETS'
  | 'HOUSEHOLD_SUPPLIES'
  | 'JEWELLERY_AND_WATCHES'
  | 'MOVIES_VIDEO_GAMES_AND_MUSIC'
  | 'MUSICAL_INSTRUMENTS_AND_DJ'
  | 'OTHER'
  | 'REFURBISHED_ELECTRONICS'
  | 'SPORTS_AND_OUTDOORS'
  | 'TOOLS_AND_DIY'
  | 'TOYS_AND_GAMES';

export type MerchantLeadSellingYearsRange = {
  readonly end: Scalars['Int'];
  readonly start: Scalars['Int'];
};

export type MerchantLeadSubmissionInput = {
  readonly annualRevenue: MerchantLeadYearlyRevenue;
  readonly brandRegistrationCountry?: InputMaybe<BrandRegistrationCountry>;
  readonly channelPartners?: InputMaybe<Scalars['String']>;
  readonly companyLegalName: Scalars['String'];
  readonly country: CountryCode;
  readonly emailAddress: Scalars['String'];
  readonly firstName: Scalars['String'];
  readonly howLongSelling: MerchantLeadSellingYearsRange;
  readonly lastName: Scalars['String'];
  readonly merchantPartnerName?: InputMaybe<Scalars['String']>;
  readonly merchantType?: InputMaybe<MerchantType>;
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly productCategory: MerchantLeadProductCategory;
  readonly registeredBefore?: InputMaybe<Scalars['Boolean']>;
  readonly skuQuantity: MerchantLeadNumberOfSkUs;
  readonly utmSource?: InputMaybe<Scalars['String']>;
  readonly websiteUrl: Scalars['String'];
};

export type MerchantLeadSubmissionMutation = {
  readonly __typename?: 'MerchantLeadSubmissionMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MerchantLeadYearlyRevenue = {
  readonly end: CurrencyInput;
  readonly start: CurrencyInput;
};

export type MerchantMobile = {
  readonly __typename?: 'MerchantMobile';
  readonly minimumAppVersion: Scalars['String'];
};


export type MerchantMobileMinimumAppVersionArgs = {
  currentVersion: Scalars['String'];
  platform: MobilePlatformType;
};

export type MerchantMutation = {
  readonly __typename?: 'MerchantMutation';
  readonly bankAccountVerification: BankAccountVerificationMerchantMutations;
  readonly changeDisplayName: ChangeDisplayNameMutation;
  readonly changePreferredUnits: ChangePreferredUnitsMutation;
  readonly euVatTax?: Maybe<EuvatTaxMutations>;
  readonly merchantSenderAddress: MerchantSenderAddressMutations;
  readonly merchantTaxIdentification: MerchantTaxIdentificationMutations;
  readonly merchantTermsAgreed?: Maybe<MerchantTermsAgreedMutations>;
  readonly mftOptOut?: Maybe<ChangeMftOptOutMutation>;
  readonly returnSettings: MerchantReturnSettingsMutations;
  readonly returnWarehouseSettings?: Maybe<MerchantReturnWarehouseMutations>;
  readonly sellerIdentityCnVerification: SellerIdentityCnVerificationMutations;
  readonly sellerIdentityVerification: SellerIdentityVerificationMutations;
  readonly shippingSetting: ShippingSettingMutations;
  readonly taxSettings: TaxSettingsMutations;
  readonly vacationSettings: VacationSettings;
  readonly warehouseSettings?: Maybe<MerchantWarehouseMutations>;
};


export type MerchantMutationChangeDisplayNameArgs = {
  input: ChangeDisplayNameInput;
};


export type MerchantMutationChangePreferredUnitsArgs = {
  input: ChangePreferredUnitsInput;
};


export type MerchantMutationMftOptOutArgs = {
  input: ChangeMftOptOutInput;
};

export type MerchantOnboardingStep =
  | 'ADD_PRODUCT'
  | 'BLUE_DOWNLOAD_APP_DEPRECATED'
  | 'BLUE_LIST_FIRST_PRODUCT_DEPRECATED'
  | 'BLUE_SET_PAYMENT_INFO_DEPRECATED'
  | 'BLUE_SET_STORE_HOURS_DEPRECATED'
  | 'BLUE_SET_STORE_PHOTO_DEPRECATED'
  | 'BUSINESS_INFO'
  | 'CONFIRM_EMAIL'
  | 'CONFIRM_PHONE'
  | 'CONFIRM_TOS'
  | 'CONTACT_INFO'
  | 'DEP_STORE_REGISTRATION_FEE'
  | 'ENABLE_2FA'
  | 'EXTRA_INFO'
  | 'LEARN_ABOUT_WE'
  | 'PAYMENT_INFO'
  | 'RESELLER_AGREEMENT'
  | 'SETUP_ACCOUNT'
  | 'SETUP_SHIPPING'
  | 'STORE_IDENTIFICATION'
  | 'STORE_IDENTIFICATION_DEPRECATED'
  | 'STORE_INFO';

export type MerchantOneoffPaymentMutations = {
  readonly __typename?: 'MerchantOneoffPaymentMutations';
  readonly createBulkOneoffAdminToolPayments?: Maybe<CreateBulkOneoffAdminToolPayments>;
};


export type MerchantOneoffPaymentMutationsCreateBulkOneoffAdminToolPaymentsArgs = {
  input: CreateBulkOneoffAdminToolPaymentsInput;
};

export type MerchantOneoffPaymentSchema = {
  readonly __typename?: 'MerchantOneoffPaymentSchema';
  readonly amount: CurrencyValue;
  readonly creationTime: Datetime;
  readonly disputeId?: Maybe<Scalars['ObjectIdType']>;
  readonly eligibleTime: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly localizedAmount?: Maybe<CurrencyValue>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly merchantPaymentTime?: Maybe<Datetime>;
  readonly orderId?: Maybe<Scalars['ObjectIdType']>;
  readonly paymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly status: OneoffPaymentStatus;
  readonly ticketId?: Maybe<Scalars['String']>;
  readonly type: OneoffPaymentType;
};


export type MerchantOneoffPaymentSchemaAmountArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type MerchantPaymentCollectorType =
  | 'BUSINESS'
  | 'INDIVIDUAL';

export type MerchantPaymentCycle =
  | 'NORMAL'
  | 'WEEKLY';

export type MerchantPaymentDetail = {
  readonly __typename?: 'MerchantPaymentDetail';
  readonly accountBalance?: Maybe<CurrencyValue>;
  readonly allowedProviders: ReadonlyArray<PaymentProvider>;
  readonly businessInfo?: Maybe<PaymentBusinessInfo>;
  readonly canEditPaymentInfo: Scalars['Boolean'];
  readonly chargeTransaction?: Maybe<ChargeTransactionInfo>;
  readonly connectedChargeProviders?: Maybe<ReadonlyArray<ChargePaymentProviderType>>;
  readonly currentProvider?: Maybe<PaymentProvider>;
  readonly fullyEnrolledInPaymentCycle: Scalars['Boolean'];
  readonly hasActiveLoan: Scalars['Boolean'];
  readonly hasPaymentInfoNotice: Scalars['Boolean'];
  readonly hasPayoutInProgress: Scalars['Boolean'];
  readonly infoCollectedForPaymentProvider?: Maybe<InfoCollectedForPaymentProvider>;
  readonly ledgerAccountBalances?: Maybe<ReadonlyArray<LedgerAccountBalance>>;
  readonly ledgerItemInfo?: Maybe<LedgerItemInfo>;
  readonly lineItemCount?: Maybe<Scalars['Int']>;
  readonly lineItemSearchTypes?: Maybe<ReadonlyArray<LineItemSearchType>>;
  readonly lineItemTypes?: Maybe<ReadonlyArray<MerchantPaymentLineItemType>>;
  readonly lineItems?: Maybe<ReadonlyArray<MerchantPaymentLineItem>>;
  readonly messages?: Maybe<ReadonlyArray<MerchantPaymentWarningMessage>>;
  readonly nextPayoutTime?: Maybe<Datetime>;
  readonly paymentCycle: MerchantPaymentCycle;
  readonly payoutHistory?: Maybe<ReadonlyArray<MerchantPayoutHistory>>;
  readonly payoutHistoryCount?: Maybe<Scalars['Int']>;
  readonly pendingChargeProviders?: Maybe<ReadonlyArray<ChargePaymentProviderType>>;
  readonly personalInfo?: Maybe<PaymentPersonalInfo>;
  readonly releasePayoutRequest?: Maybe<ReleasePayoutRequest>;
  readonly showLedgerUi: Scalars['Boolean'];
};


export type MerchantPaymentDetailAccountBalanceArgs = {
  balanceType: AccountBalanceType;
  currency: PaymentCurrencyCode;
};


export type MerchantPaymentDetailChargeTransactionArgs = {
  id: Scalars['ObjectIdType'];
};


export type MerchantPaymentDetailLedgerItemInfoArgs = {
  balanceType: LedgerAccountBalanceType;
  currency: PaymentCurrencyCode;
  cutoffId?: InputMaybe<Scalars['String']>;
  cutoffTime?: InputMaybe<DatetimeInput>;
  endDate?: InputMaybe<DatetimeInput>;
  includeTotalCount?: InputMaybe<Scalars['Boolean']>;
  limit: Scalars['Int'];
  startDate?: InputMaybe<DatetimeInput>;
};


export type MerchantPaymentDetailLineItemCountArgs = {
  balanceType: AccountBalanceType;
  currency: PaymentCurrencyCode;
  endDate?: InputMaybe<DatetimeInput>;
  lineItemTypes?: InputMaybe<ReadonlyArray<LineItemType>>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<LineItemSearchType>;
  startDate?: InputMaybe<DatetimeInput>;
};


export type MerchantPaymentDetailLineItemsArgs = {
  balanceType: AccountBalanceType;
  currency: PaymentCurrencyCode;
  endDate?: InputMaybe<DatetimeInput>;
  limit: Scalars['Int'];
  lineItemTypes?: InputMaybe<ReadonlyArray<LineItemType>>;
  offset: Scalars['Int'];
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<LineItemSearchType>;
  startDate?: InputMaybe<DatetimeInput>;
};


export type MerchantPaymentDetailPayoutHistoryArgs = {
  endDate?: InputMaybe<DatetimeInput>;
  limit: Scalars['Int'];
  offset: Scalars['Int'];
  provider?: InputMaybe<PayoutPaymentProviderType>;
  startDate?: InputMaybe<DatetimeInput>;
};


export type MerchantPaymentDetailPayoutHistoryCountArgs = {
  endDate?: InputMaybe<DatetimeInput>;
  provider?: InputMaybe<PayoutPaymentProviderType>;
  startDate?: InputMaybe<DatetimeInput>;
};

export type MerchantPaymentLineItem = {
  readonly __typename?: 'MerchantPaymentLineItem';
  readonly createdTime: Datetime;
  readonly creditAmount?: Maybe<CurrencyValue>;
  readonly debitAmount?: Maybe<CurrencyValue>;
  readonly description: Scalars['String'];
  readonly type: LineItemType;
};

export type MerchantPaymentLineItemType =
  | 'B2B_SALE_FEE'
  | 'CANCEL_WITHHOLD_PAYMENT'
  | 'CHINA_POST_SUBSIDY'
  | 'CHINA_POST_SUBSIDY_REVERSE'
  | 'CN_ORDER_NOT_SHIP_WITH_WISHPOST_FINE'
  | 'COLLECTIONS_BOOST_CAMPAIGN_FEE'
  | 'CONSOLIDATE_MP_FINE'
  | 'CONSOLIDATE_MP_PAYMENT'
  | 'COUNTERFEIT_REFUND'
  | 'COVID19_SUBSIDY'
  | 'COVID19_SUBSIDY_REVERSE'
  | 'DECEPTIVE_FULFILLMENT_FINE'
  | 'DISPUTE_APPROVED'
  | 'DOUBLE_DEDUCTION_BOOK_KEEPER'
  | 'EARLY_PAYMENT'
  | 'EARLY_PAYMENT_CANCELLATION'
  | 'EARLY_PAYMENT_DEDUCTION'
  | 'EARLY_PAYMENT_REIMBURSEMENT_FEE'
  | 'ESTIMATED_WISHPOST_SHIPPING'
  | 'ESTIMATED_WISHPOST_SHIPPING_REFUND'
  | 'EXTERNAL_BOOST_CPA_FEE'
  | 'EXTERNAL_BOOST_FEE'
  | 'FAKE_RATING_FINE'
  | 'FAKE_TRACKING_FINE'
  | 'FBW_FEE'
  | 'FBW_PAYMENT'
  | 'FINE_REVERSED'
  | 'INFRACTION_FINE'
  | 'INITIAL_WISHPOST_SHIPPING'
  | 'INITIAL_WISHPOST_SHIPPING_OFFSET'
  | 'INITIAL_WISHPOST_SHIPPING_REFUND'
  | 'INITIAL_WISHPOST_SHIPPING_REFUND_OFFSET'
  | 'LATE_CONFIRMED_FULFILLMENT_FINE'
  | 'LCL_FBW_FEE'
  | 'LEGAL_SETTLEMENT_FINE'
  | 'LEGAL_SETTLEMENT_PAID_PENALTY'
  | 'LEGAL_SETTLEMENT_RESERVED_PENALTY'
  | 'LOGISTIC_FEE'
  | 'MARKETING_REBATE'
  | 'MARKETING_REBATE_REVERSE'
  | 'MERCHANT_CANCELLATION_FINE'
  | 'MERCHANT_HARASSMENT'
  | 'MERCHANT_INCENTIVE'
  | 'MERCHANT_INCENTIVE_REVERSE'
  | 'MISLEADING_VARIATION_FINE'
  | 'NEW_REFUNDED'
  | 'ONEOFF'
  | 'ONEOFF_ADMIN_TOOL'
  | 'ONEOFF_FINE'
  | 'OTHER_DEDUCTION'
  | 'OVERPAY_PAYMENT_AMOUNT'
  | 'PAID_PLACEMENT_ENROLLMENT_FEE'
  | 'PAID_PLACEMENT_IMPRESSION_FEE'
  | 'PAYMENT'
  | 'POLICY_VIOLATION_FINE'
  | 'PRODUCT_BOOST_BALANCE_REFUND'
  | 'PRODUCT_LISTING_FEE'
  | 'PRODUCT_REBATE'
  | 'PRODUCT_UNTAGGED_MISLEADING'
  | 'PROMOTED_PRODUCT_DISABLE_FINE'
  | 'PROMOTION_FEE'
  | 'QUALITY_REFUND_FINE'
  | 'REFUNDED'
  | 'REGISTRATION_REFUND'
  | 'RETROACTIVE_REFUND_FOR_LOW_RATED_PRODUCT'
  | 'RETROACTIVE_REFUND_FOR_PROBLEM_PRODUCT'
  | 'RETURN_LABEL_FEE'
  | 'REV_SHARE_ADJUST_PAYMENT'
  | 'SE_CASH_BACK'
  | 'SE_CASH_BACK_REVERSE'
  | 'SHIPPED'
  | 'STORE_PAYMENT'
  | 'STORE_PAYMENT_CANCELLATION'
  | 'STORE_PAYMENT_DEDUCTION'
  | 'STRATEGIC_ORDER_REBATE'
  | 'STRATEGIC_ORDER_REBATE_REVERSE'
  | 'TRANSACTION_FEE_REBATE'
  | 'TRANSACTION_FEE_REBATE_REVERSE'
  | 'UNCONFIRMED_CARRIER_FINE'
  | 'UNDERPAY_PAYMENT_AMOUNT'
  | 'UNFULFILLED_ORDER_FINE'
  | 'WISHPOST_ADJUSTMENT_DEDUCTION'
  | 'WISHPOST_ADJUSTMENT_PAYMENT'
  | 'WISHPOST_FULFILLMENT_FEE'
  | 'WISHPOST_LOGISTICS_FEE'
  | 'WISH_EXPRESS_REBATE'
  | 'WISH_EXPRESS_REBATE_REVERSE'
  | 'WISH_PARCEL_SERVICE_ADJUST_FEE'
  | 'WISH_PARCEL_SERVICE_ADJUST_PAYMENT'
  | 'WISH_PARCEL_SERVICE_FEE'
  | 'WITHHELD_RELEASED'
  | 'WITHHOLD_FUND_FINE'
  | 'WITHHOLD_PAYMENT'
  | 'WITHHOLD_RELEASE';

export type MerchantPaymentLinkInfo = {
  readonly __typename?: 'MerchantPaymentLinkInfo';
  readonly text?: Maybe<Scalars['String']>;
  readonly url?: Maybe<Scalars['String']>;
};

export type MerchantPaymentStatus =
  | 'DEDUCTED_WITHOUT_REFUND'
  | 'PAID'
  | 'PAID_BT'
  | 'REFUNDED'
  | 'UNPAID';

export type MerchantPaymentWarningMessage = {
  readonly __typename?: 'MerchantPaymentWarningMessage';
  readonly link?: Maybe<MerchantPaymentLinkInfo>;
  readonly sentiment?: Maybe<SentimentType>;
  readonly text?: Maybe<Scalars['String']>;
  readonly title?: Maybe<Scalars['String']>;
};

export type MerchantPaymentsMutation = {
  readonly __typename?: 'MerchantPaymentsMutation';
  readonly cancelChargeTransaction?: Maybe<CancelChargeTransactionMutation>;
  readonly charge?: Maybe<ChargeMutation>;
  readonly createChargeTransaction?: Maybe<CreateChargeTransactionMutation>;
  readonly payableCleanup?: Maybe<PayableCleanupMutation>;
  readonly payableValidation?: Maybe<PayableValidationMutation>;
  readonly payoneerSignup?: Maybe<PayoneerSignupMutation>;
  readonly resetPayment?: Maybe<ResetReleasePaymentRequestMutation>;
  readonly updatePayoneerSetting?: Maybe<UpdatePayoneerSettingMutation>;
  readonly updatePaypalSetting?: Maybe<UpdatePayPalSettingMutation>;
};


export type MerchantPaymentsMutationCancelChargeTransactionArgs = {
  input: CancelChargeTransactionInput;
};


export type MerchantPaymentsMutationChargeArgs = {
  input: ChargeInput;
};


export type MerchantPaymentsMutationCreateChargeTransactionArgs = {
  input: CreateChargeTransactionInput;
};


export type MerchantPaymentsMutationPayableCleanupArgs = {
  input: PayableCleanupInput;
};


export type MerchantPaymentsMutationPayableValidationArgs = {
  input: PayableValidationInput;
};


export type MerchantPaymentsMutationResetPaymentArgs = {
  input: ResetReleasePaymentRequestInput;
};


export type MerchantPaymentsMutationUpdatePayoneerSettingArgs = {
  input: UpdatePayoneerSettingInput;
};


export type MerchantPaymentsMutationUpdatePaypalSettingArgs = {
  input: UpdatePayPalSettingInput;
};

export type MerchantPaymentsService = {
  readonly __typename?: 'MerchantPaymentsService';
  readonly currentMerchant?: Maybe<MerchantPaymentDetail>;
  readonly disbursementScheduleInfo?: Maybe<DisbursementScheduleInfo>;
  readonly ledgerOrderInfo?: Maybe<LedgerOrderInfo>;
  readonly ledgerPayableInfo?: Maybe<LedgerPayableInfo>;
  readonly paymentInfo?: Maybe<MerchantPaymentDetail>;
};


export type MerchantPaymentsServiceDisbursementScheduleInfoArgs = {
  paymentCycle: Scalars['Int'];
  year: Scalars['Int'];
};


export type MerchantPaymentsServiceLedgerOrderInfoArgs = {
  orderId: Scalars['String'];
};


export type MerchantPaymentsServiceLedgerPayableInfoArgs = {
  includeEvents?: InputMaybe<Scalars['Boolean']>;
  payableId: Scalars['String'];
  payableType: Scalars['String'];
};


export type MerchantPaymentsServicePaymentInfoArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type MerchantPayoutHistory = {
  readonly __typename?: 'MerchantPayoutHistory';
  readonly currency: PaymentCurrencyCode;
  readonly description?: Maybe<MerchantPayoutHistoryDescription>;
  readonly id: Scalars['String'];
  readonly merchantFacingState: MerchantFacingPayoutState;
  readonly payoutDate: Datetime;
  readonly payoutProvider: PaymentProvider;
  readonly rebateAmount?: Maybe<CurrencyValue>;
  readonly totalAmount: CurrencyValue;
};

export type MerchantPayoutHistoryDescription = {
  readonly __typename?: 'MerchantPayoutHistoryDescription';
  readonly text?: Maybe<Scalars['String']>;
  readonly title?: Maybe<Scalars['String']>;
};

export type MerchantPolicyAgreementSource =
  | 'CN_SIGNUP_VALIDATION_FLOW'
  | 'EEA_KYC_VALIDATION_FLOW'
  | 'SELLER_PROFILE_VALIDATION_FLOW';

export type MerchantPolicyTierFactorSettings = {
  readonly __typename?: 'MerchantPolicyTierFactorSettings';
  readonly exemptions: ReadonlyArray<Maybe<MerchantPriviledge>>;
  readonly factor: PolicyFactor;
};

export type MerchantPolicyTierSchema = {
  readonly __typename?: 'MerchantPolicyTierSchema';
  readonly policyFactorSettings: ReadonlyArray<Maybe<MerchantPolicyTierFactorSettings>>;
  readonly tier: MerchantTier;
};

export type MerchantPreorder = {
  readonly __typename?: 'MerchantPreorder';
  readonly isPreorderMerchant: Scalars['Boolean'];
  readonly productsAreSyncing: Scalars['Boolean'];
};

export type MerchantPriviledge =
  | 'WAIVE_BAN_MERCHANT'
  | 'WAIVE_CREATE_WARNING'
  | 'WAIVE_IMPRESSION_SUSPENSION'
  | 'WAIVE_ISSUE_FINE'
  | 'WAIVE_PAYMENT_WITHHOLD'
  | 'WAIVE_PRODUCT_TAKEDOWN';

export type MerchantProofDocSchema = {
  readonly __typename?: 'MerchantProofDocSchema';
  readonly docName: Scalars['String'];
  readonly docType: Scalars['String'];
  readonly expDate?: Maybe<Datetime>;
  readonly fileDataList?: Maybe<ReadonlyArray<FileDataSchema>>;
  readonly id: Scalars['ObjectIdType'];
  readonly idNumber?: Maybe<Scalars['String']>;
  readonly layoutTag?: Maybe<Scalars['String']>;
  readonly wishValidationCode?: Maybe<Scalars['String']>;
};

export type MerchantProvidedAttributeSchema = {
  readonly __typename?: 'MerchantProvidedAttributeSchema';
  readonly name: Scalars['String'];
  readonly value: ReadonlyArray<Scalars['String']>;
};

export type MerchantReturnSettingPolicyTypeOptionSchema = {
  readonly __typename?: 'MerchantReturnSettingPolicyTypeOptionSchema';
  readonly policyType: PolicyType;
  readonly policyTypeText: Scalars['String'];
};

export type MerchantReturnSettingsMutations = {
  readonly __typename?: 'MerchantReturnSettingsMutations';
  readonly upsertMerchantReturnSettings: UpsertMerchantReturnSettingsMutation;
};


export type MerchantReturnSettingsMutationsUpsertMerchantReturnSettingsArgs = {
  input: UpsertMerchantReturnSettingsMutationInput;
};

export type MerchantReturnSettingsSchema = {
  readonly __typename?: 'MerchantReturnSettingsSchema';
  readonly authType?: Maybe<AuthType>;
  readonly country: Country;
  readonly isActive: Scalars['Boolean'];
  readonly policyType: PolicyType;
  readonly policyTypeText: Scalars['String'];
  readonly returnWarehouses?: Maybe<MerchantReturnWarehouseSchema>;
  readonly useWishReturnWarehouse: Scalars['Boolean'];
};

export type MerchantReturnWarehouseMutations = {
  readonly __typename?: 'MerchantReturnWarehouseMutations';
  readonly upsertWarehouse?: Maybe<UpsertMerchantReturnWarehouseMutation>;
};


export type MerchantReturnWarehouseMutationsUpsertWarehouseArgs = {
  input: UpsertReturnWarehouseInput;
};

export type MerchantReturnWarehouseSchema = {
  readonly __typename?: 'MerchantReturnWarehouseSchema';
  readonly address?: Maybe<AddressSchema>;
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
};

export type MerchantSafetyMutations = {
  readonly __typename?: 'MerchantSafetyMutations';
  readonly reportOrder?: Maybe<ReportOrderMutation>;
};


export type MerchantSafetyMutationsReportOrderArgs = {
  input: ReportOrderInput;
};

export type MerchantSafetySchema = {
  readonly __typename?: 'MerchantSafetySchema';
  readonly reportOrderReasons: ReadonlyArray<OrderReportReasonSchema>;
};

export type MerchantSchema = {
  readonly __typename?: 'MerchantSchema';
  readonly accountManager?: Maybe<UserSchema>;
  readonly allowMfp: Scalars['Boolean'];
  readonly allowMfpEligibleProducts: Scalars['Boolean'];
  readonly bankAccountVerification?: Maybe<BankAccountVerificationSchema>;
  readonly branding: BrandingSchema;
  readonly businessAddress?: Maybe<AddressSchema>;
  readonly businessName?: Maybe<Scalars['String']>;
  readonly bypassProductRestrictions?: Maybe<ReadonlyArray<TaggingViolationSubcategory>>;
  readonly calculatedShippingAccountConfig?: Maybe<CalculatedShippingAccountConfigType>;
  readonly canAccessAdditionalItemShipping: Scalars['Boolean'];
  readonly canAccessCalculatedShippingAccountConfig?: Maybe<Scalars['Boolean']>;
  readonly canAccessEarlyPayment: Scalars['Boolean'];
  readonly canAccessFinalSale: Scalars['Boolean'];
  readonly canAccessFlatRateShippingOptInOptOut?: Maybe<Scalars['Boolean']>;
  readonly canAccessHome: Scalars['Boolean'];
  readonly canAccessPaidPlacement: Scalars['Boolean'];
  readonly canAccessRestrictedProduct: Scalars['Boolean'];
  readonly canManageShipping: Scalars['Boolean'];
  readonly canUseVacationMode: Scalars['Boolean'];
  readonly countryDetails?: Maybe<MerchantCountryDetailsSchema>;
  readonly countryOfDomicile?: Maybe<Country>;
  readonly daysToFulfill: Scalars['Int'];
  readonly disableReasonCategory?: Maybe<Scalars['String']>;
  readonly disableWarningId?: Maybe<Scalars['ObjectIdType']>;
  readonly displayName: Scalars['String'];
  readonly displayPictureUrl?: Maybe<Scalars['String']>;
  readonly eatCostWarningId?: Maybe<Scalars['ObjectIdType']>;
  readonly eligibleForExpeditedPaymentPolicy?: Maybe<Scalars['Boolean']>;
  readonly email: Scalars['String'];
  readonly euVatTax?: Maybe<EuvatTaxSchema>;
  readonly exp: ExpSchema;
  readonly fulfilledByWish: MerchantFbwSchema;
  readonly hasEuComplianceImpressionBlock: Scalars['Boolean'];
  readonly hasMfpWhitelistProducts: Scalars['Boolean'];
  readonly hasReducedRevShare: Scalars['Boolean'];
  readonly hasSetupPaymentInfo: Scalars['Boolean'];
  readonly id: Scalars['ObjectIdType'];
  readonly inEuComplianceScope: Scalars['Boolean'];
  readonly isBba?: Maybe<Scalars['Boolean']>;
  readonly isCnForFulfillment: Scalars['Boolean'];
  readonly isCnMerchant: Scalars['Boolean'];
  readonly isConsignmentMode?: Maybe<Scalars['Boolean']>;
  readonly isFactory: Scalars['Boolean'];
  readonly isFlatRateShippingOptedIn?: Maybe<Scalars['Boolean']>;
  readonly isIdentifiedUsTax?: Maybe<Scalars['Boolean']>;
  readonly isMerchantFulfillmentTimeOptOut?: Maybe<Scalars['Boolean']>;
  readonly isMerchantInCalculatedShippingBeta: Scalars['Boolean'];
  readonly isPayable: Scalars['Boolean'];
  readonly isStoreMerchant: Scalars['Boolean'];
  readonly isUnityEnabled: Scalars['Boolean'];
  readonly isWhiteGlove: Scalars['Boolean'];
  readonly isWishBlueSelfInventory: Scalars['Boolean'];
  readonly latestActionsRequired?: Maybe<MerchantActionsRequiredSchema>;
  readonly lead: UserSchema;
  readonly marketing: MarketingMerchantPropertySchema;
  readonly maxDeliveryDays: Scalars['Int'];
  readonly merchantPolicyTier?: Maybe<MerchantPolicyTierSchema>;
  readonly merchantTermsAgreed?: Maybe<MerchantTermsAgreedSchema>;
  readonly onVacationMode: Scalars['Boolean'];
  readonly originCountry?: Maybe<Country>;
  readonly preferredLengthUnit?: Maybe<LengthUnit>;
  readonly preferredWeightUnit?: Maybe<WeightUnit>;
  readonly preorder: MerchantPreorder;
  readonly primaryCurrency: PaymentCurrencyCode;
  readonly productListingPlan?: Maybe<ProductListingPlanHub>;
  readonly proofOfIdentity?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly restrictedProductDefaultCountry?: Maybe<Country>;
  readonly restrictedProductRegions?: Maybe<ReadonlyArray<RestrictedProductRegion>>;
  readonly returnSettingPolicyTypeOptions?: Maybe<ReadonlyArray<MerchantReturnSettingPolicyTypeOptionSchema>>;
  readonly returnSettings?: Maybe<ReadonlyArray<MerchantReturnSettingsSchema>>;
  readonly returnWarehouses?: Maybe<ReadonlyArray<MerchantReturnWarehouseSchema>>;
  readonly revShare: Scalars['Float'];
  readonly sellerVerification: SellerVerificationSchema;
  readonly senderAddresses: ReadonlyArray<MerchantSenderAddressSchema>;
  readonly shippingOrigins: ReadonlyArray<ShippingOriginSettings>;
  readonly shippingSettings?: Maybe<ReadonlyArray<ShippingSettingsSchema>>;
  readonly shopify?: Maybe<ShopifySchema>;
  readonly showFeedProcessing: Scalars['Boolean'];
  readonly showMfp: Scalars['Boolean'];
  readonly signupSource?: Maybe<SignupSource>;
  readonly signupTime: Datetime;
  readonly standardWarehouseId: Scalars['ObjectIdType'];
  readonly state: CommerceMerchantState;
  readonly storeStats: MerchantStats;
  readonly suspectedCountry?: Maybe<Country>;
  readonly tax?: Maybe<MerchantTaxSchema>;
  readonly taxIdentification?: Maybe<MerchantTaxIdentificationSchema>;
  readonly usdConversionRate: Scalars['Float'];
  readonly useShopifyShippingRate: Scalars['Boolean'];
  readonly users: ReadonlyArray<UserSchema>;
  readonly vacationSettings?: Maybe<VacationSettingsSchema>;
  readonly warehouses?: Maybe<ReadonlyArray<MerchantWarehouseSchema>>;
  readonly wishSellerStandard: MerchantWishSellerStandardDetails;
  readonly wps?: Maybe<MerchantWpsSchema>;
};


export type MerchantSchemaReturnSettingsArgs = {
  isActive?: InputMaybe<Scalars['Boolean']>;
};


export type MerchantSchemaReturnWarehousesArgs = {
  id?: InputMaybe<Scalars['String']>;
};


export type MerchantSchemaShippingSettingsArgs = {
  enabled?: InputMaybe<Scalars['Boolean']>;
};


export type MerchantSchemaUsersArgs = {
  includeLead?: InputMaybe<Scalars['Boolean']>;
};


export type MerchantSchemaWarehousesArgs = {
  id?: InputMaybe<Scalars['String']>;
};

export type MerchantSenderAddressMutations = {
  readonly __typename?: 'MerchantSenderAddressMutations';
  readonly deleteMerchantSenderAddress: DeleteMerchantSenderAddressMutation;
  readonly upsertMerchantSenderAddress: UpsertMerchantSenderAddressMutation;
};


export type MerchantSenderAddressMutationsDeleteMerchantSenderAddressArgs = {
  input: DeleteMerchantSenderAddressInput;
};


export type MerchantSenderAddressMutationsUpsertMerchantSenderAddressArgs = {
  input: UpsertMerchantSenderAddressInput;
};

export type MerchantSenderAddressSchema = {
  readonly __typename?: 'MerchantSenderAddressSchema';
  readonly address: AddressSchema;
  readonly id: Scalars['ObjectIdType'];
  readonly isDefault: Scalars['Boolean'];
  readonly warehouseName: Scalars['String'];
};

export type MerchantServiceSchema = {
  readonly __typename?: 'MerchantServiceSchema';
  readonly mainUser?: Maybe<UserSchema>;
  readonly merchant?: Maybe<MerchantSchema>;
  readonly merchants?: Maybe<ReadonlyArray<MerchantSchema>>;
  readonly vipoutlet?: Maybe<MerchantSchema>;
};


export type MerchantServiceSchemaMainUserArgs = {
  merchantId: Scalars['ObjectIdType'];
};


export type MerchantServiceSchemaMerchantArgs = {
  id?: InputMaybe<Scalars['ObjectIdType']>;
  userId?: InputMaybe<Scalars['ObjectIdType']>;
};


export type MerchantServiceSchemaMerchantsArgs = {
  bdRep?: InputMaybe<Scalars['ObjectIdType']>;
  id?: InputMaybe<Scalars['ObjectIdType']>;
  limit?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  sort?: InputMaybe<MerchantSort>;
  states?: InputMaybe<ReadonlyArray<CommerceMerchantState>>;
};

export type MerchantSignupInput = {
  readonly bdSignupCode?: InputMaybe<Scalars['String']>;
  readonly captchaCode?: InputMaybe<Scalars['String']>;
  readonly captchaToken?: InputMaybe<Scalars['String']>;
  readonly deviceId?: InputMaybe<Scalars['String']>;
  readonly deviceName?: InputMaybe<Scalars['String']>;
  readonly emailAddress: Scalars['String'];
  readonly existingStoreUrl?: InputMaybe<Scalars['String']>;
  readonly googleAdsGroupId?: InputMaybe<Scalars['String']>;
  readonly googleClickId?: InputMaybe<Scalars['String']>;
  readonly greenChannelCode?: InputMaybe<Scalars['String']>;
  readonly invite?: InputMaybe<Scalars['String']>;
  readonly landingSource?: InputMaybe<Scalars['String']>;
  readonly landingSourceSubpage?: InputMaybe<Scalars['String']>;
  readonly merchantInvitationCode?: InputMaybe<Scalars['String']>;
  readonly password: Scalars['String'];
  readonly paypalMerchantId?: InputMaybe<Scalars['String']>;
  readonly referralId?: InputMaybe<Scalars['String']>;
  readonly salesforceCmCat?: InputMaybe<Scalars['String']>;
  readonly salesforceLeadId?: InputMaybe<Scalars['String']>;
  readonly source?: InputMaybe<MerchantSignupSourceType>;
  readonly storeName: Scalars['String'];
  readonly utmCampaign?: InputMaybe<Scalars['String']>;
  readonly utmContent?: InputMaybe<Scalars['String']>;
  readonly utmSource?: InputMaybe<Scalars['String']>;
  readonly utmTerm?: InputMaybe<Scalars['String']>;
};

export type MerchantSignupMutation = {
  readonly __typename?: 'MerchantSignupMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly session?: Maybe<Scalars['String']>;
  readonly shouldRedirectCnMerchant?: Maybe<Scalars['Boolean']>;
  readonly userId?: Maybe<Scalars['ObjectIdType']>;
};

export type MerchantSignupSendPhoneVerificationInput = {
  readonly newPhoneNumber: Scalars['String'];
};

export type MerchantSignupSendPhoneVerificationMutation = {
  readonly __typename?: 'MerchantSignupSendPhoneVerificationMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MerchantSignupSourceType =
  | 'SIGNUP_EXPRESS'
  | 'SIGNUP_GREEN_CHANNEL'
  | 'SIGNUP_LEGACY'
  | 'SIGNUP_MERCHANT_PLUS'
  | 'SIGNUP_MOBILE'
  | 'SIGNUP_V3'
  | 'SIGNUP_V4'
  | 'SIGNUP_V5';

export type MerchantSort = {
  readonly field: MerchantSortFieldType;
  readonly order: SortOrderType;
};

export type MerchantSortFieldType =
  | 'MERCHANT_ID'
  | 'NAME';

export type MerchantStats = {
  readonly __typename?: 'MerchantStats';
  readonly cs?: Maybe<CsPerformanceStats>;
  readonly daily: ReadonlyArray<MerchantTotalStats>;
  readonly delivery?: Maybe<DeliveryPerformanceStats>;
  readonly lastThirtyDayGmv: CurrencyValue;
  readonly marketing: MarketingStats;
  readonly productRatings: ReadonlyArray<ProductRating>;
  readonly productRatingsCount: Scalars['Int'];
  readonly rating?: Maybe<RatingPerformanceStats>;
  readonly refunds?: Maybe<RefundPerformanceStats>;
  readonly storeRatings: ReadonlyArray<StoreRating>;
  readonly storeRatingsCount: Scalars['Int'];
  readonly topMerchantPerformer?: Maybe<SalesPerformanceStats>;
  readonly topProductPerformer?: Maybe<SalesPerformanceStats>;
  readonly totalGmv: CurrencyValue;
  readonly totalImpressions: Scalars['Int'];
  readonly totalSold: Scalars['Int'];
  readonly totalWishes: Scalars['Int'];
  readonly totals: MerchantTotalStats;
  readonly tracking?: Maybe<TrackingPerformanceStats>;
  readonly updateTime?: Maybe<Datetime>;
  readonly weekly: ReadonlyArray<MerchantWeeklyStats>;
};


export type MerchantStatsDailyArgs = {
  coreMetricsOnly?: InputMaybe<Scalars['Boolean']>;
  days?: InputMaybe<Scalars['Int']>;
  offsetDays?: InputMaybe<Scalars['Int']>;
};


export type MerchantStatsProductRatingsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  listingTab?: InputMaybe<ProductRatingListingTab>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type MerchantStatsStoreRatingsArgs = {
  filterByStars?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type MerchantStatsStoreRatingsCountArgs = {
  filterByStars?: InputMaybe<Scalars['Int']>;
};


export type MerchantStatsTotalsArgs = {
  coreMetricsOnly?: InputMaybe<Scalars['Boolean']>;
  days?: InputMaybe<Scalars['Int']>;
};


export type MerchantStatsWeeklyArgs = {
  weeks?: InputMaybe<Scalars['Int']>;
};

export type MerchantSupportConfigSchema = {
  readonly __typename?: 'MerchantSupportConfigSchema';
  readonly isEnBd: Scalars['Boolean'];
  readonly isNonEnBd: Scalars['Boolean'];
};

export type MerchantTaxIdentificationBusinessType =
  | 'C_CORP'
  | 'LCC'
  | 'PARTNERSHIP'
  | 'S_CORP'
  | 'TRUST_OR_ESTATE';

export type MerchantTaxIdentificationFormType =
  | 'W_8BEN'
  | 'W_8BEN_E'
  | 'W_9';

export type MerchantTaxIdentificationMutations = {
  readonly __typename?: 'MerchantTaxIdentificationMutations';
  readonly upsertMerchantTaxIdentification: UpsertMerchantTaxIdentificationMutation;
};


export type MerchantTaxIdentificationMutationsUpsertMerchantTaxIdentificationArgs = {
  input: UpsertMerchantTaxIdentificationInput;
};

export type MerchantTaxIdentificationPaymentReceiverEntity =
  | 'NON_US'
  | 'US';

export type MerchantTaxIdentificationRejectReson =
  | 'INVALID_TIN'
  | 'WRONG_DOC';

export type MerchantTaxIdentificationReviewAction =
  | 'APPROVE'
  | 'REJECT';

export type MerchantTaxIdentificationSchema = {
  readonly __typename?: 'MerchantTaxIdentificationSchema';
  readonly actionDate?: Maybe<Datetime>;
  readonly actionUsername?: Maybe<Scalars['String']>;
  readonly address: AddressSchema;
  readonly businessName?: Maybe<Scalars['String']>;
  readonly businessType?: Maybe<MerchantTaxIdentificationBusinessType>;
  readonly domicileExplanation?: Maybe<Scalars['String']>;
  readonly employeeIdNumber?: Maybe<Scalars['String']>;
  readonly firstName?: Maybe<Scalars['String']>;
  readonly foreignTaxId?: Maybe<Scalars['String']>;
  readonly formType: MerchantTaxIdentificationFormType;
  readonly id: Scalars['ObjectIdType'];
  readonly lastName?: Maybe<Scalars['String']>;
  readonly lastUpdated: Datetime;
  readonly paymentReceiverIdentity: MerchantTaxIdentificationPaymentReceiverEntity;
  readonly rejectedReason?: Maybe<MerchantTaxIdentificationRejectReson>;
  readonly selfIdentityClassification: MerchantTaxIdentificationSelfIdentityClassification;
  readonly signDate: Datetime;
  readonly status: MerchantTaxIdentificationStatus;
};

export type MerchantTaxIdentificationSearchType =
  | 'MERCHANT_ID';

export type MerchantTaxIdentificationSelfIdentityClassification =
  | 'BUSINESS'
  | 'INDIVIDUAL';

export type MerchantTaxIdentificationSortFieldType =
  | 'SUBMITTED_DATE';

export type MerchantTaxIdentificationStatus =
  | 'APPROVED'
  | 'NOT_SUBMIT'
  | 'PENDING'
  | 'REJECTED';

export type MerchantTaxSchema = {
  readonly __typename?: 'MerchantTaxSchema';
  readonly enrollableCountries: ReadonlyArray<Country>;
  readonly hasConfiguredTaxesBefore: Scalars['Boolean'];
  readonly settings?: Maybe<ReadonlyArray<TaxSetting>>;
};

export type MerchantTermsActionEnum =
  | 'AGREE'
  | 'DISAGREE'
  | 'VIEW';

export type MerchantTermsAgreedMutations = {
  readonly __typename?: 'MerchantTermsAgreedMutations';
  readonly acceptDeComplianceTermsOfService: AcceptDeComplianceTermsOfService;
  readonly acceptEuComplianceTermsOfService: AcceptEuComplianceTermsOfService;
  readonly acceptFrComplianceTermsOfService: AcceptFrComplianceTermsOfService;
  readonly acceptMerchantPolicy: AcceptMerchantPolicy;
  readonly acceptTermsOfService: AcceptTermsOfService;
  readonly actOnWpsTermsOfService: MerchantWpsTermsOfServiceMutation;
  readonly viewTermsOfService: ViewTermsOfService;
  readonly viewTermsOfServiceById: ViewTermsOfServiceById;
};


export type MerchantTermsAgreedMutationsAcceptMerchantPolicyArgs = {
  input: AcceptMerchantPolicyInput;
};


export type MerchantTermsAgreedMutationsAcceptTermsOfServiceArgs = {
  input: AcceptTermsOfServiceInput;
};


export type MerchantTermsAgreedMutationsActOnWpsTermsOfServiceArgs = {
  input: MerchantWpsTermsOfServiceInput;
};


export type MerchantTermsAgreedMutationsViewTermsOfServiceByIdArgs = {
  input: ViewTermsOfServiceByIdInput;
};

export type MerchantTermsAgreedSchema = {
  readonly __typename?: 'MerchantTermsAgreedSchema';
  readonly agreedToDeComplianceTos?: Maybe<Scalars['Boolean']>;
  readonly agreedToEuComplianceTos?: Maybe<Scalars['Boolean']>;
  readonly agreedToFrComplianceTos?: Maybe<Scalars['Boolean']>;
  readonly agreedToRealNameAuth?: Maybe<Scalars['Boolean']>;
  readonly agreedToTermsOfService: Scalars['Boolean'];
  readonly wpsTermsOfService?: Maybe<MerchantWpsTermsOfServiceSchema>;
};

export type MerchantTermsOfServiceAgreementSchema = {
  readonly __typename?: 'MerchantTermsOfServiceAgreementSchema';
  readonly state?: Maybe<MerchantTosAgreementStateType>;
};

export type MerchantTermsOfServiceSchema = {
  readonly __typename?: 'MerchantTermsOfServiceSchema';
  readonly latestVersion: Scalars['Int'];
};

export type MerchantTier =
  | 'CN_BD_REFERRED'
  | 'CN_BRAND_OWNER'
  | 'CN_DEFAULT'
  | 'CN_ERP_REFERRED'
  | 'CPG'
  | 'EU_BD_REFERRED'
  | 'EU_BRAND_OWNER'
  | 'EU_DEFAULT'
  | 'LATAM_BD_BRAND_OWNER'
  | 'LATAM_BD_REFERRED'
  | 'NON_CN_BD_REFERRED'
  | 'NON_CN_BRAND_OWNER'
  | 'NON_CN_DEFAULT'
  | 'NON_CN_ERP_REFERRED'
  | 'NOT_ENROLL'
  | 'PHANTOM'
  | 'PROBATION'
  | 'PROMOTED_WHITELIST_FINE_EXEMPTION'
  | 'SELF_INVENTORY'
  | 'SUSPICIOUS'
  | 'US_BD_REFERRED'
  | 'US_BRAND_OWNER'
  | 'US_CONTROL'
  | 'US_DEFAULT'
  | 'US_DELIVERR_REFERRED'
  | 'US_PAYPAL_REFERRED'
  | 'US_SHOPIFY_REFERRED'
  | 'WISH_STORE_TRUST';

export type MerchantToFactoryConversionMutation = {
  readonly __typename?: 'MerchantToFactoryConversionMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type MerchantTodoItemSentiment =
  | 'INFO'
  | 'NEGATIVE'
  | 'POSITIVE'
  | 'WARNING';

export type MerchantTodoItemType =
  | 'ACCEPT_TERMS_OF_SERVICE'
  | 'ADD_PAYMENT'
  | 'ADD_WAREHOUSE'
  | 'APPLY_RESTRICTED_PRODUCT_REQUEST'
  | 'BANK_ACCOUNT_VERIFICATION'
  | 'BIND_WECHAT'
  | 'BRL_CURRENCY_CODE_MIGRATION'
  | 'COMPLETE_EU_VAT_TAX_QUESTIONNAIRE'
  | 'CURRENCY_CODE_MIGRATION'
  | 'ENABLE_2FA'
  | 'ENROLL_PRODUCTS_IN_RETURNS'
  | 'EUR_CURRENCY_CODE_MIGRATION'
  | 'EU_PRODUCT_COMPLIANCE'
  | 'FRANCE_PRODUCT_COMPLIANCE'
  | 'GBP_CURRENCY_CODE_MIGRATION'
  | 'GERMANY_PRODUCT_COMPLIANCE'
  | 'JOIN_WISH_EXPRESS'
  | 'NON_CN_UPLOAD_NEW_PRODUCTS'
  | 'PRE_ORDER_UNFULFILLED_ORDER'
  | 'PRICE_DROP_NEW_OFFERS'
  | 'PRICE_DROP_UNCOMPETITIVE_CAMPAIGN'
  | 'PRICE_DROP_VIEW_ONGOING_CAMPAIGNS'
  | 'REAUTHENTICATION_ATO'
  | 'REAUTHENTICATION_KYC_PROFILE'
  | 'REAUTHENTICATION_REGINFO'
  | 'REAUTHENTICATION_SELLER_PROFILE'
  | 'REJECTED_VIDEOS'
  | 'RESELLER_AGREEMENT'
  | 'REVIEW_CURRENCY'
  | 'SETUP_TAX_INFO'
  | 'TAX_VERIFICATION_FAILED'
  | 'UK_VAT_OBLIGATION_NOTICE'
  | 'UPLOAD_NEW_PRODUCTS'
  | 'VALIDATE_TAX_IDENTITY'
  | 'VERIFY_PRODUCT_BRANDS'
  | 'WE_REAPPLICATION_ELIGIBLE';

export type MerchantTosAgreementStateType =
  | 'AGREED'
  | 'DISAGREED'
  | 'IMPLICIT_AGREED';

export type MerchantTotalStats = {
  readonly __typename?: 'MerchantTotalStats';
  readonly addToCarts: Scalars['Int'];
  readonly averageFulfillmentTime?: Maybe<Timedelta>;
  readonly averageRating30d?: Maybe<Scalars['Float']>;
  readonly averageShippingDelay?: Maybe<Timedelta>;
  readonly averageShippingTime?: Maybe<Timedelta>;
  readonly endDate: Datetime;
  readonly gmv: CurrencyValue;
  readonly impressions: Scalars['BigInt'];
  readonly orders: Scalars['Int'];
  readonly pageViews: Scalars['BigInt'];
  readonly refundRate30d?: Maybe<Scalars['Float']>;
  readonly startDate: Datetime;
};

export type MerchantType =
  | 'Brand'
  | 'Factory'
  | 'Others'
  | 'Trading_Company';

export type MerchantUserGateAllowAll = {
  readonly __typename?: 'MerchantUserGateAllowAll';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type MerchantUserGateAllowAllInput = {
  readonly name: Scalars['String'];
};

export type MerchantUserGateAllowMerchants = {
  readonly __typename?: 'MerchantUserGateAllowMerchants';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type MerchantUserGateAllowMerchantsInput = {
  readonly merchantIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly name: Scalars['String'];
};

export type MerchantUserGateAllowUsers = {
  readonly __typename?: 'MerchantUserGateAllowUsers';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type MerchantUserGateAllowUsersInput = {
  readonly name: Scalars['String'];
  readonly userIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type MerchantUserGateMutations = {
  readonly __typename?: 'MerchantUserGateMutations';
  readonly allowAll?: Maybe<MerchantUserGateAllowAll>;
  readonly allowMerchants?: Maybe<MerchantUserGateAllowMerchants>;
  readonly allowUsers?: Maybe<MerchantUserGateAllowUsers>;
};


export type MerchantUserGateMutationsAllowAllArgs = {
  input: MerchantUserGateAllowAllInput;
};


export type MerchantUserGateMutationsAllowMerchantsArgs = {
  input: MerchantUserGateAllowMerchantsInput;
};


export type MerchantUserGateMutationsAllowUsersArgs = {
  input: MerchantUserGateAllowUsersInput;
};

export type MerchantWpsSchema = {
  readonly __typename?: 'MerchantWPSSchema';
  readonly enabledDestinationCountries: ReadonlyArray<Country>;
  readonly enabledOriginCountries: ReadonlyArray<Country>;
};

export type MerchantWpsTermsOfServiceInput = {
  readonly merchantAction: MerchantTermsActionEnum;
  readonly tos: WpsTermsTypeEnum;
};

export type MerchantWpsTermsOfServiceMutation = {
  readonly __typename?: 'MerchantWPSTermsOfServiceMutation';
  readonly ok: Scalars['Boolean'];
};

export type MerchantWpsTermsOfServiceSchema = {
  readonly __typename?: 'MerchantWPSTermsOfServiceSchema';
  readonly agreedUpsTos: Scalars['Boolean'];
  readonly agreedWpsTos: Scalars['Boolean'];
  readonly viewedUpsTos: Scalars['Boolean'];
  readonly viewedWpsTos: Scalars['Boolean'];
};

export type MerchantWarehouseMutations = {
  readonly __typename?: 'MerchantWarehouseMutations';
  readonly deleteWarehouse?: Maybe<DeleteMerchantWarehouseMutation>;
  readonly submitWarehouseVerificationRequest?: Maybe<SubmitWarehouseVerificationRequestMutation>;
  readonly upsertWarehouse?: Maybe<UpsertMerchantWarehouseMutation>;
};


export type MerchantWarehouseMutationsDeleteWarehouseArgs = {
  input: DeleteMerchantWarehouseInput;
};


export type MerchantWarehouseMutationsSubmitWarehouseVerificationRequestArgs = {
  input: SubmitWarehouseVerificationRequestInput;
};


export type MerchantWarehouseMutationsUpsertWarehouseArgs = {
  input: UpsertWarehouseInput;
};

export type MerchantWarehouseSchema = {
  readonly __typename?: 'MerchantWarehouseSchema';
  readonly address?: Maybe<AddressSchema>;
  readonly carrierPickupTime?: Maybe<Scalars['String']>;
  readonly enabledCountries: ReadonlyArray<Country>;
  readonly id: Scalars['String'];
  readonly merchantHandlingTime?: Maybe<Scalars['Int']>;
  readonly pickupCarrier?: Maybe<PickupCarrier>;
  readonly unitId: Scalars['String'];
  readonly verificationRequest?: Maybe<WarehouseVerificationRequestSchema>;
  readonly verificationState?: Maybe<WarehouseVerificationState>;
  readonly weekStats?: Maybe<ReadonlyArray<MerchantWarehouseWeekStatsSchema>>;
  readonly weekStatsCount: Scalars['Int'];
  readonly workdayCalendar?: Maybe<WorkdayCalender>;
  readonly workdayOverrideCalendar?: Maybe<ReadonlyArray<WorkDayOverride>>;
};


export type MerchantWarehouseSchemaWeekStatsArgs = {
  endDate?: InputMaybe<DatetimeInput>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<MerchantWarehouseWeekStatsSort>;
  startDate?: InputMaybe<DatetimeInput>;
};


export type MerchantWarehouseSchemaWeekStatsCountArgs = {
  endDate?: InputMaybe<DatetimeInput>;
  startDate?: InputMaybe<DatetimeInput>;
};

export type MerchantWarehouseWeekStatsSchema = {
  readonly __typename?: 'MerchantWarehouseWeekStatsSchema';
  readonly endDate: Datetime;
  readonly expectedDeliveries: Scalars['Int'];
  readonly isLateDeliveryRateAtRisk?: Maybe<Scalars['Boolean']>;
  readonly isLateDeliveryRateHigh?: Maybe<Scalars['Boolean']>;
  readonly lateDeliveries: Scalars['Int'];
  readonly lateDeliveryRate?: Maybe<Scalars['Float']>;
  readonly maxExpectedGmv: CurrencyValue;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly startDate: Datetime;
};


export type MerchantWarehouseWeekStatsSchemaIsLateDeliveryRateAtRiskArgs = {
  orderPolicyType?: InputMaybe<OrderPolicyType>;
};


export type MerchantWarehouseWeekStatsSchemaIsLateDeliveryRateHighArgs = {
  orderPolicyType?: InputMaybe<OrderPolicyType>;
};


export type MerchantWarehouseWeekStatsSchemaLateDeliveryRateArgs = {
  orderPolicyType?: InputMaybe<OrderPolicyType>;
};

export type MerchantWarehouseWeekStatsSort = {
  readonly field: MerchantWarehouseWeekStatsSortFieldType;
  readonly order: SortOrderType;
};

export type MerchantWarehouseWeekStatsSortFieldType =
  | 'START_DATE';

export type MerchantWarningAction =
  | 'CANCEL'
  | 'CLAIM'
  | 'CLOSE'
  | 'CONFIRM'
  | 'LISTING_LEVEL_DISPUTE'
  | 'MERCHANT_LEVEL_DISPUTE'
  | 'REPLY'
  | 'REQUEST_PAYMENT_RELEASE'
  | 'UNCLAIM';

export type MerchantWarningAuditAction =
  | 'BATCH_CLAIM'
  | 'CLAIM'
  | 'CONFIRM'
  | 'REVERT';

export type MerchantWarningAuditRevertReason =
  | 'AGENT_ERROR'
  | 'INCORRECTED_DATA'
  | 'POLICY_UPDATE';

export type MerchantWarningAuditStatus =
  | 'CONFIRMED'
  | 'REQUIRE_AUDIT'
  | 'REVERTED';

export type MerchantWarningBulkProcessSchema = {
  readonly __typename?: 'MerchantWarningBulkProcessSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly requestedBy: Scalars['String'];
  readonly requestedWarningIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly results?: Maybe<ReadonlyArray<MerchantWarningProcessResultSchema>>;
  readonly submitted: Datetime;
  readonly type: BulkMerchantWarningAction;
};

export type MerchantWarningClaimStatus =
  | 'ALL'
  | 'CLAIMED'
  | 'CLAIMED_BY_ME'
  | 'NOT_CLAIMED';

export type MerchantWarningCorrespondenceStatus =
  | 'HOLD'
  | 'NEW'
  | 'OPEN';

export type MerchantWarningFixAction =
  | 'ADDRESS_UNDERLYING_INFRACTION'
  | 'DISPUTE'
  | 'EDIT_PRODUCT_LISTING'
  | 'MESSAGE'
  | 'PAY_WISHPOST_BALANCE'
  | 'PRODUCT_AUTHORIZATION'
  | 'PROVE_AUTHENTICITY'
  | 'REQUEST_PAYMENT_RELEASE'
  | 'UPDATE_MAX_DELIVERY_DAYS';

export type MerchantWarningImpactSchema = {
  readonly __typename?: 'MerchantWarningImpactSchema';
  readonly countries?: Maybe<ReadonlyArray<Country>>;
  readonly endDate?: Maybe<Datetime>;
  readonly startDate?: Maybe<Datetime>;
  readonly type: MerchantWarningImpactType;
};

export type MerchantWarningImpactType =
  | 'AUTO_REFUND'
  | 'EAT_COST_FOR_PRODUCT'
  | 'GEOBLOCK'
  | 'MERCHANT_BAN'
  | 'MERCHANT_IMPRESSION_BLOCK'
  | 'MERCHANT_PAYMENT_HOLD'
  | 'ORDER_PAYMENT_HOLD'
  | 'PRODUCT_IMPRESSION_BLOCK'
  | 'PRODUCT_PAYMENT_HOLD'
  | 'PRODUCT_TAKEDOWN'
  | 'VARIATION_TAKEDOWN';

export type MerchantWarningMutations = {
  readonly __typename?: 'MerchantWarningMutations';
  readonly updateAuditQueueWarning?: Maybe<UpdateAuditQueueWarning>;
  readonly upsertMerchantWarning?: Maybe<UpsertMerchantWarning>;
};


export type MerchantWarningMutationsUpdateAuditQueueWarningArgs = {
  input?: InputMaybe<UpdateAuditQueueWarningInput>;
};


export type MerchantWarningMutationsUpsertMerchantWarningArgs = {
  input?: InputMaybe<UpsertMerchantWarningInput>;
};

export type MerchantWarningProcessResultSchema = {
  readonly __typename?: 'MerchantWarningProcessResultSchema';
  readonly error?: Maybe<Scalars['String']>;
  readonly success: Scalars['Boolean'];
  readonly warningId: Scalars['ObjectIdType'];
};

export type MerchantWarningProofDisputeStatus =
  | 'DISPUTE_FAILED'
  | 'DISPUTE_SUCCESS'
  | 'DISPUTING'
  | 'NOT_DISPUTED';

export type MerchantWarningProofSchema = {
  readonly __typename?: 'MerchantWarningProofSchema';
  readonly brandAuthorization?: Maybe<BrandAuthorizationSchema>;
  readonly disputeStatus: MerchantWarningProofDisputeStatus;
  readonly id: Scalars['ObjectIdType'];
  readonly message?: Maybe<Scalars['String']>;
  readonly note?: Maybe<Scalars['String']>;
  readonly order?: Maybe<OrderSchema>;
  readonly product?: Maybe<ProductSchema>;
  readonly type: MerchantWarningProofType;
  readonly warningId?: Maybe<Scalars['ObjectIdType']>;
};

export type MerchantWarningProofType =
  | 'MERCHANT'
  | 'ORDER'
  | 'PRODUCT'
  | 'PRODUCT_RATING'
  | 'TICKET'
  | 'VARIATION';

export type MerchantWarningReason =
  | 'BAD_CUSTOMER_SERVICE'
  | 'BAN_EARLY_STAGE_MERCHANT'
  | 'BRANDED_PRODUCT_GEOBLOCK'
  | 'CN_PROHIBITED_PRODUCTS'
  | 'CONFIRMED_DELIVERY_POLICY'
  | 'COUNTERFEIT_GOODS'
  | 'CS_LATE_RESPONSE_RATE'
  | 'CS_LOW_CSAT_SCORE'
  | 'DECEPTIVE_FULFILLMENT'
  | 'DEP_BAIT_VARIABLE_PRICING'
  | 'DEP_FINE_DISABLE_PROMOTED_PRODUCT'
  | 'DEP_FINE_DISABLE_PROMOTED_PRODUCT_FOR_COUNTRY'
  | 'DISINGENUOUS_CUSTOMER_SERVICE'
  | 'DUPLICATE_ACCOUNTS'
  | 'DUPLICATE_PRODUCTS'
  | 'EMPTY_PACKAGES'
  | 'EXTREMELY_HIGH_PRICE_SPREAD'
  | 'FAKE_RATING'
  | 'FAKE_TRACKING'
  | 'FINAL_JUDGEMENT_ORDER'
  | 'FINE_FOR_COUNTERFEIT_GOODS'
  | 'FINE_PRODUCT_SWAPPED'
  | 'FINE_UPDATE_TO_COUNTERFEIT'
  | 'FINE_WISH_EXPRESS_POLICY_VIOLATION'
  | 'HIGH_AUTO_REFUND'
  | 'HIGH_CHARGEBACK_AND_FRAUD_REFUND_RATIO'
  | 'HIGH_CHARGEBACK_RATIO'
  | 'HIGH_GMV_FROM_GAMING_AUDIT'
  | 'HIGH_GMV_FROM_GAMING_BAN'
  | 'HIGH_GMV_FROM_GAMING_FREEZE'
  | 'HIGH_GMV_FROM_MISLEADING_PRODUCTS'
  | 'HIGH_IP_INFRINGEMENT'
  | 'HIGH_REFUND_RATIO'
  | 'INACTIVE_ACCOUNT'
  | 'INVALID_EU_RESPONSIBLE_PERSON'
  | 'INVALID_TRACKING_NUMBERS'
  | 'LATE_CONFIRMED_FULFILLMENT_VIOLATION'
  | 'LATE_FULFILLMENT_RATE'
  | 'LEGAL_TRO_TAKEDOWN'
  | 'MERCHANT_CANCELLATION_VIOLATION'
  | 'MERCHANT_CONTACT_INFO_INVALID'
  | 'MERCHANT_HARASSMENT'
  | 'MERCHANT_HIGH_CANCEL_ORDER_RATE'
  | 'MERCHANT_HIGH_QUALITY_REFUND_RATIO'
  | 'MERCHANT_HIGH_REFUND_EAT_COST'
  | 'MISLEADING_VARIATION'
  | 'ORDER_NOT_DELIVERED'
  | 'PENALTY_FOR_AUTO_REFUND'
  | 'POLICY_TIER_DEMOTION'
  | 'PRODUCT_GEOBLOCK'
  | 'PRODUCT_HIGH_CANCEL_ORDER_RATE'
  | 'PRODUCT_HIGH_QUALITY_REFUND_RATIO'
  | 'PRODUCT_HIGH_REFUND_RATIO'
  | 'PRODUCT_HIGH_REFUND_RATIO_NO_REMOVE'
  | 'PRODUCT_IS_INAPPROPRIATE'
  | 'PRODUCT_LOW_RATING'
  | 'PRODUCT_LOW_RATING_NO_REMOVE'
  | 'RELATED_ACCOUNT_IS_BANNED'
  | 'REPEAT_IP_INFRINGEMENT_ON_BRAND_OWNER'
  | 'REPEAT_PRODUCT_SWAPPING'
  | 'REQUEST_MONEY'
  | 'REQUEST_USER_EMAIL'
  | 'RESPOND_TO_ADMIN'
  | 'REUPLOADING_COUNTERFEITS'
  | 'STORE_VALIDATION_INCOMPLETE'
  | 'STRIKE_BASED_HIGH_RISK_PROHIBITED'
  | 'SUSPECTED_FRAUD'
  | 'TAKE_USER_OUTSIDE_WISH'
  | 'TAX_SETTING_NOT_UPDATED'
  | 'UNCONFIRMED_TRACKING_NUMBERS'
  | 'UNFULFILLED_ORDER'
  | 'US_TAX_INFO_UNVALIDATED'
  | 'VIOLATE_POLICY'
  | 'VIOLATE_TS_POLICY'
  | 'VIOLATION_OF_POLICY_TIER'
  | 'VIOLATION_OF_TERMS'
  | 'WAREHOUSE_FULFILLMENT_POLICY_VIOLATION'
  | 'WISHPOST_ID_NOT_COMPLETE_FACE_RECOGNITION'
  | 'WISHPOST_NEGATIVE_BALANCE'
  | 'WISH_EXPRESS_POLICY_MERCHANT'
  | 'WISH_EXPRESS_POLICY_PRODUCT'
  | 'WISH_EXPRESS_POLICY_VIOLATION'
  | 'WISH_STANDARDS_BAN';

export type MerchantWarningReasonSchema = {
  readonly __typename?: 'MerchantWarningReasonSchema';
  readonly reason: MerchantWarningReason;
  readonly text: Scalars['String'];
};

export type MerchantWarningReplySchema = {
  readonly __typename?: 'MerchantWarningReplySchema';
  readonly date?: Maybe<Datetime>;
  readonly displayName?: Maybe<Scalars['String']>;
  readonly files?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly idFiles?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly images?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly message?: Maybe<Scalars['String']>;
  readonly senderName?: Maybe<Scalars['String']>;
  readonly senderType?: Maybe<MerchantWarningReplySenderType>;
  readonly translatedMessage?: Maybe<Scalars['String']>;
  readonly type?: Maybe<MerchantWarningReplyType>;
};

export type MerchantWarningReplySenderType =
  | 'ADMIN'
  | 'ADMIN_BAN'
  | 'ADMIN_UNBAN'
  | 'ADMIN_UNBAN_PENDING'
  | 'MERCHANT';

export type MerchantWarningReplyType =
  | 'ADMIN_COMMENT'
  | 'APPROVE_PAYMENT_RELEASE'
  | 'AUTOBOT_REPLY'
  | 'BAN_EXPLANATION'
  | 'BD_APPROVE_PAYMENT_RELEASE'
  | 'CLOSE_EXPLANATION'
  | 'CLOSE_REPLY'
  | 'REGULAR_REPLY'
  | 'REJECT_PAYMENT_RELEASE'
  | 'REMOVE_WITHHOLD_FUNDS_EXPLANATION'
  | 'REOPEN_REPLY'
  | 'REQUEST_PAYMENT_RELEASE'
  | 'RESET_PAYMENT_RELEASE'
  | 'SEND_PB_INCENTIVE'
  | 'UNBAN_EXPLANATION'
  | 'WITHHOLD_FUNDS_EXPLANATION';

export type MerchantWarningSchema = {
  readonly __typename?: 'MerchantWarningSchema';
  readonly adminReasonText?: Maybe<Scalars['String']>;
  readonly auditStatus?: Maybe<MerchantWarningAuditStatus>;
  readonly banned?: Maybe<Scalars['Boolean']>;
  readonly bulkProcessing?: Maybe<Scalars['Boolean']>;
  readonly claimedBy?: Maybe<UserSchema>;
  readonly correspondenceStatus?: Maybe<MerchantWarningCorrespondenceStatus>;
  readonly counterfeitBrand?: Maybe<BrandSchema>;
  readonly counterfeitReasonText?: Maybe<Scalars['String']>;
  readonly createdTime: Datetime;
  readonly creatorName?: Maybe<Scalars['String']>;
  readonly disputeCutoffDay: Scalars['Int'];
  readonly effectiveDisputeDeadlineDate: Datetime;
  readonly fine?: Maybe<MerchantFineSchema>;
  readonly fineAmount?: Maybe<CurrencyValue>;
  readonly id: Scalars['ObjectIdType'];
  readonly impacts?: Maybe<ReadonlyArray<MerchantWarningImpactSchema>>;
  readonly lastUpdate: Datetime;
  readonly merchant?: Maybe<MerchantSchema>;
  readonly merchantActions?: Maybe<ReadonlyArray<MerchantWarningFixAction>>;
  readonly merchantReasonText?: Maybe<Scalars['String']>;
  readonly order?: Maybe<OrderSchema>;
  readonly outstandingMerchantActions?: Maybe<ReadonlyArray<MerchantWarningFixAction>>;
  readonly product?: Maybe<ProductSchema>;
  readonly productCount?: Maybe<Scalars['Int']>;
  readonly productEditRequestCount?: Maybe<Scalars['Int']>;
  readonly productGmvAtAudit?: Maybe<CurrencyValue>;
  readonly productTrueTagInfo?: Maybe<ProductTrueTagInfoSchema>;
  readonly products?: Maybe<ReadonlyArray<ProductSchema>>;
  readonly proofs: ReadonlyArray<MerchantWarningProofSchema>;
  readonly reason: MerchantWarningReasonSchema;
  readonly replies?: Maybe<ReadonlyArray<MerchantWarningReplySchema>>;
  readonly resolved: Scalars['Boolean'];
  readonly state: MerchantWarningState;
  readonly takedownRequest?: Maybe<TakedownRequestSchema>;
  readonly trackingDispute?: Maybe<TrackingDisputeSchema>;
  readonly urgencyScore?: Maybe<Scalars['Float']>;
  readonly wssImpact: WssImpactState;
};


export type MerchantWarningSchemaFineAmountArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type MerchantWarningSchemaProductsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type MerchantWarningSort = {
  readonly field: MerchantWarningSortFieldType;
  readonly order: SortOrderType;
};

export type MerchantWarningSortFieldType =
  | 'CREATED_TIME'
  | 'LAST_UPDATE'
  | 'PRODUCT_GMV_AT_AUDIT'
  | 'URGENCY_SCORE';

export type MerchantWarningState =
  | 'AWAITING_ADMIN'
  | 'AWAITING_ADMIN_BOT'
  | 'AWAITING_AUTH_TAGGING_HIGH_GMV'
  | 'AWAITING_AUTH_TAGGING_LOW_GMV'
  | 'AWAITING_MERCHANT'
  | 'CANCELLED'
  | 'CLOSED'
  | 'CN_BD_REVIEW_PAYMENT'
  | 'NEW'
  | 'REQUEST_PAYMENT'
  | 'REQUIRES_ADMIN_REVIEW'
  | 'US_BD_REVIEW_PAYMENT';

export type MerchantWeeklyStats = {
  readonly __typename?: 'MerchantWeeklyStats';
  readonly cs: CsPerformanceStats;
  readonly delivery: DeliveryPerformanceStats;
  readonly endDate: Datetime;
  readonly product: ProductPerformanceStats;
  readonly rating: RatingPerformanceStats;
  readonly refund: RefundPerformanceStats;
  readonly sales: SalesPerformanceStats;
  readonly startDate: Datetime;
  readonly tracking: TrackingPerformanceStats;
};

export type MerchantWishSellerStandardDetails = {
  readonly __typename?: 'MerchantWishSellerStandardDetails';
  readonly complianceUpdateStats?: Maybe<WishSellerStandardStats>;
  readonly deepDive?: Maybe<WssPerformanceDeepDiveHub>;
  readonly endDateForLastMonthlyUpdateCalcWindow?: Maybe<Datetime>;
  readonly fulfillmentInfractionWindowEndDate?: Maybe<Datetime>;
  readonly fulfillmentInfractionWindowStartDate?: Maybe<Datetime>;
  readonly isInactiveToBan?: Maybe<Scalars['Boolean']>;
  readonly lastTierUpdateDate?: Maybe<Datetime>;
  readonly lastUpdatedStats?: Maybe<Datetime>;
  readonly layer1Level?: Maybe<WssMerchantLevelType>;
  readonly level?: Maybe<WssMerchantLevelType>;
  readonly monthlyUpdateStats?: Maybe<WishSellerStandardStats>;
  readonly nextMonthlyTierUpdateDate?: Maybe<Datetime>;
  readonly policyInfractionWindowEndDate?: Maybe<Datetime>;
  readonly policyInfractionWindowStartDate?: Maybe<Datetime>;
  readonly prevLevel?: Maybe<WssMerchantLevelType>;
  readonly rawLevel?: Maybe<WssMerchantLevelType>;
  readonly recentStats?: Maybe<ReadonlyArray<WishSellerStandardStats>>;
  readonly stats?: Maybe<WishSellerStandardStats>;
  readonly thingsToWatchBoard?: Maybe<WssThingsToWatchBoard>;
};


export type MerchantWishSellerStandardDetailsRecentStatsArgs = {
  days?: InputMaybe<Scalars['Int']>;
};

export type MfpCampaignPriceDiscounted =
  | 'PRICE'
  | 'SHIPPING';

export type MisleadingViolationTaggingManagement = {
  readonly __typename?: 'MisleadingViolationTaggingManagement';
  readonly violationReasons: ReadonlyArray<TaggingViolationReason>;
};

export type MobilePlatformType =
  | 'ANDROID'
  | 'IOS';

export type ModifyTrackingError = {
  readonly __typename?: 'ModifyTrackingError';
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
};

export type ModifyTrackingOrderInput = {
  readonly orderId: Scalars['ObjectIdType'];
  readonly originCountryCode: CountryCode;
  readonly providerId: Scalars['Int'];
  readonly shipNote?: InputMaybe<Scalars['String']>;
  readonly trackingId: Scalars['String'];
};

export type ModifyTrackingOrders = {
  readonly __typename?: 'ModifyTrackingOrders';
  readonly errorMessages?: Maybe<ReadonlyArray<ModifyTrackingError>>;
  readonly modifyTrackingCount: Scalars['Int'];
};

export type ModifyWpsTrackingIdInput = {
  readonly additionalServiceOptions?: InputMaybe<ReadonlyArray<WpsAvailableServices>>;
  readonly orderId: Scalars['ObjectIdType'];
  readonly shippingOptionId: Scalars['String'];
};

export type ModifyWpsTrackingIdMutation = {
  readonly __typename?: 'ModifyWPSTrackingIDMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly providerId?: Maybe<Scalars['Int']>;
  readonly trackingId?: Maybe<Scalars['String']>;
  readonly wpsShipmentId?: Maybe<Scalars['String']>;
};

export type NavigationResultSchema = {
  readonly __typename?: 'NavigationResultSchema';
  readonly description?: Maybe<Scalars['String']>;
  readonly imageUrl?: Maybe<Scalars['String']>;
  readonly nuggets?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly title: Scalars['String'];
  readonly type: NavigationResultType;
  readonly url: Scalars['String'];
};

export type NavigationResultType =
  | 'MERCHANT'
  | 'ORDER'
  | 'PRODUCT'
  | 'WARNING';

export type NoticePriority =
  | 'DEFAULT'
  | 'HIGH';

export type NoticeProductSchema = {
  readonly __typename?: 'NoticeProductSchema';
  readonly product: ProductSchema;
  readonly status: NoticeProductStatus;
};

export type NoticeProductStatus =
  | 'ALREADY_REMOVED'
  | 'DISPUTED'
  | 'GEO_BLOCKED'
  | 'INAPPROPRIATE_REMOVED'
  | 'IP_REMOVED'
  | 'REPORTED';

export type NoticeQueryInput = {
  readonly claimedByEmail?: InputMaybe<Scalars['String']>;
  readonly endDate?: InputMaybe<DatetimeInput>;
  readonly noticeId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly notifierEmail?: InputMaybe<Scalars['String']>;
  readonly notifierOrganization?: InputMaybe<Scalars['String']>;
  readonly productId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly sort?: InputMaybe<ReadonlyArray<NoticeQuerySortInput>>;
  readonly startDate?: InputMaybe<DatetimeInput>;
  readonly statuses?: InputMaybe<ReadonlyArray<NoticeStatus>>;
};

export type NoticeQuerySortInput = {
  readonly field: NoticeSortField;
  readonly order: SortOrderType;
};

export type NoticeSchema = {
  readonly __typename?: 'NoticeSchema';
  readonly datetimeCreated: Datetime;
  readonly datetimeDisputeReviewed?: Maybe<Datetime>;
  readonly datetimeDisputed?: Maybe<Datetime>;
  readonly datetimeReviewed?: Maybe<Datetime>;
  readonly description: Scalars['String'];
  readonly disputeDescription?: Maybe<Scalars['String']>;
  readonly disputeEligibility: Scalars['Boolean'];
  readonly disputeReviewResponse?: Maybe<Scalars['String']>;
  readonly disputeReviewer?: Maybe<UserSchema>;
  readonly disputeSupportFiles?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastClaimedUser?: Maybe<UserSchema>;
  readonly notifier?: Maybe<NotifierSchema>;
  readonly notifierEmail: Scalars['String'];
  readonly notifierName: Scalars['String'];
  readonly priority: NoticePriority;
  readonly products: ReadonlyArray<NoticeProductSchema>;
  readonly reviewResponse?: Maybe<Scalars['String']>;
  readonly reviewer?: Maybe<UserSchema>;
  readonly status: NoticeStatus;
  readonly supportFiles: ReadonlyArray<MerchantFileSchema>;
};

export type NoticeSortField =
  | 'DATETIME_CREATED'
  | 'DATETIME_DISPUTED'
  | 'PRIORITY';

export type NoticeStatus =
  | 'DISPUTE_PENDING_REVIEW'
  | 'DISPUTE_UNDER_REVIEW'
  | 'PARTIALLY_REJECTED'
  | 'PENDING_REVIEW'
  | 'REJECTED'
  | 'RESOLVED'
  | 'UNDER_REVIEW';

export type NotificationsServiceSchema = {
  readonly __typename?: 'NotificationsServiceSchema';
  readonly notificationCount: Scalars['Int'];
};


export type NotificationsServiceSchemaNotificationCountArgs = {
  viewed?: InputMaybe<Scalars['Boolean']>;
};

export type NotifierQueryInput = {
  readonly countryCode?: InputMaybe<CountryCode>;
  readonly email?: InputMaybe<Scalars['String']>;
  readonly isTrustedFlagger?: InputMaybe<Scalars['Boolean']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly organization?: InputMaybe<Scalars['String']>;
  readonly type: NotifierType;
};

export type NotifierSchema = {
  readonly __typename?: 'NotifierSchema';
  readonly countries: ReadonlyArray<Country>;
  readonly email: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly isTrustedFlagger: Scalars['Boolean'];
  readonly name?: Maybe<Scalars['String']>;
  readonly organization: Scalars['String'];
  readonly type: NotifierType;
};

export type NotifierType =
  | 'EMAIL_ADDRESS'
  | 'EMAIL_DOMAIN';

export type NotifyPasswordRecoveryMutation = {
  readonly __typename?: 'NotifyPasswordRecoveryMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type NotifyPasswordRecoveryMutationInput = {
  readonly email: Scalars['String'];
};

export type OffsiteBoost = {
  readonly __typename?: 'OffsiteBoost';
  readonly chargingMethod: ExternalBoostChargingMethod;
  readonly dailyBudget: CurrencyValue;
  readonly enabled: Scalars['Boolean'];
  readonly maxDailyBudget: CurrencyValue;
  readonly minDailyBudget: CurrencyValue;
  readonly statsAvailableDate: Datetime;
};

export type OffsiteBoostDailyStats = {
  readonly __typename?: 'OffsiteBoostDailyStats';
  readonly attributed?: Maybe<ExternalBoostAttributedStats>;
  readonly clicks: Scalars['Int'];
  readonly date: Datetime;
  readonly gmv: CurrencyValue;
  readonly orders: Scalars['Int'];
  readonly spend: CurrencyValue;
};

export type OffsiteBoostPropertyInput = {
  readonly dailyBudget?: InputMaybe<CurrencyInput>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
};

export type OffsiteBoostStats = {
  readonly __typename?: 'OffsiteBoostStats';
  readonly daily: ReadonlyArray<OffsiteBoostDailyStats>;
  readonly endDate: Datetime;
  readonly startDate: Datetime;
};

export type OidcCredentialSchema = {
  readonly __typename?: 'OidcCredentialSchema';
  readonly authEmail: Scalars['String'];
  readonly authProvider: OidcProviderEnum;
  readonly id: Scalars['ObjectIdType'];
};

export type OidcProviderEnum =
  | 'GOOGLE'
  | 'WISH_AUTH'
  | 'WISH_OKTA';

export type OnboardingSchema = {
  readonly __typename?: 'OnboardingSchema';
  readonly completed: Scalars['Boolean'];
  readonly numSteps: Scalars['Int'];
  readonly numStepsCompleted: Scalars['Int'];
  readonly numStepsLeft: Scalars['Int'];
  readonly steps?: Maybe<ReadonlyArray<OnboardingStep>>;
};


export type OnboardingSchemaNumStepsArgs = {
  requiredForSubmission?: InputMaybe<Scalars['Boolean']>;
};


export type OnboardingSchemaNumStepsCompletedArgs = {
  requiredForSubmission?: InputMaybe<Scalars['Boolean']>;
};


export type OnboardingSchemaNumStepsLeftArgs = {
  requiredForSubmission?: InputMaybe<Scalars['Boolean']>;
};


export type OnboardingSchemaStepsArgs = {
  completed?: InputMaybe<Scalars['Boolean']>;
  requiredForSubmission?: InputMaybe<Scalars['Boolean']>;
};

export type OnboardingStep = {
  readonly __typename?: 'OnboardingStep';
  readonly completed: Scalars['Boolean'];
  readonly ctaLink?: Maybe<Scalars['String']>;
  readonly ctaText: Scalars['String'];
  readonly description: Scalars['String'];
  readonly illustration?: Maybe<Scalars['String']>;
  readonly name: MerchantOnboardingStep;
  readonly title: Scalars['String'];
};

export type OneoffPaymentStatus =
  | 'CANCELLED'
  | 'PAID'
  | 'UNPAID';

export type OneoffPaymentType =
  | 'CONSOLIDATE_MP_PAYMENT'
  | 'DISPUTE_APPROVED'
  | 'EARLY_PAYMENT'
  | 'EARLY_PAYMENT_REIMBURSEMENT_FEE'
  | 'FBW_PAYMENT'
  | 'FINE_REVERSED'
  | 'MERCHANT_INCENTIVE'
  | 'ONEOFF'
  | 'ONEOFF_ADMIN_TOOL'
  | 'PRODUCT_BOOST_BALANCE_REFUND'
  | 'PRODUCT_REBATE'
  | 'PRODUCT_UNTAGGED_MISLEADING'
  | 'REGISTRATION_REFUND'
  | 'REV_SHARE_ADJUSTMENT'
  | 'SE_CASH_BACK'
  | 'STORE_PAYMENT'
  | 'WISHPOST_ADJUSTMENT_PAYMENT'
  | 'WISH_PARCEL_SERVICE_ADJUSTMENT'
  | 'WITHHOLD_RELEASE';

export type OrderAdvancedLogisticsInfoSchema = {
  readonly __typename?: 'OrderAdvancedLogisticsInfoSchema';
  readonly canUncombine: Scalars['Boolean'];
};

export type OrderBadge =
  | 'ADVANCED_LOGISTICS'
  | 'APLUS_FAST_PAYMENT'
  | 'CHINA_POST_SUBSIDY'
  | 'COMBINED'
  | 'CONFIRMED_DELIVERY_REQUIRED'
  | 'COUNTRY_BADGE_BR'
  | 'COUNTRY_BADGE_CL'
  | 'COUNTRY_BADGE_GB'
  | 'COUNTRY_BADGE_KR'
  | 'COUNTRY_BADGE_NO'
  | 'EPC_FAST_PAYMENT'
  | 'EU_VAT'
  | 'FBW'
  | 'LESS_THAN_TRUCK_LOAD'
  | 'MERCHANT_STANDING_BENEFIT'
  | 'NON_COMPLIANT_WISH_EXPRESS'
  | 'OPTIONAL_ADVANCED_LOGISTICS'
  | 'PAY_CUSTOMER_VAT_REQUIRED_EU'
  | 'PAY_CUSTOMER_VAT_REQUIRED_LEGACY_DE'
  | 'PAY_CUSTOMER_VAT_REQUIRED_UK'
  | 'PREMIUM_SHIPPING_CARRIER_UPGRADE'
  | 'SE_CASHBACK'
  | 'STRATEGIC_COUNTRY_REBATE'
  | 'STRATEGIC_ORDER_REBATE'
  | 'TRACKING_CANCELLED'
  | 'TRACKING_CANCELLED_A_PLUS'
  | 'UNIFICATION_INITIATIVE'
  | 'WISH_EXPRESS'
  | 'WPS_ELIGIBLE';

export type OrderCsvColumnSchema = {
  readonly __typename?: 'OrderCSVColumnSchema';
  readonly description: Scalars['String'];
  readonly name: Scalars['String'];
};

export type OrderCarrierTier =
  | 'Tier1'
  | 'Tier2'
  | 'Tier3'
  | 'Tier4';

export type OrderConstants = {
  readonly __typename?: 'OrderConstants';
  readonly dadaPolicyDaysToConfirmedDelivered?: Maybe<Scalars['Int']>;
};

export type OrderEpcInfoSchema = {
  readonly __typename?: 'OrderEPCInfoSchema';
  readonly canUncombine: Scalars['Boolean'];
};

export type OrderEstimatedShippingTimelineSchema = {
  readonly __typename?: 'OrderEstimatedShippingTimelineSchema';
  readonly maxDeliveryTime?: Maybe<Datetime>;
  readonly maxShipTime: Datetime;
};

export type OrderFbwDetailsSchema = {
  readonly __typename?: 'OrderFBWDetailsSchema';
  readonly isFbw: Scalars['Boolean'];
  readonly warehouseId: Scalars['String'];
  readonly warehouseName: Scalars['String'];
};

export type OrderHistorySearchType =
  | 'DISPUTE_ID'
  | 'ORDER_ID'
  | 'PRODUCT_ID'
  | 'TRACKING_NUMBER'
  | 'TRANSACTION_ID'
  | 'USER_NAME';

export type OrderHistorySort = {
  readonly field: OrderHistorySortFieldType;
  readonly order: SortOrderType;
};

export type OrderHistorySortFieldType =
  | 'LAST_UPDATE'
  | 'ORDER_TIME';

export type OrderInfractionDisputeAction =
  | 'ADMIN_COMMENT'
  | 'APPROVE'
  | 'CANCEL'
  | 'CLAIM'
  | 'CLOSE'
  | 'CREATE'
  | 'HOLD'
  | 'REJECT'
  | 'REOPEN'
  | 'REPLY';

export type OrderInfractionDisputeMutations = {
  readonly __typename?: 'OrderInfractionDisputeMutations';
  readonly upsertOrderInfractionDispute?: Maybe<UpsertOrderInfractionDispute>;
};


export type OrderInfractionDisputeMutationsUpsertOrderInfractionDisputeArgs = {
  input?: InputMaybe<UpsertOrderInfractionDisputeInput>;
};

export type OrderInfractionDisputeSubreason =
  | 'ADDRESS_PO_BOX'
  | 'AMBIGUOUS_CUSTOMER_ADDRESS'
  | 'CANNOT_SHIP_TO_REGION'
  | 'CAN_PROVIDE_CORRECT_TRACKING_INFO'
  | 'INCORRECT_CONFIRMED_DELIVERY_DATE_FROM_CARRIER'
  | 'INCORRECT_CONFIRMED_FULFILLMENT_DATE'
  | 'INCORRECT_TRACKING_INFO'
  | 'NATIONAL_HOLIDAY'
  | 'NATURAL_DISASTER'
  | 'OPERATIONAL_OR_IT_ISSUE'
  | 'OTHER'
  | 'RESHIP_PACKAGE'
  | 'SHIPMENT_RETURNED'
  | 'SHIPMENT_STUCK_AT_CUSTOMS'
  | 'TECHNICAL_ISSUE'
  | 'UNVERIFIABLE_ADDRESS'
  | 'WISH_LOGISTICS_CANNOT_FULFILL';

export type OrderLimboState =
  | 'LIMBO_AND_CUSTOMER_REFUNDED'
  | 'LIMBO_AND_NOT_ROUTED'
  | 'LIMBO_AND_ROUTED'
  | 'NOT_LIMBO';

export type OrderLogicalPaymentState =
  | 'FBW_PAID'
  | 'HAS_BEEN_PAID'
  | 'PENDING_CONFIRMED_SHIP'
  | 'PENDING_WFP_WITHHOLD'
  | 'PENDING_WISHPOST_SHIPPING'
  | 'TO_BE_PAID'
  | 'UNDER_REVIEW'
  | 'WILL_NOT_BE_PAID'
  | 'WITHHELD';

export type OrderMfpCampaignSchema = {
  readonly __typename?: 'OrderMFPCampaignSchema';
  readonly campaign?: Maybe<MfpCampaignSchema>;
  readonly campaignId: Scalars['String'];
  readonly campaignName: Scalars['String'];
  readonly priceDiscountType: MfpCampaignPriceDiscounted;
};

export type OrderNoFulfillSchema = {
  readonly __typename?: 'OrderNOFulfillSchema';
  readonly isBoundOrder: Scalars['Boolean'];
};

export type OrderOnTimeDeliveryCriteria =
  | 'DADA'
  | 'WISH_EXPRESS';

export type OrderPolicyType =
  | 'WAREHOUSE_FULFILLMENT_POLICY'
  | 'WISH_EXPRESS';

export type OrderRebateCancelType =
  | 'CANCEL_AFTER_PAYMENT'
  | 'CANCEL_BEFORE_PAYMENT'
  | 'NO_CANCEL';

export type OrderRebateSchema = {
  readonly __typename?: 'OrderRebateSchema';
  readonly amount: CurrencyValue;
  readonly cancelState?: Maybe<OrderRebateCancelType>;
  readonly id: Scalars['ObjectIdType'];
  readonly localizedRebateAmount: CurrencyValue;
  readonly paymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly refundPaymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly type: OrderRebateType;
};


export type OrderRebateSchemaAmountArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type OrderRebateType =
  | 'CHINA_POST_SUBSITY'
  | 'COVID19_SUBSIDY'
  | 'MARKETING_REBATE'
  | 'STRATEGIC_ORDER_REBATE'
  | 'TRANSACTION_FEE_REBATE'
  | 'WISH_EXPRESS_REBATE';

export type OrderRefundBuyerFraudSubreasonSchema = {
  readonly __typename?: 'OrderRefundBuyerFraudSubreasonSchema';
  readonly reason: BuyerFraudReasonCategory;
  readonly text: Scalars['String'];
};

export type OrderRefundDeductedStatus =
  | 'DEDUCTED_AFTER_PAYMENT'
  | 'DEDUCTED_BEFORE_PAYMENT'
  | 'UNDEDUCTED';

export type OrderRefundItemDisputeSchema = {
  readonly __typename?: 'OrderRefundItemDisputeSchema';
  readonly isApproved: Scalars['Boolean'];
  readonly paymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly supportingPolicy: Scalars['String'];
};

export type OrderRefundItemSchema = {
  readonly __typename?: 'OrderRefundItemSchema';
  readonly canReportFraud: Scalars['Boolean'];
  readonly dispute?: Maybe<OrderRefundItemDisputeSchema>;
  readonly disputeId?: Maybe<Scalars['ObjectIdType']>;
  readonly eatCostWarning?: Maybe<MerchantWarningSchema>;
  readonly id: Scalars['ObjectIdType'];
  readonly isDisputable: Scalars['Boolean'];
  readonly localizedMerchantResponsibleAmount?: Maybe<CurrencyValue>;
  readonly merchantResponsibilityRatio: Scalars['Float'];
  readonly merchantResponsibleAmount?: Maybe<CurrencyValue>;
  readonly note?: Maybe<Scalars['String']>;
  readonly payment: OrderRefundPaymentSchema;
  readonly quantity: Scalars['Int'];
  readonly reasonInfo: OrderRefundReasonSchema;
  readonly refundTax?: Maybe<CurrencyValue>;
  readonly refundTime: Datetime;
  readonly source: RefundSource;
};


export type OrderRefundItemSchemaMerchantResponsibleAmountArgs = {
  includeWishpostFee?: InputMaybe<Scalars['Boolean']>;
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type OrderRefundItemSchemaRefundTaxArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type OrderRefundItemsSummarySchema = {
  readonly __typename?: 'OrderRefundItemsSummarySchema';
  readonly isPartialAmountRefunded: Scalars['Boolean'];
  readonly refundedPercentage?: Maybe<Scalars['Float']>;
  readonly refundedQuantity: Scalars['Int'];
};

export type OrderRefundPaymentSchema = {
  readonly __typename?: 'OrderRefundPaymentSchema';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly merchantAmount?: Maybe<CurrencyValue>;
  readonly status: OrderRefundDeductedStatus;
  readonly time?: Maybe<Datetime>;
};


export type OrderRefundPaymentSchemaMerchantAmountArgs = {
  includeWishpostFee?: InputMaybe<Scalars['Boolean']>;
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type OrderRefundReasonSchema = {
  readonly __typename?: 'OrderRefundReasonSchema';
  readonly reason: RefundReasonCategory;
  readonly text?: Maybe<Scalars['String']>;
};

export type OrderReportReasonSchema = {
  readonly __typename?: 'OrderReportReasonSchema';
  readonly reportOrderReason: ReportOrderReasons;
  readonly reportOrderReasonText: Scalars['String'];
};

export type OrderReturnLabelFeeSchema = {
  readonly __typename?: 'OrderReturnLabelFeeSchema';
  readonly amount: CurrencyValue;
  readonly id: Scalars['ObjectIdType'];
};


export type OrderReturnLabelFeeSchemaAmountArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type OrderReturnsSchema = {
  readonly __typename?: 'OrderReturnsSchema';
  readonly canOpenReturnDispute: Scalars['Boolean'];
};

export type OrderRevShareProductCategory =
  | 'APPAREL_ACCESSORY'
  | 'CLOTHING'
  | 'ELECTRONICS'
  | 'HOUSEHOLD'
  | 'JEWELRY_AND_ACCESSORY'
  | 'OTHER'
  | 'SEX_TOY'
  | 'SHOES'
  | 'WATCH';

export type OrderSalesTaxDetailsSchema = {
  readonly __typename?: 'OrderSalesTaxDetailsSchema';
  readonly authorityCountry?: Maybe<Country>;
  readonly itemCount: Scalars['Int'];
  readonly items: ReadonlyArray<OrderTaxItemSchema>;
  readonly netTax: CurrencyValue;
  readonly refundedTax: CurrencyValue;
  readonly remitTypes: ReadonlyArray<CommerceTransactionTaxRemitType>;
  readonly salesTax: CurrencyValue;
};


export type OrderSalesTaxDetailsSchemaItemsArgs = {
  remitType?: InputMaybe<CommerceTransactionTaxRemitType>;
};


export type OrderSalesTaxDetailsSchemaNetTaxArgs = {
  inMerchantCurrency?: InputMaybe<Scalars['Boolean']>;
  remitType?: InputMaybe<CommerceTransactionTaxRemitType>;
  targetCurrency?: InputMaybe<TaxTargetCurrency>;
};


export type OrderSalesTaxDetailsSchemaRefundedTaxArgs = {
  inMerchantCurrency?: InputMaybe<Scalars['Boolean']>;
  remitType?: InputMaybe<CommerceTransactionTaxRemitType>;
  targetCurrency?: InputMaybe<TaxTargetCurrency>;
};


export type OrderSalesTaxDetailsSchemaSalesTaxArgs = {
  eventTypes?: InputMaybe<ReadonlyArray<CommerceTransactionTaxEventType>>;
  inMerchantCurrency?: InputMaybe<Scalars['Boolean']>;
  remitType?: InputMaybe<CommerceTransactionTaxRemitType>;
  targetCurrency?: InputMaybe<TaxTargetCurrency>;
};

export type OrderSchema = {
  readonly __typename?: 'OrderSchema';
  readonly acceptableShippingOrigins: ReadonlyArray<Country>;
  readonly adjustedProductPrice?: Maybe<CurrencyValue>;
  readonly adjustedShippingPrice?: Maybe<CurrencyValue>;
  readonly advancedLogistics?: Maybe<OrderAdvancedLogisticsInfoSchema>;
  readonly availableShippingProviders: ReadonlyArray<ShippingProviderSchema>;
  readonly badges: ReadonlyArray<OrderBadge>;
  readonly canEditShippingAddress: Scalars['Boolean'];
  readonly canModifyTrackingInfo: Scalars['Boolean'];
  readonly canRefund: Scalars['Boolean'];
  readonly canRequestAddressVerification: Scalars['Boolean'];
  readonly canShowCarrierTier: Scalars['Boolean'];
  readonly canUploadDeliveryConfirmation: Scalars['Boolean'];
  readonly cartPrice?: Maybe<CartPriceDetailSchema>;
  readonly chargeback: Scalars['Boolean'];
  readonly client?: Maybe<CommerceTransactionClient>;
  readonly colorAtPurchaseTime?: Maybe<Scalars['String']>;
  readonly combinedOrderId?: Maybe<Scalars['ObjectIdType']>;
  readonly confirmedDelivered: Scalars['Boolean'];
  readonly counterfeitRefundWarningId?: Maybe<Scalars['ObjectIdType']>;
  readonly customer: CustomerSchema;
  readonly customerIdentifyInfo?: Maybe<CustomerIdentityInfo>;
  readonly customerPaidCurrency: Scalars['String'];
  readonly deliveryDeadline?: Maybe<Datetime>;
  readonly epc?: Maybe<OrderEpcInfoSchema>;
  readonly estimatedShippingTimeline?: Maybe<OrderEstimatedShippingTimelineSchema>;
  readonly estimatedWishpostShipping?: Maybe<CurrencyValue>;
  readonly expectedDeliveryDate?: Maybe<Datetime>;
  readonly expectedTtdBusinessDays?: Maybe<Scalars['Int']>;
  readonly fbwDetails?: Maybe<OrderFbwDetailsSchema>;
  readonly hasShipped: Scalars['Boolean'];
  readonly hoursLeftToFulfill?: Maybe<Scalars['Int']>;
  readonly id: Scalars['ObjectIdType'];
  readonly inRefundLimbo: Scalars['Boolean'];
  readonly infractions: ReadonlyArray<MerchantWarningSchema>;
  readonly initialWishpostShipping?: Maybe<CurrencyValue>;
  readonly isAdvancedLogistics: Scalars['Boolean'];
  readonly isBlueFusion: Scalars['Boolean'];
  readonly isCombinedOrder: Scalars['Boolean'];
  readonly isEligibleToShipWithWps: Scalars['Boolean'];
  readonly isExpeditedPolicy: Scalars['Boolean'];
  readonly isFbwFastPayment: Scalars['Boolean'];
  readonly isFreeShippingEligible: Scalars['Boolean'];
  readonly isInIncentiveProgram: Scalars['Boolean'];
  readonly isNewRefund: Scalars['Boolean'];
  readonly isPickupNow: Scalars['Boolean'];
  readonly isProcessing: Scalars['Boolean'];
  readonly isRemovedFromAdvancedLogistics: Scalars['Boolean'];
  readonly isRouted: Scalars['Boolean'];
  readonly isShippedWithQualifiedDadaCarrier: Scalars['Boolean'];
  readonly isStoreUploaded: Scalars['Boolean'];
  readonly isStreamline: Scalars['Boolean'];
  readonly isTopStandingMerchant: Scalars['Boolean'];
  readonly isUnityOrder: Scalars['Boolean'];
  readonly isWishExpress: Scalars['Boolean'];
  readonly isWishLocal: Scalars['Boolean'];
  readonly legacyRefundSource?: Maybe<LegacyRefundSource>;
  readonly limboState: OrderLimboState;
  readonly merchantCommissionFees?: Maybe<CurrencyValue>;
  readonly merchantCurrencyAtPurchaseTime: PaymentCurrencyCode;
  readonly merchantFundedPromotions?: Maybe<ReadonlyArray<OrderMfpCampaignSchema>>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly merchantPaymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly merchantPaymentStatus: MerchantPaymentStatus;
  readonly merchantPaymentTime?: Maybe<Datetime>;
  readonly merchantPrice: CurrencyValue;
  readonly merchantPriceAfterMfpDiscount: CurrencyValue;
  readonly merchantShipping: CurrencyValue;
  readonly merchantShippingAfterMfpDiscount: CurrencyValue;
  readonly merchantTotal: CurrencyValue;
  readonly merchantTotalAfterMfpDiscount: CurrencyValue;
  readonly norwayDetails?: Maybe<OrderNoFulfillSchema>;
  readonly oneoffPayment?: Maybe<MerchantOneoffPaymentSchema>;
  readonly orderTime?: Maybe<Datetime>;
  readonly originalRevShare?: Maybe<Scalars['Float']>;
  readonly packageOverviewDocumentUrl?: Maybe<Scalars['String']>;
  readonly paidAmount: CurrencyValue;
  readonly pastTracking?: Maybe<PastOrderTrackingInfoSchema>;
  readonly paymentStatus: OrderLogicalPaymentState;
  readonly penalties: ReadonlyArray<PenaltySchema>;
  readonly priceCost: CurrencyValue;
  readonly product?: Maybe<ProductSchema>;
  readonly productCategoryDispute?: Maybe<ProductCategoryDisputeSchema>;
  readonly productId: Scalars['ObjectIdType'];
  readonly productName: Scalars['String'];
  readonly quantity: Scalars['Int'];
  readonly reReleasedTime?: Maybe<Datetime>;
  readonly rebates?: Maybe<ReadonlyArray<OrderRebateSchema>>;
  readonly refundItems?: Maybe<ReadonlyArray<OrderRefundItemSchema>>;
  readonly refundItemsSummary?: Maybe<OrderRefundItemsSummarySchema>;
  readonly refundedTime?: Maybe<Datetime>;
  readonly releasedTime?: Maybe<Datetime>;
  readonly removedFromAplusTime?: Maybe<Datetime>;
  readonly requiresConfirmedDelivery: Scalars['Boolean'];
  readonly requiresDeliveredDutyPaid: Scalars['Boolean'];
  readonly returnDetailsId?: Maybe<Scalars['ObjectIdType']>;
  readonly returnLabelFee?: Maybe<OrderReturnLabelFeeSchema>;
  readonly returnRequest?: Maybe<ReturnRequestSchema>;
  readonly returns?: Maybe<OrderReturnsSchema>;
  readonly revShare: RevShareInfoSchema;
  readonly routedTo?: Maybe<OrderSchema>;
  readonly routingOriginalOrderId?: Maybe<Scalars['ObjectIdType']>;
  readonly shippedDate?: Maybe<Datetime>;
  readonly shippingCost: CurrencyValue;
  readonly shippingDetails?: Maybe<ShippingDetailsSchema>;
  readonly shippingEstimate?: Maybe<OrderShippingEstimate>;
  readonly shippingOrigin?: Maybe<Country>;
  readonly shippingOriginAddress?: Maybe<AddressSchema>;
  readonly shippingProviderId?: Maybe<Scalars['Int']>;
  readonly shopifyDetails?: Maybe<OrderShopifyDetailsSchema>;
  readonly shouldDisplayDeliveryStatus: Scalars['Boolean'];
  readonly showAplusShippingAddressTooltip: Scalars['Boolean'];
  readonly showMerchantCommissionFees?: Maybe<Scalars['Boolean']>;
  readonly sizeAtPurchaseTime?: Maybe<Scalars['String']>;
  readonly skuAtPurchaseTime: Scalars['String'];
  readonly specialPrograms: ReadonlyArray<SpecialOrderProgramSchema>;
  readonly state: CommerceTransactionState;
  readonly supportTicket?: Maybe<CustomerSupportTicket>;
  readonly tax?: Maybe<OrderTaxSchema>;
  readonly totalCost: CurrencyValue;
  readonly tracking?: Maybe<OrderTrackingInfoSchema>;
  readonly trackingCancelledDate?: Maybe<Datetime>;
  readonly trackingDispute?: Maybe<TrackingDisputeSchema>;
  readonly transactionId?: Maybe<Scalars['ObjectIdType']>;
  readonly ttd?: Maybe<Scalars['Int']>;
  readonly ttdBusinessDays?: Maybe<Scalars['Int']>;
  readonly ukDetails?: Maybe<OrderUkFulfillSchema>;
  readonly unityWishpostShipping?: Maybe<CurrencyValue>;
  readonly updatedRevShare?: Maybe<Scalars['Float']>;
  readonly userReceivedTime?: Maybe<Datetime>;
  readonly validRefundReasons: ReadonlyArray<OrderRefundReasonSchema>;
  readonly variation?: Maybe<VariationSchema>;
  readonly warehouse?: Maybe<MerchantWarehouseSchema>;
  readonly warehouseFulfillmentPolicyInfo?: Maybe<OrderWfpInfoSchema>;
  readonly warehouseId?: Maybe<Scalars['String']>;
  readonly warehouseShippingType?: Maybe<OrderWarehouseShippingType>;
  readonly wasDeliveredOnTime?: Maybe<Scalars['Boolean']>;
  readonly wishExpressExtensionDays: Scalars['Int'];
  readonly wishpostShippingUpdates: ReadonlyArray<WishPostShippingUpdatesSchema>;
  readonly withholdReasonText?: Maybe<Scalars['String']>;
  readonly withholdWarningId?: Maybe<Scalars['ObjectIdType']>;
  readonly wpsFulfillment?: Maybe<WpsFulfillmentInfoSchema>;
};


export type OrderSchemaAvailableShippingProvidersArgs = {
  originCountryCode: CountryCode;
};


export type OrderSchemaMerchantPriceArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type OrderSchemaMerchantShippingArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type OrderSchemaShippingCostArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};


export type OrderSchemaWasDeliveredOnTimeArgs = {
  criteria?: InputMaybe<OrderOnTimeDeliveryCriteria>;
};

export type OrderShippingEstimate = {
  readonly __typename?: 'OrderShippingEstimate';
  readonly maxTime?: Maybe<Timedelta>;
  readonly minTime?: Maybe<Timedelta>;
};

export type OrderShopifyDetailsSchema = {
  readonly __typename?: 'OrderShopifyDetailsSchema';
  readonly shopifyOrderId: Scalars['String'];
};

export type OrderTaxItemSchema = {
  readonly __typename?: 'OrderTaxItemSchema';
  readonly authority: TaxAuthoritySchema;
  readonly createdTime: Datetime;
  readonly eventType: CommerceTransactionTaxEventType;
  readonly exemptAmount?: Maybe<CurrencyValue>;
  readonly grossAmount: CurrencyValue;
  readonly id: Scalars['String'];
  readonly isRefund: Scalars['Boolean'];
  readonly isSale: Scalars['Boolean'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly quantity: Scalars['Int'];
  readonly refundItemId?: Maybe<Scalars['ObjectIdType']>;
  readonly remitType: CommerceTransactionTaxRemitType;
  readonly taxAmount: CurrencyValue;
  readonly taxRate: Scalars['Float'];
  readonly taxType: TaxType;
  readonly taxableAddress: AddressSchema;
  readonly taxableAmount: CurrencyValue;
  readonly transactionId: Scalars['ObjectIdType'];
  readonly variationId: Scalars['ObjectIdType'];
};

export type OrderTaxSchema = {
  readonly __typename?: 'OrderTaxSchema';
  readonly euVat?: Maybe<EuvatSchema>;
  readonly isVatOrder?: Maybe<Scalars['Boolean']>;
  readonly isWishReseller: Scalars['Boolean'];
  readonly norwayVatNumber?: Maybe<Scalars['String']>;
  readonly salesTax: OrderSalesTaxDetailsSchema;
};

export type OrderTrackingInfoSchema = {
  readonly __typename?: 'OrderTrackingInfoSchema';
  readonly carrierTier?: Maybe<OrderCarrierTier>;
  readonly checkpoints?: Maybe<ReadonlyArray<TrackingCheckpointSchema>>;
  readonly confirmedDeliveredTime?: Maybe<Datetime>;
  readonly confirmedFulfillmentDate?: Maybe<Datetime>;
  readonly deliveredDate?: Maybe<Datetime>;
  readonly disputeCarrierTier?: Maybe<OrderCarrierTier>;
  readonly disputeConfirmedTime?: Maybe<Datetime>;
  readonly disputeDeliveredTime?: Maybe<Datetime>;
  readonly isFakeTrackingOrder: Scalars['Boolean'];
  readonly isTrackingConfirmed: Scalars['Boolean'];
  readonly warehouseArrivalTime?: Maybe<Datetime>;
  readonly wishReceivedShippedTime?: Maybe<Datetime>;
};

export type OrderUkFulfillSchema = {
  readonly __typename?: 'OrderUKFulfillSchema';
  readonly isBoundOrder: Scalars['Boolean'];
};

export type OrderWfpInfoSchema = {
  readonly __typename?: 'OrderWFPInfoSchema';
  readonly deliveryState: WfpOrderDeliveryState;
  readonly wfpWithholdReason?: Maybe<WfpWithholdReasonSchema>;
  readonly wishExpress?: Maybe<WishExpressInfoSchema>;
};

export type OrderWarehouseShippingType =
  | 'FBW_V1'
  | 'FBW_V1_WLC'
  | 'FBW_V2'
  | 'FBW_V2_CALCULATED'
  | 'FBW_V2_EXPRESS'
  | 'FBW_V2_REGULAR'
  | 'MERCHANT_TTD_1_DAY'
  | 'MERCHANT_TTD_2_DAY'
  | 'MERCHANT_TTD_3_DAY'
  | 'MERCHANT_TTD_4_DAY'
  | 'MERCHANT_TTD_5_DAY'
  | 'MERCHANT_TTD_6_DAY'
  | 'MERCHANT_TTD_7_DAY'
  | 'MERCHANT_TTD_8_DAY'
  | 'MERCHANT_TTD_9_DAY'
  | 'MERCHANT_TTD_10_DAY'
  | 'MERCHANT_TTD_11_DAY'
  | 'MERCHANT_TTD_12_DAY'
  | 'MERCHANT_TTD_13_DAY'
  | 'MERCHANT_TTD_14_DAY'
  | 'MERCHANT_TTD_15_DAY'
  | 'MERCHANT_TTD_16_DAY'
  | 'MERCHANT_TTD_17_DAY'
  | 'MERCHANT_TTD_18_DAY'
  | 'MERCHANT_TTD_19_DAY'
  | 'MERCHANT_TTD_20_DAY'
  | 'MERCHANT_TTD_21_DAY'
  | 'MERCHANT_TTD_22_DAY'
  | 'MERCHANT_TTD_23_DAY'
  | 'MERCHANT_TTD_24_DAY'
  | 'MERCHANT_TTD_25_DAY'
  | 'MERCHANT_TTD_26_DAY'
  | 'MERCHANT_TTD_27_DAY'
  | 'MERCHANT_TTD_28_DAY'
  | 'MERCHANT_TTD_29_DAY'
  | 'MERCHANT_TTD_30_DAY'
  | 'MERCHANT_TTD_31_DAY'
  | 'MERCHANT_TTD_32_DAY'
  | 'MERCHANT_TTD_33_DAY'
  | 'MERCHANT_TTD_34_DAY'
  | 'MERCHANT_TTD_35_DAY'
  | 'MERCHANT_TTD_36_DAY'
  | 'MERCHANT_TTD_37_DAY'
  | 'MERCHANT_TTD_38_DAY'
  | 'MERCHANT_TTD_39_DAY'
  | 'MERCHANT_TTD_40_DAY'
  | 'MERCHANT_TTD_41_DAY'
  | 'MERCHANT_TTD_42_DAY'
  | 'MERCHANT_TTD_43_DAY'
  | 'MERCHANT_TTD_44_DAY'
  | 'MERCHANT_TTD_45_DAY'
  | 'REGULAR'
  | 'WAIT_AND_SAVE'
  | 'WISH_BLUE'
  | 'WISH_EXPRESS'
  | 'WISH_EXPRESS_2_DAY'
  | 'WISH_EXPRESS_7_DAY';

export type OrdersCsvDownload = {
  readonly __typename?: 'OrdersCsvDownload';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type OrdersCsvDownloadInput = {
  readonly endDate: DatetimeInput;
  readonly filter?: InputMaybe<CsvExportFilterType>;
  readonly offset?: InputMaybe<Scalars['Int']>;
  readonly query?: InputMaybe<Scalars['String']>;
  readonly searchType?: InputMaybe<OrderHistorySearchType>;
  readonly sort?: InputMaybe<OrderHistorySort>;
  readonly startDate: DatetimeInput;
  readonly wishExpressOnly?: InputMaybe<Scalars['Boolean']>;
};

export type OtherCountriesShippingSetting = {
  readonly enabled: Scalars['Boolean'];
  readonly price: CurrencyInput;
};

export type PackageDimensionsInput = {
  readonly height?: InputMaybe<LengthInput>;
  readonly length?: InputMaybe<LengthInput>;
  readonly weight: WeightInput;
  readonly width?: InputMaybe<LengthInput>;
};

export type PartialRefundType =
  | 'PARTIAL_AMOUNT'
  | 'PERCENTAGE'
  | 'PRODUCT_PRICE'
  | 'QUANTITY';

export type PasswordEvaluation = {
  readonly __typename?: 'PasswordEvaluation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly valid: Scalars['Boolean'];
};

export type PasswordMutations = {
  readonly __typename?: 'PasswordMutations';
  readonly change?: Maybe<ChangePasswordMutation>;
};


export type PasswordMutationsChangeArgs = {
  input: ChangePasswordInput;
};

export type PastOrderTrackingInfoSchema = {
  readonly __typename?: 'PastOrderTrackingInfoSchema';
  readonly lastUpdatedDate?: Maybe<Datetime>;
  readonly provider?: Maybe<ShippingProviderSchema>;
  readonly tracking?: Maybe<OrderTrackingInfoSchema>;
  readonly trackingId?: Maybe<Scalars['String']>;
};

export type PayableCleanupInput = {
  readonly localCleanUp: Scalars['Boolean'];
  readonly payableIds: ReadonlyArray<Scalars['String']>;
  readonly payableTypes: ReadonlyArray<Scalars['String']>;
  readonly validationId?: InputMaybe<Scalars['String']>;
};

export type PayableCleanupMutation = {
  readonly __typename?: 'PayableCleanupMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type PayableInfoSchema = {
  readonly __typename?: 'PayableInfoSchema';
  readonly finePayables?: Maybe<ReadonlyArray<MerchantFineSchema>>;
  readonly oneoffPayables?: Maybe<ReadonlyArray<MerchantOneoffPaymentSchema>>;
  readonly orderPayables?: Maybe<ReadonlyArray<OrderSchema>>;
  readonly validationResult?: Maybe<ReadonlyArray<ValidationResultSchema>>;
};


export type PayableInfoSchemaFinePayablesArgs = {
  payableIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
};


export type PayableInfoSchemaOneoffPayablesArgs = {
  payableIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
};


export type PayableInfoSchemaOrderPayablesArgs = {
  payableIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
};


export type PayableInfoSchemaValidationResultArgs = {
  validationId?: InputMaybe<Scalars['String']>;
};

export type PayableValidationInput = {
  readonly payableIds: ReadonlyArray<Scalars['String']>;
  readonly payableTypes: ReadonlyArray<Scalars['String']>;
};

export type PayableValidationMutation = {
  readonly __typename?: 'PayableValidationMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly validationId?: Maybe<Scalars['String']>;
};

export type PaymentBusinessInfo = {
  readonly __typename?: 'PaymentBusinessInfo';
  readonly businessId: Scalars['String'];
  readonly name: Scalars['String'];
};

export type PaymentCurrencyCode =
  | 'AUD'
  | 'BRL'
  | 'CAD'
  | 'CHF'
  | 'CNY'
  | 'CZK'
  | 'DKK'
  | 'EUR'
  | 'GBP'
  | 'JPY'
  | 'MXN'
  | 'SEK'
  | 'TRY'
  | 'UAH'
  | 'USD';

export type PaymentPersonalInfo = {
  readonly __typename?: 'PaymentPersonalInfo';
  readonly id?: Maybe<Scalars['String']>;
  readonly name: Scalars['String'];
  readonly phoneNumber: Scalars['String'];
};

export type PaymentProvider = {
  readonly __typename?: 'PaymentProvider';
  readonly contactInfo?: Maybe<PaymentProviderContactInfo>;
  readonly logo: Scalars['String'];
  readonly name: Scalars['String'];
  readonly type: PayoutPaymentProviderType;
};

export type PaymentProviderContactInfo = {
  readonly __typename?: 'PaymentProviderContactInfo';
  readonly email: Scalars['String'];
  readonly phone?: Maybe<Scalars['String']>;
  readonly qqUserId?: Maybe<Scalars['String']>;
  readonly website?: Maybe<Scalars['String']>;
  readonly wechatUsername?: Maybe<Scalars['String']>;
};

export type PaymentType =
  | 'CREDIT'
  | 'DEBIT';

export type PayoneerSignupMutation = {
  readonly __typename?: 'PayoneerSignupMutation';
  readonly alreadyRegistered?: Maybe<Scalars['Boolean']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly redirectUrl?: Maybe<Scalars['String']>;
};

export type PayoutPaymentProviderType =
  | 'ALLPAY'
  | 'BILL'
  | 'CARDINFOLINK'
  | 'LIANLIAN'
  | 'PAYECO2'
  | 'PAYONEER'
  | 'PAYPAL'
  | 'PAYPAL_EEA'
  | 'PAYPAL_MERCH'
  | 'PINGPONG'
  | 'UMPAY'
  | 'UMPAY2'
  | 'UMPAY_ENTERPRISE'
  | 'WISHPAY';

export type PenaltySchema = {
  readonly __typename?: 'PenaltySchema';
  readonly reason: FineReason;
};

export type PermissionSchema = {
  readonly __typename?: 'PermissionSchema';
  readonly description?: Maybe<Scalars['String']>;
  readonly id: PermissionType;
  readonly name: Scalars['String'];
};

export type PermissionStatusType =
  | 'ASSIGNABLE'
  | 'ASSIGNED'
  | 'DEFAULT';

export type PermissionType =
  | 'ACCEPT_MERCHANT_TERMS'
  | 'ACCESS_EXTERNAL_APIS'
  | 'ACCESS_PSP_SIGN_UP'
  | 'ADD_PRODUCTS'
  | 'ADD_SIZE_COLOR'
  | 'API_ACCESS'
  | 'AUDIT_ALL_CS_TEAMS'
  | 'AUDIT_ALL_TEAM'
  | 'AUDIT_CS_TICKETS'
  | 'AUDIT_TAGGING_BY_TAGGERS'
  | 'AUDIT_TICKET_REPLIES'
  | 'AUTHORIZED_MERCHANT'
  | 'BOOST'
  | 'BOXC_LOGISTIC'
  | 'BRAND_REVIEW_TAG'
  | 'CAN_ACCESS_AUTH_BRAND_AUDIT'
  | 'CAN_ACCESS_BLANKET_AUTHORIZATION'
  | 'CAN_ACCESS_BULK_ORDER_INFRACTION_TOOL'
  | 'CAN_ACCESS_CONFIRM_DELIVERED_CARRIER'
  | 'CAN_ACCESS_GATEKEEPER_PAYMENT_HOLD_ONEOFF'
  | 'CAN_ACCESS_INAPPROPRIATE_DEDUP_LIB_TOOL'
  | 'CAN_ACCESS_IPV_DEDUP_LIB_TOOL'
  | 'CAN_ACCESS_IPV_DETECTION_EXTERNAL_V3_API'
  | 'CAN_ACCESS_MANUAL_REVIEW_ONLY_TOOL'
  | 'CAN_ACCESS_MERCHANT_RISK_REVIEW_OUTCOME_ONEOFF'
  | 'CAN_ACCESS_ONEOFF_API_GET_APPROVERS'
  | 'CAN_ACCESS_ONEOFF_API_GET_FIELDS_INFO'
  | 'CAN_ACCESS_ONEOFF_API_LIST'
  | 'CAN_ACCESS_ONEOFF_API_REMOVE'
  | 'CAN_ACCESS_ONEOFF_API_REVIEW'
  | 'CAN_ACCESS_ONEOFF_API_SAVE'
  | 'CAN_ACCESS_ONEOFF_INJUNCTION_REQUEST'
  | 'CAN_ACCESS_ONEOFF_PAGE_LIST'
  | 'CAN_ACCESS_ONEOFF_PAGE_REVIEW'
  | 'CAN_ACCESS_ONEOFF_PAGE_SUBMIT'
  | 'CAN_ACCESS_ONEOFF_REQ_TOOL'
  | 'CAN_ACCESS_ONEOFF_VIEW_ALL_REQUESTS'
  | 'CAN_ACCESS_ORDERS_MANAGER'
  | 'CAN_ACCESS_REFRESHING_TRACKING'
  | 'CAN_ACCESS_SHIPPING_PROVIDER'
  | 'CAN_ACCESS_TRACKING_NUMBER_PAGE'
  | 'CAN_ACCESS_UPDATE_CONFIRMED'
  | 'CAN_ACCESS_UPDATE_TRACKING'
  | 'CAN_ACCESS_V2_HOMEPAGE'
  | 'CAN_ACCESS_WISHPOST_EXTERNAL_V3_API'
  | 'CAN_ACT_ON_ASIAN_MERCHANT'
  | 'CAN_ACT_ON_BR_MERCHANT'
  | 'CAN_ACT_ON_CN_MERCHANT'
  | 'CAN_ACT_ON_EU_MERCHANT'
  | 'CAN_ACT_ON_KR_MERCHANT'
  | 'CAN_ACT_ON_MX_MERCHANT'
  | 'CAN_ACT_ON_US_MERCHANT'
  | 'CAN_ADMIN_CANNED_RESPONSES'
  | 'CAN_ALLOW_REPURCHASE'
  | 'CAN_APPROVE_ANY_MERCHANT'
  | 'CAN_APPROVE_PRODUCT_BOOST_MERCHANTS'
  | 'CAN_AUDIT_REVIEW_RESULT'
  | 'CAN_BE_ASSIGNED_MANAGER'
  | 'CAN_BE_ASSIGNED_MERCHANT_COUNTRY'
  | 'CAN_BE_VIEWED_BY_OUTSOURCE_MERCHANT'
  | 'CAN_BLOCK_USER_ON_USER_REVIEW'
  | 'CAN_CHECK_EXTERNAL_TRACKING'
  | 'CAN_CHECK_INTERNAL_TRACKING'
  | 'CAN_CONVERT_ALL_USERS'
  | 'CAN_CREATE_BLUE_ADMIN'
  | 'CAN_CREATE_BULK_ONEOFF_PAYMENTS'
  | 'CAN_CREATE_ONEOFF_PAYMENT'
  | 'CAN_CREATE_USERS'
  | 'CAN_CREATE_WECHAT_OFFICIAL_ACCOUNT_MENU'
  | 'CAN_DOWNLOAD_ENTIRE_ORDER_HISTORY'
  | 'CAN_EDIT_CANNED_RESPONSES'
  | 'CAN_EDIT_EXTERNAL_FRAUD_TEAM_ACCESS'
  | 'CAN_EDIT_SHIP_TO_STORE_PACKAGE'
  | 'CAN_EDIT_TAGGING_TESTS'
  | 'CAN_GET_COLLECTIONBOOST'
  | 'CAN_GET_EARLY_PAYMENT_AMOUNT_AVAILABLE'
  | 'CAN_GROUP_MERCHANTS'
  | 'CAN_HANDLE_FRAUD_INFRACTION'
  | 'CAN_HANDLE_LIVE_CHAT'
  | 'CAN_HANDLE_ORDER_CHANGE_REQUEST'
  | 'CAN_HANDLE_VIOLATION_REPORT'
  | 'CAN_INVITE_CN_MERCHANTS'
  | 'CAN_ISSUE_PB_CREDITS'
  | 'CAN_LOGIN_AS_ADMIN'
  | 'CAN_LOGIN_AS_BD'
  | 'CAN_LOGIN_AS_FACTORY_MANAGERS'
  | 'CAN_LOGIN_AS_OTHER_USER'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_CN'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_HK'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_KR'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_MY'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_SG'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_TW'
  | 'CAN_LOGIN_TO_GENERAL_MERCHANT_SUPPORT_VIP'
  | 'CAN_LOGIN_WITH_CREDENTIALS'
  | 'CAN_MANAGE_BLUE_AMBASSADORS'
  | 'CAN_MANAGE_BRAND_LIST'
  | 'CAN_MANAGE_BRAND_TO_PRODUCT'
  | 'CAN_MANAGE_CHINESE_BDS'
  | 'CAN_MANAGE_GS_MERCHANT'
  | 'CAN_MANAGE_JP_MERCHANT'
  | 'CAN_MANAGE_KR_MERCHANT'
  | 'CAN_MANAGE_MERCHANT_ACCOUNT_BALANCES'
  | 'CAN_MANAGE_MY_MERCHANT'
  | 'CAN_MANAGE_PERMISSIONS_FOR_ALL_USERS'
  | 'CAN_MANAGE_ROLES_FOR_ALL_USERS'
  | 'CAN_MANAGE_SG_MERCHANT'
  | 'CAN_MANAGE_US_BDS'
  | 'CAN_PERFORM_ACTION_ON_WISH_USERS'
  | 'CAN_PERFORM_CHARGEBACK_REVIEW'
  | 'CAN_PERFORM_CHARGEBACK_REVIEW_AUDIT'
  | 'CAN_PROVIDE_MERCHANT_CHAT_SUPPORT'
  | 'CAN_RECEIVE_SMS_ON_QA_ENV'
  | 'CAN_RESUBMIT_PAYMENT'
  | 'CAN_REVERSE_FINE'
  | 'CAN_REVIEW_BANK_ACCOUNT_DOCUMENT'
  | 'CAN_REVIEW_CN_PAYMENT_REQUEST'
  | 'CAN_REVIEW_DISPUTES'
  | 'CAN_REVIEW_EPC_APPLICATION'
  | 'CAN_REVIEW_EU_MERCHANTS'
  | 'CAN_REVIEW_MERCHANTS'
  | 'CAN_REVIEW_MERCHANT_INFO_ONLY'
  | 'CAN_REVIEW_MERCHANT_KYC'
  | 'CAN_REVIEW_PRODUCT_CATEGORY_DISPUTE'
  | 'CAN_REVIEW_RESPONSIBLE_PERSON'
  | 'CAN_REVIEW_TRACKING_DISPUTES'
  | 'CAN_REVIEW_TRUE_BRAND_REQUEST'
  | 'CAN_REVIEW_UNSAFE'
  | 'CAN_REVIEW_US_PAYMENT_REQUEST'
  | 'CAN_SEND_ANNOUNCEMENTS_AS_EDUCATION_TEAM'
  | 'CAN_SEND_EMAIL'
  | 'CAN_SEND_SMS'
  | 'CAN_SEND_WECHAT_MESSAGE'
  | 'CAN_TOGGLE_ADMIN_EDIT_ON_ALL_USERS'
  | 'CAN_TOGGLE_ADMIN_EDIT_ON_STORE_USERS'
  | 'CAN_TOGGLE_MERCHANT_AUTOBAN'
  | 'CAN_TRANSFER_ANY_MERCHANTS'
  | 'CAN_TRANSFER_MERCHANTS'
  | 'CAN_TRIGGER_BANK_ACCOUNT_VERIFICATION'
  | 'CAN_UNCOMBINE_APLUS_ORDERS'
  | 'CAN_UNENROLL_WHITE_GLOVE'
  | 'CAN_UPDATE_COLLECTIONBOOST'
  | 'CAN_UPDATE_CSP_CONFIG'
  | 'CAN_UPLOAD_BANK_ACCOUNT_DOCUMENT'
  | 'CAN_USE_BP_DATA_TOOL'
  | 'CAN_USE_TFA_ADMIN_TOOL'
  | 'CAN_USE_TFA_BD_TOOL'
  | 'CAN_USE_WISH_EXPRESS_SUPPORT_FEATURE'
  | 'CAN_VIEW_ACCOUNT_BALANCE'
  | 'CAN_VIEW_ALL_INTERNAL_USERS'
  | 'CAN_VIEW_ALL_MERCHANT_FILES'
  | 'CAN_VIEW_BAN_INFRACTION'
  | 'CAN_VIEW_BDS'
  | 'CAN_VIEW_BLANKET_AUTHORIZATION_STATUS'
  | 'CAN_VIEW_BRANDS'
  | 'CAN_VIEW_BRAND_LIST'
  | 'CAN_VIEW_CN_INFRACTIONS'
  | 'CAN_VIEW_CS_REPS'
  | 'CAN_VIEW_DISABLED_INFO'
  | 'CAN_VIEW_DISPUTES'
  | 'CAN_VIEW_EARLY_PAYMENT_RISK_CONTROL'
  | 'CAN_VIEW_EPC_APPLICATION'
  | 'CAN_VIEW_FACTORY_LIST'
  | 'CAN_VIEW_FRAUD_INFRACTION_QUEUE'
  | 'CAN_VIEW_FRAUD_WORKERS'
  | 'CAN_VIEW_GS_MERCHANT_INFO'
  | 'CAN_VIEW_HR_RELATED_USERS'
  | 'CAN_VIEW_MERCHANT_GROUP'
  | 'CAN_VIEW_MERCHANT_IDS'
  | 'CAN_VIEW_ORDERS'
  | 'CAN_VIEW_ORDER_SHIPPING_ESTIMATE'
  | 'CAN_VIEW_PRODUCT_STATUS'
  | 'CAN_VIEW_REGULATOR_REPORT_FILES'
  | 'CAN_VIEW_SHIP_TO_STORE_PACKAGE'
  | 'CAN_VIEW_TRACKING_DISPUTES'
  | 'CAN_VIEW_TRANSACTION_DETAIL'
  | 'CAN_VIEW_US_BD_STATS'
  | 'CAN_VIEW_US_INFRACTIONS'
  | 'CAN_VIEW_VMPI_ALERT'
  | 'CAN_VIEW_WISH_USERS'
  | 'CAN_VIEW_WISH_USER_INFO'
  | 'CHANGE_DISPLAY_SETTINGS'
  | 'CHANGE_EMAIL_SETTINGS'
  | 'CHANGE_LANGUAGE'
  | 'CHANGE_SELLER_PROFILE'
  | 'CNY_PROMOTED_DISABLE'
  | 'COMPLETE_AUTHENTIC_BRAND_SELLER_BADGE_APPLICATIONS'
  | 'COUNTERFEIT_HELP_TAG'
  | 'COUNTERFEIT_TAG'
  | 'COUNTERFEIT_TAG_AUDIT'
  | 'COUNTERFEIT_TAG_AUDIT_IN_HOUSE'
  | 'COUNTERFEIT_TAG_MANUAL'
  | 'COUNTERFEIT_TAG_RESOLUTION'
  | 'CREATE_ADMIN'
  | 'CREATE_ADMIN_ACCOUNT'
  | 'CREATE_ATO_HOLD'
  | 'CREATE_B2B_SALE_FEE'
  | 'CREATE_BATCH_WARNING'
  | 'CREATE_DECEPTIVE_FULFILLMENT_FINE'
  | 'CREATE_FAILED_IDENTITY_REVERIFICATION_HOLD'
  | 'CREATE_FAKE_TRACKING_FINE'
  | 'CREATE_FRAUDULENT_ACTIVITES_HOLD'
  | 'CREATE_HIGH_GAMING_GMV_HOLD'
  | 'CREATE_HIGH_IP_INFRINGEMENT_HOLD'
  | 'CREATE_INTERNAL_HOLD'
  | 'CREATE_INVALID_REGISTRATION_INFO_HOLD'
  | 'CREATE_LCL_FBW_FEE'
  | 'CREATE_LEGAL_SETTLEMENT_FINE'
  | 'CREATE_LISTING_REVIEW_JOB'
  | 'CREATE_ONEOFF_FINE'
  | 'CREATE_ONEOFF_REQUEST_EMAIL_REPORT'
  | 'CREATE_OTHER_HOLD'
  | 'CREATE_PENDING_SANCTION_SCREENING_HOLD'
  | 'CREATE_POLICY_VIOLATION_FINE'
  | 'CREATE_PRODUCT'
  | 'CREATE_PUBLIC_MERCHANT_APP'
  | 'CREATE_RESPOND_TO_ADMIN_HOLD'
  | 'CREATE_SHIP_FRAUD_HOLD'
  | 'CREATE_TAG_JOB'
  | 'CREATE_TAKEDOWN_REQUESTS'
  | 'CREATE_TEAM_MEMBER'
  | 'CREATE_TERM_OF_SERVICE_EPC_BILL_HOLD'
  | 'CREATE_TERM_OF_SERVICE_HOLD'
  | 'CREATE_TRO_HOLD'
  | 'CREATE_TRUE_TAG_ASSOCIATION'
  | 'CREATE_VARIATION'
  | 'CREATE_WISHPOST_ID_NOT_COMPLETE_FACE_RECOGNITION'
  | 'CREATE_WISHPOST_NEGATIVE_BALANCE_HOLD'
  | 'CREATE_WITHHOLD_FUND'
  | 'CS_REP_LEAD_STATS'
  | 'CS_REP_STATS'
  | 'CUSTOM_CHARTS'
  | 'DEP_BRAND_REVIEW_RESOLUTION_TAG'
  | 'DEP_HANDLE_MERCHANT_BENEFITS'
  | 'DEP_IP_VIOLATION_TAG_RESOLUTION'
  | 'DEP_TRUE_BRAND_RESOLUTION_TAG'
  | 'DETAIL_TAG'
  | 'DETAIL_TAG_AUDIT'
  | 'DETAIL_TAG_MANUAL'
  | 'DISPUTE_CURRENCY'
  | 'DOWNLOAD_EXPORT'
  | 'EARLY_PAYMENT_RISK_CONTROL'
  | 'EDIT_ACCOUNT_NAME'
  | 'EDIT_ADMINS'
  | 'EDIT_ADMIN_PERMISSIONS'
  | 'EDIT_ALL_LOGICAL_QUEUES'
  | 'EDIT_BD_PERMISSIONS'
  | 'EDIT_BRAND_PROTECTION_PERMISSIONS'
  | 'EDIT_CONTENT_TEAM_PERMISSIONS'
  | 'EDIT_CS_REPS'
  | 'EDIT_FRAUD_TEAM_PERMISSIONS'
  | 'EDIT_LEGAL_TEAM_PERMISSIONS'
  | 'EDIT_LOGICAL_TICKET_QUEUE'
  | 'EDIT_LOGICAL_TICKET_QUEUE_ASSIGNMENT'
  | 'EDIT_LOGICAL_TICKET_QUEUE_LIMITED'
  | 'EDIT_MERCHANTS'
  | 'EDIT_MERCHANT_PERMISSIONS'
  | 'EDIT_MERCHANT_SUPPORT_PERMISSIONS'
  | 'EDIT_MERCHANT_WARNING_AUDIT_STATUS'
  | 'EDIT_ORDERS'
  | 'EDIT_PRODUCTS'
  | 'EDIT_PRODUCT_LOGISTIC_METADATA'
  | 'EDIT_PROMOTED_PRODUCTS'
  | 'EDIT_QA_PERMISSIONS'
  | 'EDIT_TAGGING_PERMISSIONS'
  | 'ENABLE_DISABLE_ALL_PRODUCTS'
  | 'ENABLE_DISABLE_API_PARTNERS'
  | 'ESCALATE_TO_MERCHANT'
  | 'EUB_LOGISTIC'
  | 'EXPORT_ORDERS'
  | 'EXPORT_PRODUCT_DATA'
  | 'EXPORT_PRODUCT_STAT'
  | 'EXT_CS_CAN_REFUND_ESCALATION'
  | 'FAST_QUEUE_TAGGING_JOBS'
  | 'FAST_QUEUE_TAGGING_JOBS_HIGHEST_PRIORITY'
  | 'FBW2'
  | 'FBW_TICKETS'
  | 'FULFILLED_BY_WISH'
  | 'FULFILL_ORDERS'
  | 'GENDER_AUDIT_TAG'
  | 'GENDER_TAG'
  | 'GENDER_TAG_MANUAL'
  | 'GET_CURRENCY_INFO'
  | 'GET_PAYMENTS'
  | 'HANDLE_ALL_TICKETS'
  | 'HANDLE_CS_TICKETS'
  | 'HOVERBOARD'
  | 'IMAGE_CHANGE_AUDIT_TAG'
  | 'IMAGE_CHANGE_RESOLUTION_TAG'
  | 'IMAGE_CHANGE_TAG'
  | 'INAPPROPRIATE_IN_HOUSE_TAG'
  | 'INITIATE_PAYMENT_PROVIDER_SIGN_UP'
  | 'IP_VIOLATION_AUDIT_IN_HOUSE_TAG'
  | 'IP_VIOLATION_AUDIT_TAG'
  | 'IP_VIOLATION_MANUAL_TAG'
  | 'IP_VIOLATION_TAG'
  | 'LISTING_REVIEW_AUDIT_IN_HOUSE_TAG'
  | 'LISTING_REVIEW_AUDIT_TAG'
  | 'LISTING_REVIEW_TAG'
  | 'LISTING_REVIEW_TAG_IN_HOUSE'
  | 'LISTING_REVIEW_TAG_RESOLUTION'
  | 'LOGIN_AS_CS'
  | 'LOGIN_AS_MERCHANTS'
  | 'LOGIN_TO_WISH_LOCAL'
  | 'LOGIN_WITH_OAUTH'
  | 'MANAGE_BLACKLIST_CRITERIA'
  | 'MANAGE_BRAND_PARTNERS'
  | 'MANAGE_BRAND_VIOLATION_REPORT'
  | 'MANAGE_DELIVERED_CARRIER'
  | 'MANAGE_ERP_PARTNERS'
  | 'MANAGE_FBW_ORDERS'
  | 'MANAGE_LEGAL_INJUNCTION'
  | 'MANAGE_PRODUCT_GEOBLOCK'
  | 'MANAGE_SHIPPING_SETTINGS'
  | 'MANAGE_SIZE_CHART'
  | 'MANAGE_STORE_FULFILLMENT'
  | 'MANAGE_TAX_ENROLLMENT'
  | 'MANAGE_WHITE_GLOVE'
  | 'MERCHANT_GAMING_REVIEW_ESCALATION'
  | 'MGC_CONTENT_MANUAL_TAG'
  | 'MGC_CONTENT_TAG'
  | 'MGC_IP_MANUAL_TAG'
  | 'MGC_IP_TAG'
  | 'MODIFY_MERCHANT_FINES'
  | 'MODIFY_MERCHANT_PAYMENT_HOLDS'
  | 'PRODUCT_CATEGORY_DISPUTE_EDIT'
  | 'PRODUCT_RATING_IMAGE_AUDIT_TAG'
  | 'PRODUCT_RATING_IMAGE_MANUAL_TAG'
  | 'PRODUCT_RATING_IMAGE_TAG'
  | 'PRODUCT_RATING_TAG'
  | 'PRODUCT_RATING_VIDEO_AUDIT_TAG'
  | 'PRODUCT_RATING_VIDEO_TAG'
  | 'PROFILE_PICTURE_TAG'
  | 'PROMO_MANUAL_TAG'
  | 'PROMO_TAG'
  | 'RAMP_DOWN_MERCHANT_IMPRESSIONS'
  | 'RECYCLE_TRACKING'
  | 'REMOVE_INFRACTION_FINES'
  | 'REMOVE_WISH_EXPRESS_PRODUCTS'
  | 'REPORTED_WISH_LOCAL_DETAIL_TAG'
  | 'REQUEST_EARLY_PAYMENT'
  | 'RESTRICTED_PRODUCT_REQUEST_EDITION'
  | 'RESTRICT_REVIEW_CN_MERCHANTS'
  | 'RESTRICT_REVIEW_US_MERCHANTS'
  | 'RESTRICT_VACATION_MODE_ACCESS'
  | 'RETURN_CENTER'
  | 'REVERSE_ONEOFF_FINES'
  | 'REVIEW_ALL_INFRACTION'
  | 'REVIEW_BRAND_AUTH'
  | 'REVIEW_BULK_TRANSACTION_REVERSAL'
  | 'REVIEW_COUNTERFEIT_INFRACTION'
  | 'REVIEW_ONEOFF_REQ_BAN_MERCHANTS'
  | 'REVIEW_ONEOFF_REQ_CREATE_NEW_MAX_TTD_EXTENSION'
  | 'REVIEW_ONEOFF_REQ_CREATE_PB_SHADOW_CAMPAIGNS'
  | 'REVIEW_ONEOFF_REQ_DISABLE_DYNAMIC_PRICING'
  | 'REVIEW_ONEOFF_REQ_ENABLE_COLLECTIONBOOST'
  | 'REVIEW_ONEOFF_REQ_ENABLE_DISABLE_CSP_FOR_ALL_ELIGIBLE_PRODUCTS'
  | 'REVIEW_ONEOFF_REQ_ENABLE_DYNAMIC_PRICING'
  | 'REVIEW_ONEOFF_REQ_ENROLL_MERCHANT_PLUS'
  | 'REVIEW_ONEOFF_REQ_ENROLL_PB_KICKSTART'
  | 'REVIEW_ONEOFF_REQ_ENROLL_PRICE_DROP'
  | 'REVIEW_ONEOFF_REQ_GIVE_BD_ACCESS'
  | 'REVIEW_ONEOFF_REQ_ISSUE_CB_CREDITS'
  | 'REVIEW_ONEOFF_REQ_ISSUE_PB_CREDITS'
  | 'REVIEW_ONEOFF_REQ_ISSUE_PB_CREDITS_TO_SELF_INVENTORY_MERCHANTS'
  | 'REVIEW_ONEOFF_REQ_MERCHANT_EU_ENTITY'
  | 'REVIEW_ONEOFF_REQ_MIGRATE_MERCHANT_CURRENCY'
  | 'REVIEW_ONEOFF_REQ_OVERRIDE_MERCHANT_COUNTRY'
  | 'REVIEW_ONEOFF_REQ_REFUND_PB_BALANCE'
  | 'REVIEW_ONEOFF_REQ_REJECT_COLLECTIONBOOST_COLLECTION'
  | 'REVIEW_ONEOFF_REQ_REMOVE_MAX_TTD_ENTENSION'
  | 'REVIEW_ONEOFF_REQ_REMOVE_PRODUCTS'
  | 'REVIEW_ONEOFF_REQ_SET_HEDGES'
  | 'REVIEW_ONEOFF_REQ_SET_REV_SHARE'
  | 'REVIEW_ONEOFF_REQ_TEMP_EXEMPT_PROMOTE_PRODUCT_POLICY'
  | 'REVIEW_ONEOFF_REQ_VERIFY_WAREHOUSE'
  | 'REVIEW_ONEOFF_REQ_WHITELIST_MERCHANTS'
  | 'REVIEW_PRODUCT_EDIT_REQUESTS'
  | 'SAFELIST_PRODUCTS'
  | 'SEND_BD_ANNOUNCEMENTS'
  | 'SEND_SYSTEM_UPDATE_TO_BD'
  | 'SEND_SYSTEM_UPDATE_TO_CS'
  | 'SEND_SYSTEM_UPDATE_TO_FRAUD'
  | 'SEND_SYSTEM_UPDATE_TO_MERCHANTS'
  | 'SEND_SYSTEM_UPDATE_TO_TAGGERS'
  | 'SHIPPING_ETA_TICKET_MERCHANT'
  | 'SHIP_ORDERS'
  | 'SHOW_ACCENTURE_TAGGERS'
  | 'SHOW_ALL_MERCHANT_PROFILES'
  | 'SHOW_ALL_REFUND_PERFORMANCES'
  | 'SHOW_ALL_TAGGERS'
  | 'SHOW_COUNTERFEIT_TAGGER_TEST_RESULT'
  | 'SHOW_COUNTERFEIT_TAGGER_TEST_SPEC'
  | 'SHOW_DETAIL_TAGGER_TEST_RESULT'
  | 'SHOW_DETAIL_TAGGER_TEST_SPEC'
  | 'SHOW_MERCHANT_ASSETS'
  | 'SHOW_MERCHANT_PROFILE'
  | 'SHOW_MERCHANT_STATS'
  | 'SHOW_MERCHANT_TODO_ITEMS'
  | 'SHOW_ORDERS'
  | 'SHOW_ORDER_PENALTIES'
  | 'SHOW_PRODUCTS'
  | 'SHOW_PRODUCT_BOOST'
  | 'SHOW_PRODUCT_BRAND_DETECTION'
  | 'SHOW_PRODUCT_LOGISTIC_METADATA'
  | 'SHOW_REFUND_PERFORMANCE'
  | 'SHOW_SEARCH_TOOL'
  | 'SHOW_SHIPPING_PROVIDERS'
  | 'SHOW_STORE_ASSETS'
  | 'SHOW_STORE_USERS'
  | 'SHOW_TAGGING_TEST_HISTORY'
  | 'SHOW_TAKEDOWN_REQUESTS'
  | 'SUPPLY_CHAIN_ADMIN'
  | 'SUPPLY_CHAIN_AP'
  | 'SUPPLY_CHAIN_DATA'
  | 'SUPPLY_CHAIN_FINANCE'
  | 'SUPPLY_CHAIN_MAINTAINER'
  | 'SUPPLY_CHAIN_MERCHANDISE'
  | 'SUPPLY_CHAIN_PAYMENT_INITIATED'
  | 'SUPPLY_CHAIN_PREVALID_TABLE_MAINTAINER'
  | 'SUPPLY_CHAIN_QC'
  | 'SUPPLY_CHAIN_READ_ONLY'
  | 'SUPPLY_CHAIN_SOURCING'
  | 'SUPPLY_CHAIN_WAREHOUSE'
  | 'SYNC_SHOPIFY_PRODUCTS'
  | 'TAG_AUTHORIZATION'
  | 'TAG_STATUS_CHECK'
  | 'TRIGGER_CN_VERIFICATION'
  | 'TRIGGER_EARLY_SELLER_VERIFICATION'
  | 'TRIGGER_KYC_REVERIFICATION'
  | 'TRIGGER_SELLER_PROFILE_REVERIFICATION'
  | 'TRUE_BRAND_ESCALATION_TAG'
  | 'TRUE_BRAND_TAG'
  | 'UNDO_INFRACTION_ACTION'
  | 'UPDATE_ACTION_RULE'
  | 'UPDATE_BLUE_STORE_ADVANCE'
  | 'UPDATE_LOCAL_TO_LOCAL'
  | 'UPDATE_PAYMENT_PERSONAL_SETTINGS'
  | 'UPDATE_PAYMENT_SETTINGS'
  | 'UPDATE_PRODUCTS'
  | 'UPDATE_SANCTION_SCREENING_HITS'
  | 'UPDATE_TRACKING'
  | 'UPLOAD_PRODUCTS_CSV'
  | 'USER_GENERATED_PRODUCT_IMAGE_TAG'
  | 'USE_CUSTOM_COLORS'
  | 'VALIDATE_COLLECTIONBOOST_COLLECTIONS'
  | 'VALIDATE_PROVIDER_DISBURSEMENT'
  | 'VERIFY_WAREHOUSE_ONEOFF_REQ_APPROVER'
  | 'VIEW_ACTION_RULES'
  | 'VIEW_ALL_MERCHANTS'
  | 'VIEW_ATO_HOLD'
  | 'VIEW_AUTHENTIC_BRAND_SELLER_BADGE_APPLICATIONS'
  | 'VIEW_B2B_SALE_FEE'
  | 'VIEW_BD_ANNOUNCEMENTS'
  | 'VIEW_CN_MERCHANTS'
  | 'VIEW_CUSTOMER_PROFILE_PAGE'
  | 'VIEW_DECEPTIVE_FULFILLMENT_FINE'
  | 'VIEW_DISBURSEMENT_INFO'
  | 'VIEW_DISBURSEMENT_PAGE'
  | 'VIEW_EU_MERCHANTS'
  | 'VIEW_FAILED_IDENTITY_REVERIFICATION_HOLD'
  | 'VIEW_FAKE_TRACKING_FINE'
  | 'VIEW_FRAUDULENT_ACTIVITES_HOLD'
  | 'VIEW_GLOBAL_LEADERBOARD'
  | 'VIEW_GS_MERCHANTS'
  | 'VIEW_HIGH_GAMING_GMV_HOLD'
  | 'VIEW_HIGH_IP_INFRINGEMENT_HOLD'
  | 'VIEW_HOLDS_FOR_LOCAL_MERCHANTS'
  | 'VIEW_INTERNAL_HOLD'
  | 'VIEW_INVALID_REGISTRATION_INFO_HOLD'
  | 'VIEW_JP_MERCHANTS'
  | 'VIEW_KR_MERCHANTS'
  | 'VIEW_LCL_FBW_FEE'
  | 'VIEW_LEGAL_INJUNCTION'
  | 'VIEW_LEGAL_SETTLEMENT_FINE'
  | 'VIEW_LOGICAL_TICKET_QUEUES'
  | 'VIEW_MERCHANTS'
  | 'VIEW_MERCHANT_GAMING_REVIEW_TICKETS'
  | 'VIEW_MERCHANT_RATING_PAGE'
  | 'VIEW_MISSING_CA_TAX_SETTING_HOLD'
  | 'VIEW_ONEOFF_FINE'
  | 'VIEW_ONEOFF_PAYMENT_DETAIL'
  | 'VIEW_OTHER_HOLD'
  | 'VIEW_PAYMENT_DETAIL'
  | 'VIEW_PAYMENT_HISTORY'
  | 'VIEW_PAYMENT_SETTINGS'
  | 'VIEW_PENDING_SANCTION_SCREENING_HOLD'
  | 'VIEW_POLICY_VIOLATION_FINE'
  | 'VIEW_PRODUCTS'
  | 'VIEW_PRODUCT_PROFILE_PAGE'
  | 'VIEW_RESPOND_TO_ADMIN_HOLD'
  | 'VIEW_RESTRICTED_PRODUCT_REQUEST'
  | 'VIEW_SHIP_FRAUD_HOLD'
  | 'VIEW_TAKEDOWN_REQUESTS'
  | 'VIEW_TERM_OF_SERVICE_EPC_BILL_HOLD'
  | 'VIEW_TERM_OF_SERVICE_HOLD'
  | 'VIEW_TRO_HOLD'
  | 'VIEW_TRO_TOOLS'
  | 'VIEW_TRUE_BRAND_DIRECTORY'
  | 'VIEW_WARNING_BAN_HOLD'
  | 'VIEW_WARNING_MANUAL_HOLD'
  | 'VIEW_WISHPOST_ID_NOT_COMPLETE_FACE_RECOGNITION'
  | 'VIEW_WISHPOST_NEGATIVE_BALANCE_HOLD'
  | 'VIEW_WISH_USERS'
  | 'VIEW_WITHHOLD_FUND'
  | 'WISHPOST'
  | 'WISH_BLUE_ADMIN'
  | 'WISH_BLUE_AMBASSADOR_PROFILE'
  | 'WISH_BLUE_STORE_SUPPORT_PROFILE'
  | 'WISH_LOCAL_DETAIL_TAG'
  | 'WISH_LOCAL_TAG_STATUS_CHECK'
  | 'YANWEN_LOGISTIC';

export type PickupCarrier =
  | 'WISE'
  | 'YANWEN';

export type PictureType =
  | 'BACK'
  | 'FRONT'
  | 'SELFIE'
  | 'STANDARD';

export type PlatformConstants = {
  readonly __typename?: 'PlatformConstants';
  readonly availableLocales?: Maybe<ReadonlyArray<Locale>>;
  readonly brandProtection?: Maybe<BrandProtectionConstants>;
  readonly buyerFraudReasons: ReadonlyArray<OrderRefundBuyerFraudSubreasonSchema>;
  readonly countriesAllowWeRegionalPrice: ReadonlyArray<Country>;
  readonly countriesWeShipTo: ReadonlyArray<Country>;
  readonly cs?: Maybe<CustomerSupportConstants>;
  readonly deciderKey?: Maybe<DeciderKeySchema>;
  readonly euCountriesWeShipTo: ReadonlyArray<Country>;
  readonly euVatCountries: ReadonlyArray<Country>;
  readonly expeditedProcessDaysToPayment: Timedelta;
  readonly googleLogin?: Maybe<GoogleLoginDetails>;
  readonly interselectablePhoneCountries: ReadonlyArray<Country>;
  readonly issueRefundReasons: ReadonlyArray<CustomerSupportTicketIssueRefundReasonSchema>;
  readonly merchantMobile: MerchantMobile;
  readonly mfp?: Maybe<MfpConstantsSchema>;
  readonly oktaOauthUri?: Maybe<Scalars['String']>;
  readonly orders: OrderConstants;
  readonly product: ProductConstantsSchema;
  readonly productCsvImportColumns?: Maybe<ProductCsvImportSchema>;
  readonly productListing: ReadonlyArray<ProductListingTierSchema>;
  readonly regions?: Maybe<ReadonlyArray<Region>>;
  readonly returnCancelReasons: ReadonlyArray<CustomerSupportTicketCancelReturnReasonSchema>;
  readonly sellerProfileRegionConstants: SellerProfileRegionConstants;
  readonly staticFines?: Maybe<StaticFines>;
  readonly tax: TaxConstants;
  readonly topLevelTags?: Maybe<ReadonlyArray<TrueTagSchema>>;
  readonly unityCountries: ReadonlyArray<Country>;
  readonly wishCompanyInfo: WishCompanyInfo;
  readonly wishEuVatPayerInfo?: Maybe<WishEuvatPayerInfo>;
  readonly wishExpressCountries: ReadonlyArray<Country>;
};


export type PlatformConstantsRegionsArgs = {
  countryCode: CountryCode;
};

export type PlatformSweepMutations = {
  readonly __typename?: 'PlatformSweepMutations';
  readonly emailResult?: Maybe<PlatformSweepResultEmail>;
  readonly flagProducts?: Maybe<PlatformSweepProductFlagging>;
  readonly searchProducts?: Maybe<PlatformSweepProductSearch>;
};


export type PlatformSweepMutationsEmailResultArgs = {
  input: PlatformSweepResultEmailInput;
};


export type PlatformSweepMutationsFlagProductsArgs = {
  input: PlatformSweepProductFlaggingInput;
};


export type PlatformSweepMutationsSearchProductsArgs = {
  input: PlatformSweepProductSearchInput;
};

export type PlatformSweepProductFlagging = {
  readonly __typename?: 'PlatformSweepProductFlagging';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type PlatformSweepProductFlaggingInput = {
  readonly productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly query: Scalars['String'];
  readonly sessionId: Scalars['ObjectIdType'];
};

export type PlatformSweepProductSearch = {
  readonly __typename?: 'PlatformSweepProductSearch';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly products?: Maybe<ReadonlyArray<ProductSchema>>;
  readonly sessionId?: Maybe<Scalars['ObjectIdType']>;
};

export type PlatformSweepProductSearchInput = {
  readonly countryCode?: InputMaybe<CountryCode>;
  readonly excludingL2lSubcategories?: InputMaybe<ReadonlyArray<TaggingViolationSubReasonCode>>;
  readonly isBba?: InputMaybe<Scalars['Boolean']>;
  readonly isCompanyOwned?: InputMaybe<Scalars['Boolean']>;
  readonly isPbSearch: Scalars['Boolean'];
  readonly limit?: InputMaybe<Scalars['Int']>;
  readonly offset?: InputMaybe<Scalars['Int']>;
  readonly query: Scalars['String'];
  readonly sessionId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type PlatformSweepResultEmail = {
  readonly __typename?: 'PlatformSweepResultEmail';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type PlatformSweepResultEmailInput = {
  readonly recipient: Scalars['String'];
  readonly sessionId: Scalars['ObjectIdType'];
};

export type PlusAdminServiceMutations = {
  readonly __typename?: 'PlusAdminServiceMutations';
  readonly convertToPlus?: Maybe<ConvertToPlus>;
  readonly removeCountFromMplus?: Maybe<RemoveCountFromMplus>;
  readonly removeFromPlus?: Maybe<RemoveFromPlus>;
};


export type PlusAdminServiceMutationsConvertToPlusArgs = {
  input: ConvertToPlusInput;
};


export type PlusAdminServiceMutationsRemoveCountFromMplusArgs = {
  input: RemoveCountFromMplusInput;
};


export type PlusAdminServiceMutationsRemoveFromPlusArgs = {
  input: RemoveFromPlusInput;
};

export type PolicyAdminSchema = {
  readonly __typename?: 'PolicyAdminSchema';
  readonly merchantGamingReviewTickets?: Maybe<ReadonlyArray<MerchantGamingReviewTicketSchema>>;
  readonly merchantGamingReviewTicketsClosedStates?: Maybe<ReadonlyArray<MerchantGamingReviewState>>;
  readonly merchantGamingReviewTicketsCount?: Maybe<Scalars['Int']>;
  readonly merchantGamingReviewTicketsOpenStates?: Maybe<ReadonlyArray<MerchantGamingReviewState>>;
  readonly merchantPolicyTiers?: Maybe<ReadonlyArray<MerchantPolicyTierSchema>>;
};


export type PolicyAdminSchemaMerchantGamingReviewTicketsArgs = {
  claimedAdminName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ObjectIdType']>;
  isClaimed?: InputMaybe<Scalars['Boolean']>;
  lastSourceUpsertDateEnd?: InputMaybe<DatetimeInput>;
  lastSourceUpsertDateStart?: InputMaybe<DatetimeInput>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<MerchantGamingReviewTicketSort>;
  states?: InputMaybe<ReadonlyArray<MerchantGamingReviewState>>;
};


export type PolicyAdminSchemaMerchantGamingReviewTicketsCountArgs = {
  claimedAdminName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ObjectIdType']>;
  isClaimed?: InputMaybe<Scalars['Boolean']>;
  lastSourceUpsertDateEnd?: InputMaybe<DatetimeInput>;
  lastSourceUpsertDateStart?: InputMaybe<DatetimeInput>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  states?: InputMaybe<ReadonlyArray<MerchantGamingReviewState>>;
};

export type PolicyAnnouncementItemSchema = {
  readonly __typename?: 'PolicyAnnouncementItemSchema';
  readonly announcementId?: Maybe<Scalars['ObjectIdType']>;
  readonly effectiveDate?: Maybe<Datetime>;
  readonly requireLogIn: Scalars['Boolean'];
  readonly section: Scalars['String'];
};

export type PolicyFactor =
  | 'AUTO_REFUND'
  | 'COUNTERFEIT_GOODS'
  | 'CS_LATE_RESPONSE_RATE'
  | 'CS_LOW_CSAT_SCORE'
  | 'FAKE_TRACKING'
  | 'FAKE_TRACKING_BY_WEIGHT'
  | 'GATE_KEEPER_ATO'
  | 'HIGH_AUTO_REFUND'
  | 'HIGH_AUTO_REFUND_RATE'
  | 'HIGH_CANCEL_RATE'
  | 'HIGH_GAMING_GMV'
  | 'HIGH_IP_INFRINGEMENT'
  | 'HIGH_REFUND_RATE'
  | 'INAPPROPRIATE_SALE'
  | 'LATE_CONFIRM_FULFILLMENT'
  | 'LOW_STORE_RATE'
  | 'MERCHANT_CANCELLATION'
  | 'MISLEADING_PRODUCT'
  | 'MISLEADING_VARIATION'
  | 'NEGATIVE_BALANCE'
  | 'ORDER_NOT_DELIVERED'
  | 'PRODUCT_HIGH_REFUND_RATE'
  | 'PRODUCT_SWAP'
  | 'RECALL_POLICY'
  | 'REPEAT_IP_INFRINGEMENT'
  | 'STRIKE_BASED_HIGH_RISK_PROHIBITED'
  | 'UNQUALIFIED_CARRIER'
  | 'VALID_TRACKING_RATE'
  | 'WISH_EXPRESS_BAN'
  | 'WISH_EXPRESS_LATE'
  | 'WISH_EXPRESS_LATE_WITHHOLD'
  | 'WSS_BAN_POLICY';

export type PolicyMutations = {
  readonly __typename?: 'PolicyMutations';
  readonly adaptivePolicyAdmin?: Maybe<AdaptivePolicyAdminMutations>;
  readonly bulkUpsertMerchantWarning?: Maybe<BulkUpsertMerchantWarning>;
  readonly merchantFinalSale?: Maybe<MerchantFinalSaleMutations>;
  readonly merchantGamingReviewTicket?: Maybe<MerchantGamingReviewMutations>;
  readonly merchantWarning?: Maybe<MerchantWarningMutations>;
  readonly orderInfractionDispute?: Maybe<OrderInfractionDisputeMutations>;
  readonly productCategoryDispute?: Maybe<ProductCategoryDisputeMutations>;
  readonly productCompliance?: Maybe<ProductComplianceMutations>;
  readonly refundDispute?: Maybe<RefundDisputeMutations>;
  readonly restrictedProduct?: Maybe<RestrictedProductMutations>;
  readonly wfp?: Maybe<WfpMutations>;
};


export type PolicyMutationsBulkUpsertMerchantWarningArgs = {
  input?: InputMaybe<BulkUpsertMerchantWarningInput>;
};

export type PolicyPublicMutations = {
  readonly __typename?: 'PolicyPublicMutations';
  readonly reportAbuse: ReportAbuseMutations;
};

export type PolicyPublicSchema = {
  readonly __typename?: 'PolicyPublicSchema';
  readonly announcements?: Maybe<ReadonlyArray<PolicyAnnouncementItemSchema>>;
  readonly reportAbuse: ReportAbuseHub;
};

export type PolicySchema = {
  readonly __typename?: 'PolicySchema';
  readonly admin?: Maybe<PolicyAdminSchema>;
  readonly cannedResponse?: Maybe<CannedResponseHub>;
  readonly detailedWarningReasons?: Maybe<ReadonlyArray<DetailedMerchantWarningReasonSchema>>;
  readonly dispute?: Maybe<DisputeSchema>;
  readonly finalSaleCategories?: Maybe<ReadonlyArray<FinalSaleCategorySchema>>;
  readonly merchantWarning?: Maybe<MerchantWarningSchema>;
  readonly merchantWarningBulkProcessCount?: Maybe<Scalars['Int']>;
  readonly merchantWarningBulkProcesses?: Maybe<ReadonlyArray<MerchantWarningBulkProcessSchema>>;
  readonly merchantWarningCount?: Maybe<Scalars['Int']>;
  readonly merchantWarningReasons?: Maybe<ReadonlyArray<MerchantWarningReasonSchema>>;
  readonly merchantWarnings?: Maybe<ReadonlyArray<MerchantWarningSchema>>;
  readonly productCategoryDispute?: Maybe<ProductCategoryDisputeHub>;
  readonly productCompliance?: Maybe<ProductComplianceSchema>;
  readonly restrictedProduct?: Maybe<RestrictedProductSchema>;
};


export type PolicySchemaDetailedWarningReasonsArgs = {
  id?: InputMaybe<Scalars['ObjectIdType']>;
  issueDateEnd?: InputMaybe<DatetimeInput>;
  issueDateStart?: InputMaybe<DatetimeInput>;
  reasons?: InputMaybe<ReadonlyArray<MerchantWarningReason>>;
  searchProofIdTypes?: InputMaybe<ReadonlyArray<MerchantWarningProofType>>;
  states?: InputMaybe<ReadonlyArray<MerchantWarningState>>;
};


export type PolicySchemaFinalSaleCategoriesArgs = {
  merchantId: Scalars['ObjectIdType'];
};


export type PolicySchemaMerchantWarningArgs = {
  id?: InputMaybe<Scalars['ObjectIdType']>;
};


export type PolicySchemaMerchantWarningBulkProcessCountArgs = {
  search?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<ReadonlyArray<BulkMerchantWarningAction>>;
};


export type PolicySchemaMerchantWarningBulkProcessesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  search?: InputMaybe<Scalars['String']>;
  types?: InputMaybe<ReadonlyArray<BulkMerchantWarningAction>>;
};


export type PolicySchemaMerchantWarningCountArgs = {
  auditStatuses?: InputMaybe<ReadonlyArray<MerchantWarningAuditStatus>>;
  banned?: InputMaybe<Scalars['Boolean']>;
  category?: InputMaybe<CounterfeitReasonCode>;
  claimStatus?: InputMaybe<MerchantWarningClaimStatus>;
  correspondenceStatus?: InputMaybe<MerchantWarningCorrespondenceStatus>;
  detailedReasons?: InputMaybe<ReadonlyArray<DetailedMerchantWarningReason>>;
  disputePendingBrandAuth?: InputMaybe<Scalars['Boolean']>;
  disputePendingEditReview?: InputMaybe<Scalars['Boolean']>;
  fined?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ObjectIdType']>;
  ids?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  isMisleading?: InputMaybe<Scalars['Boolean']>;
  issueDateEnd?: InputMaybe<DatetimeInput>;
  issueDateStart?: InputMaybe<DatetimeInput>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  reasons?: InputMaybe<ReadonlyArray<MerchantWarningReason>>;
  searchProofIdTypes?: InputMaybe<ReadonlyArray<MerchantWarningProofType>>;
  states?: InputMaybe<ReadonlyArray<MerchantWarningState>>;
  subcategory?: InputMaybe<TaggingViolationSubReasonCode>;
  wssImpact?: InputMaybe<ReadonlyArray<WssImpactState>>;
};


export type PolicySchemaMerchantWarningsArgs = {
  auditStatuses?: InputMaybe<ReadonlyArray<MerchantWarningAuditStatus>>;
  banned?: InputMaybe<Scalars['Boolean']>;
  category?: InputMaybe<CounterfeitReasonCode>;
  claimStatus?: InputMaybe<MerchantWarningClaimStatus>;
  correspondenceStatus?: InputMaybe<MerchantWarningCorrespondenceStatus>;
  detailedReasons?: InputMaybe<ReadonlyArray<DetailedMerchantWarningReason>>;
  disputePendingBrandAuth?: InputMaybe<Scalars['Boolean']>;
  disputePendingEditReview?: InputMaybe<Scalars['Boolean']>;
  fined?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ObjectIdType']>;
  ids?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  issueDateEnd?: InputMaybe<DatetimeInput>;
  issueDateStart?: InputMaybe<DatetimeInput>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  reasons?: InputMaybe<ReadonlyArray<MerchantWarningReason>>;
  searchProofIdTypes?: InputMaybe<ReadonlyArray<MerchantWarningProofType>>;
  sort?: InputMaybe<MerchantWarningSort>;
  states?: InputMaybe<ReadonlyArray<MerchantWarningState>>;
  subcategory?: InputMaybe<TaggingViolationSubReasonCode>;
  wssImpact?: InputMaybe<ReadonlyArray<WssImpactState>>;
};

export type PolicyType =
  | 'FREE_RETURN_ACCEPTED'
  | 'NO_RETURN_ACCEPTED'
  | 'PREPAID_RETURN_ACCEPTED'
  | 'WISH_AUTO_REVIEW';

export type ProductAnalyticsDimension =
  | 'COUNTRY'
  | 'GENDER';

export type ProductAnalyticsInterval =
  | 'INTERVAL_DAY'
  | 'INTERVAL_HOUR'
  | 'INTERVAL_MINUTE'
  | 'INTERVAL_MONTH'
  | 'INTERVAL_UNSPECIFIED'
  | 'INTERVAL_WEEK';

export type ProductAnalyticsSchema = {
  readonly __typename?: 'ProductAnalyticsSchema';
  readonly enabled: Scalars['Boolean'];
  readonly productId: Scalars['String'];
  readonly stats?: Maybe<ProductAnalyticsStats>;
};


export type ProductAnalyticsSchemaStatsArgs = {
  endTime: DatetimeInput;
  interval?: InputMaybe<ProductAnalyticsInterval>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  startTime: DatetimeInput;
};

export type ProductAnalyticsStats = {
  readonly __typename?: 'ProductAnalyticsStats';
  readonly endTime: Datetime;
  readonly interactionStats: ReadonlyArray<ProductInteractionStats>;
  readonly interval: ProductAnalyticsInterval;
  readonly orderStats: ReadonlyArray<ProductOrderStats>;
  readonly startTime: Datetime;
};


export type ProductAnalyticsStatsInteractionStatsArgs = {
  dimensions?: InputMaybe<ReadonlyArray<ProductAnalyticsDimension>>;
};


export type ProductAnalyticsStatsOrderStatsArgs = {
  dimensions?: InputMaybe<ReadonlyArray<ProductAnalyticsDimension>>;
};

export type ProductBoostAcceptTos = {
  readonly __typename?: 'ProductBoostAcceptTOS';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ProductBoostAcceptTosInput = {
  readonly tosVersion: Scalars['Int'];
};

export type ProductCsvColumnName =
  | 'AD'
  | 'AD_TTD'
  | 'AL'
  | 'AL_TTD'
  | 'AR'
  | 'AR_TTD'
  | 'AT'
  | 'AT_TTD'
  | 'AU'
  | 'AU_TTD'
  | 'BA'
  | 'BA_TTD'
  | 'BE'
  | 'BE_TTD'
  | 'BG'
  | 'BG_TTD'
  | 'BR'
  | 'BRAND'
  | 'BRAND_ID'
  | 'BRAND_STATUS'
  | 'BR_TTD'
  | 'CA'
  | 'CALCULATED_SHIPPING'
  | 'CALIFORNIA_PROPOSITION_65_CHEMICAL_NAMES'
  | 'CALIFORNIA_PROPOSITION_65_WARNING_TYPE'
  | 'CATEGORY_EXPERIENCE_ELIGIBILITY'
  | 'CA_TTD'
  | 'CH'
  | 'CH_TTD'
  | 'CL'
  | 'CLEAN_IMAGE'
  | 'CL_TTD'
  | 'CO'
  | 'COLOR'
  | 'CONDITION'
  | 'CONTAINS_BATTERY'
  | 'CONTAINS_LIQUID'
  | 'CONTAINS_METAL'
  | 'CONTAINS_POWDER'
  | 'COST'
  | 'COUNTRY_OF_ORIGIN'
  | 'CO_TTD'
  | 'CR'
  | 'CR_TTD'
  | 'CURRENCY_CODE'
  | 'CUSTOMS_DECLARED_VALUE'
  | 'CUSTOMS_HS_CODE'
  | 'CZ'
  | 'CZ_TTD'
  | 'DATE_UPLOADED'
  | 'DE'
  | 'DECLARED_LOCAL_NAME'
  | 'DECLARED_NAME'
  | 'DEFAULT_SHIPPING_PRICE'
  | 'DESCRIPTION'
  | 'DE_TTD'
  | 'DK'
  | 'DK_TTD'
  | 'EE'
  | 'EE_TTD'
  | 'EFFECTIVE_DATE'
  | 'ES'
  | 'ES_TTD'
  | 'EXTRA_IMAGES'
  | 'FI'
  | 'FIRST_MILE_SHIPPING_PRICE_D_DISABLED'
  | 'FI_TTD'
  | 'FR'
  | 'FR_TTD'
  | 'GB'
  | 'GB_TTD'
  | 'GI'
  | 'GI_TTD'
  | 'GR'
  | 'GR_TTD'
  | 'GTIN'
  | 'HR'
  | 'HR_TTD'
  | 'HU'
  | 'HU_TTD'
  | 'IE'
  | 'IE_TTD'
  | 'IL'
  | 'IL_TTD'
  | 'INVENTORY'
  | 'IS'
  | 'IS_LTL'
  | 'IS_PROMOTED'
  | 'IS_TTD'
  | 'IT'
  | 'IT_TTD'
  | 'JP'
  | 'JP_TTD'
  | 'KR'
  | 'KR_TTD'
  | 'LANDING_PAGE_URL'
  | 'LAST_UPDATED'
  | 'LI'
  | 'LI_TTD'
  | 'LT'
  | 'LT_TTD'
  | 'LU'
  | 'LU_TTD'
  | 'LV'
  | 'LV_TTD'
  | 'MAIN_IMAGE'
  | 'MAX_QUANTITY'
  | 'MC'
  | 'MC_TTD'
  | 'MD'
  | 'MD_TTD'
  | 'ME'
  | 'ME_TTD'
  | 'MK'
  | 'MK_TTD'
  | 'MT'
  | 'MT_TTD'
  | 'MX'
  | 'MX_TTD'
  | 'NAME'
  | 'NL'
  | 'NL_TTD'
  | 'NO'
  | 'NO_TTD'
  | 'NUM_OF_SALES'
  | 'NUM_OF_WISHES'
  | 'NZ'
  | 'NZ_TTD'
  | 'PACKAGE_HEIGHT'
  | 'PACKAGE_LENGTH'
  | 'PACKAGE_WEIGHT'
  | 'PACKAGE_WIDTH'
  | 'PARENT_SKU'
  | 'PE'
  | 'PE_TTD'
  | 'PIECES_INCLUDED'
  | 'PL'
  | 'PL_TTD'
  | 'PR'
  | 'PRICE'
  | 'PRODUCT_ID'
  | 'PR_TTD'
  | 'PT'
  | 'PT_TTD'
  | 'QUANTITY_VALUE'
  | 'REFERENCE_PRICE'
  | 'REFERENCE_VALUE'
  | 'REVIEW_STATE'
  | 'RO'
  | 'RO_TTD'
  | 'RS'
  | 'RS_TTD'
  | 'SE'
  | 'SE_TTD'
  | 'SG'
  | 'SG_TTD'
  | 'SHIPPING_TIME'
  | 'SI'
  | 'SIZE'
  | 'SI_TTD'
  | 'SK'
  | 'SKU'
  | 'SK_TTD'
  | 'SM'
  | 'SM_TTD'
  | 'STATUS'
  | 'SUBCATEGORY_ID'
  | 'TAGS'
  | 'UA'
  | 'UA_TTD'
  | 'UNIT'
  | 'US'
  | 'US_TTD'
  | 'VARIATION_ID'
  | 'VARIATION_IMAGE'
  | 'VARIATION_OPTIONS'
  | 'VI'
  | 'VI_TTD'
  | 'WAREHOUSE'
  | 'WARNING_ID'
  | 'WISH_EXPRESS_COUNTRIES'
  | 'WISH_EXPRESS_DISABLED_COUNTRIES'
  | 'WISH_EXPRESS_ENABLED_COUNTRIES'
  | 'ZA'
  | 'ZA_TTD';

export type ProductCsvImportColumnSchema = {
  readonly __typename?: 'ProductCSVImportColumnSchema';
  readonly category?: Maybe<ColumnCategorySchema>;
  readonly columnId: Scalars['String'];
  readonly isRequired: IsRequiredEnum;
  readonly name: Scalars['String'];
};


export type ProductCsvImportColumnSchemaIsRequiredArgs = {
  feedType?: InputMaybe<ProductCsvJobType>;
};

export type ProductCsvImportSchema = {
  readonly __typename?: 'ProductCSVImportSchema';
  readonly columns: ReadonlyArray<ProductCsvImportColumnSchema>;
  readonly optionalColumns: ReadonlyArray<ProductCsvImportColumnSchema>;
  readonly requiredColumns: ReadonlyArray<ProductCsvImportColumnSchema>;
};


export type ProductCsvImportSchemaColumnsArgs = {
  columnIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  restrictCountryShipping?: InputMaybe<Scalars['Boolean']>;
};


export type ProductCsvImportSchemaOptionalColumnsArgs = {
  columnIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  restrictCountryShipping?: InputMaybe<Scalars['Boolean']>;
};


export type ProductCsvImportSchemaRequiredColumnsArgs = {
  columnIds?: InputMaybe<ReadonlyArray<Scalars['String']>>;
};

export type ProductCsvJobType =
  | 'ADD_PRODUCTS'
  | 'ADD_SIZE_COLOR'
  | 'CREATE_PRESALE_PRODUCT'
  | 'EDIT_FBW_SHIPPING'
  | 'EDIT_SHIPPING'
  | 'EDIT_WISH_EXPRESS_COUNTRIES'
  | 'NEW_ADD_PRODUCTS'
  | 'NEW_ADD_VARIATION'
  | 'NEW_UPDATE_PRODUCTS'
  | 'SHOPIFY_CREATE_PRODUCTS'
  | 'UPDATE_PRODUCTS'
  | 'UPSERT_PRODUCTS';

export type ProductCatalogMutations = {
  readonly __typename?: 'ProductCatalogMutations';
  readonly downloadAllProducts?: Maybe<DownloadAllProducts>;
  readonly downloadAllProductsCsv?: Maybe<DownloadAllProductsCsv>;
  readonly forceApproveProduct?: Maybe<ForceApproveProduct>;
  readonly removeProduct?: Maybe<RemoveProduct>;
  readonly removeVideo?: Maybe<RemoveVideo>;
  readonly updateProductLogisticsMetadata?: Maybe<UpdateProductLogisticsMetadata>;
  readonly uploadProductComplianceDocument?: Maybe<UploadProductComplianceDocuments>;
  readonly upsertProduct?: Maybe<UpsertProduct>;
  readonly upsertProductCsvFile?: Maybe<UpsertProductsFromCsvFile>;
  readonly upsertProducts?: Maybe<UpsertProducts>;
  readonly upsertVideo?: Maybe<UpsertVideo>;
};


export type ProductCatalogMutationsDownloadAllProductsArgs = {
  input: DownloadAllProductsInput;
};


export type ProductCatalogMutationsDownloadAllProductsCsvArgs = {
  input: DownloadAllProductsCsvInput;
};


export type ProductCatalogMutationsForceApproveProductArgs = {
  input: ForceApproveProductInput;
};


export type ProductCatalogMutationsRemoveProductArgs = {
  input: RemoveProductInput;
};


export type ProductCatalogMutationsRemoveVideoArgs = {
  input: RemoveVideoInput;
};


export type ProductCatalogMutationsUpdateProductLogisticsMetadataArgs = {
  input: UpdateProductLogisticsMetadataInput;
};


export type ProductCatalogMutationsUploadProductComplianceDocumentArgs = {
  input: ReadonlyArray<ProductComplianceDocumentInput>;
};


export type ProductCatalogMutationsUpsertProductArgs = {
  input?: InputMaybe<ProductUpsertInput>;
};


export type ProductCatalogMutationsUpsertProductCsvFileArgs = {
  input: UpsertProductsFromCsvFileInput;
};


export type ProductCatalogMutationsUpsertProductsArgs = {
  input: ReadonlyArray<ProductUpsertInput>;
};


export type ProductCatalogMutationsUpsertVideoArgs = {
  input?: InputMaybe<VideoUpsertInput>;
};

export type ProductCatalogSchema = {
  readonly __typename?: 'ProductCatalogSchema';
  readonly bulkCsvProductImportJobs: ReadonlyArray<CsvProductImportJobSchema>;
  readonly csvAllHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly csvEditVariationsHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly csvEnableDisableHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly csvPriceInventoryHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly csvProductColumnEnums: ReadonlyArray<ProductCsvColumnName>;
  readonly csvProductColumnNames: ReadonlyArray<Scalars['String']>;
  readonly csvProductImportJobsCount: Scalars['Int'];
  readonly csvProductTemplateWithTaxonomyColumnNames?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly csvShippingHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly csvTitleImagesDescriptionHeaderNames: ReadonlyArray<Scalars['String']>;
  readonly gtinProductService: GtinProductServiceSchema;
  readonly product?: Maybe<ProductSchema>;
  readonly productCategoryTaxonomyTreeJson: Scalars['JSONString'];
  readonly productCount: Scalars['Int'];
  readonly productCountV2: Scalars['Int'];
  readonly products: ReadonlyArray<ProductSchema>;
  readonly productsV2: ReadonlyArray<ProductSchema>;
  readonly upcProductService: UpcProductServiceSchema;
  readonly variation?: Maybe<VariationSchema>;
  readonly variationCount?: Maybe<Scalars['Int']>;
  readonly variations: ReadonlyArray<VariationSchema>;
  readonly videoService: ProductVideoServiceSchema;
};


export type ProductCatalogSchemaBulkCsvProductImportJobsArgs = {
  feedType?: InputMaybe<ProductCsvJobType>;
  limit?: Scalars['Int'];
  offset?: Scalars['Int'];
};


export type ProductCatalogSchemaCsvAllHeaderNamesArgs = {
  subcategoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
};


export type ProductCatalogSchemaCsvEditVariationsHeaderNamesArgs = {
  subcategoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
};


export type ProductCatalogSchemaCsvProductImportJobsCountArgs = {
  feedType?: InputMaybe<ProductCsvJobType>;
};


export type ProductCatalogSchemaCsvProductTemplateWithTaxonomyColumnNamesArgs = {
  categoryId: Scalars['Int'];
  treeVersion: Scalars['String'];
};


export type ProductCatalogSchemaProductArgs = {
  id?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
};


export type ProductCatalogSchemaProductCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  productStatuses?: InputMaybe<ReadonlyArray<CommerceProductStatus>>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  shippingProfileIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  shippingTypes?: InputMaybe<ReadonlyArray<WarehouseShippingType>>;
  videoLinkEnabled?: InputMaybe<Scalars['Boolean']>;
  videoStates?: InputMaybe<ReadonlyArray<ProductVideoState>>;
};


export type ProductCatalogSchemaProductCountV2Args = {
  fpReviewStatus?: InputMaybe<ProductFpReviewStatus>;
  hasBrand?: InputMaybe<Scalars['Boolean']>;
  isCleanImage?: InputMaybe<Scalars['Boolean']>;
  isEnabled?: InputMaybe<Scalars['Boolean']>;
  isPromoted?: InputMaybe<Scalars['Boolean']>;
  isReturnEnrolled?: InputMaybe<Scalars['Boolean']>;
  isWishExpress?: InputMaybe<Scalars['Boolean']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  state?: InputMaybe<ProductListingState>;
};


export type ProductCatalogSchemaProductsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  productStatuses?: InputMaybe<ReadonlyArray<CommerceProductStatus>>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  shippingProfileIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  shippingTypes?: InputMaybe<ReadonlyArray<WarehouseShippingType>>;
  sort?: InputMaybe<ProductSort>;
  videoId?: InputMaybe<Scalars['ObjectIdType']>;
  videoLinkEnabled?: InputMaybe<Scalars['Boolean']>;
  videoStates?: InputMaybe<ReadonlyArray<ProductVideoState>>;
};


export type ProductCatalogSchemaProductsV2Args = {
  fpReviewStatus?: InputMaybe<ProductFpReviewStatus>;
  hasBrand?: InputMaybe<Scalars['Boolean']>;
  isCleanImage?: InputMaybe<Scalars['Boolean']>;
  isEnabled?: InputMaybe<Scalars['Boolean']>;
  isPromoted?: InputMaybe<Scalars['Boolean']>;
  isReturnEnrolled?: InputMaybe<Scalars['Boolean']>;
  isWishExpress?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  sort?: InputMaybe<ProductSort>;
  state?: InputMaybe<ProductListingState>;
};


export type ProductCatalogSchemaVariationArgs = {
  id?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
};


export type ProductCatalogSchemaVariationCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<VariationSearchType>;
};


export type ProductCatalogSchemaVariationsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<VariationSearchType>;
  sort?: InputMaybe<VariationSort>;
};

export type ProductCategorization = {
  readonly __typename?: 'ProductCategorization';
  readonly categorizationSource: CategorizationSource;
  readonly categorizationUser?: Maybe<UserSchema>;
  readonly category: TaxonomyCategorySchema;
  readonly categoryTreeId: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly productId: Scalars['ObjectIdType'];
  readonly timestamp: Datetime;
};

export type ProductCategoryDisputeAction =
  | 'CREATE'
  | 'MARK_UNCHANGE'
  | 'MARK_UPDATE';

export type ProductCategoryDisputeAdminUnchangedReason =
  | 'CORRECT_TAGGED'
  | 'IMAGE_MISMATCH'
  | 'OTHER'
  | 'PROPOSED_TAG_IS_INAPPROPRIATE';

export type ProductCategoryDisputeEligibility =
  | 'ELIGIBLE'
  | 'INELIGIBLE'
  | 'OUT_OF_QUOTA';

export type ProductCategoryDisputeHub = {
  readonly __typename?: 'ProductCategoryDisputeHub';
  readonly dispute?: Maybe<ProductCategoryDisputeSchema>;
  readonly disputeCount?: Maybe<Scalars['Int']>;
  readonly disputes?: Maybe<ReadonlyArray<ProductCategoryDisputeSchema>>;
  readonly reasons?: Maybe<ReadonlyArray<ProductCategoryDisputeReasonSchema>>;
};


export type ProductCategoryDisputeHubDisputeArgs = {
  id: Scalars['ObjectIdType'];
};


export type ProductCategoryDisputeHubDisputeCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductCategoryDisputeSearchType>;
  states: ReadonlyArray<ProductCategoryDisputeStatus>;
};


export type ProductCategoryDisputeHubDisputesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductCategoryDisputeSearchType>;
  states: ReadonlyArray<ProductCategoryDisputeStatus>;
};


export type ProductCategoryDisputeHubReasonsArgs = {
  source: ProductCategoryDisputeSource;
};

export type ProductCategoryDisputeMutations = {
  readonly __typename?: 'ProductCategoryDisputeMutations';
  readonly upsertProductCategoryDispute?: Maybe<UpsertProductCategoryDispute>;
};


export type ProductCategoryDisputeMutationsUpsertProductCategoryDisputeArgs = {
  input?: InputMaybe<UpsertProductCategoryDisputeInput>;
};

export type ProductCategoryDisputeReason =
  | 'INCORRECT_TAG'
  | 'OTHERS';

export type ProductCategoryDisputeReasonSchema = {
  readonly __typename?: 'ProductCategoryDisputeReasonSchema';
  readonly reason: ProductCategoryDisputeReason;
  readonly text: Scalars['String'];
};

export type ProductCategoryDisputeSchema = {
  readonly __typename?: 'ProductCategoryDisputeSchema';
  readonly adminActionId?: Maybe<Scalars['ObjectIdType']>;
  readonly adminUnchangedOtherReasonDetails?: Maybe<Scalars['String']>;
  readonly adminUnchangedReason?: Maybe<ProductCategoryDisputeAdminUnchangedReason>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastUpdate?: Maybe<Datetime>;
  readonly merchant: MerchantSchema;
  readonly merchantNote?: Maybe<Scalars['String']>;
  readonly product: ProductSchema;
  readonly reason?: Maybe<ProductCategoryDisputeReasonSchema>;
  readonly source: ProductCategoryDisputeSource;
  readonly status: ProductCategoryDisputeStatus;
  readonly supportedFiles?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly trueTags?: Maybe<ReadonlyArray<TrueTagSchema>>;
};


export type ProductCategoryDisputeSchemaTrueTagsArgs = {
  state?: InputMaybe<ProductCategoryDisputeTrueTagState>;
};

export type ProductCategoryDisputeSearchType =
  | 'DISPUTE_ID'
  | 'MERCHANT_ID'
  | 'PRODUCT_ID';

export type ProductCategoryDisputeSource =
  | 'EU_COMPLIANCE'
  | 'PRODUCT_CATELOG';

export type ProductCategoryDisputeStatus =
  | 'PENDING_REVIEW'
  | 'RESOLVED_UNCHANGED'
  | 'RESOLVED_UPDATE';

export type ProductCategoryDisputeTrueTagState =
  | 'APPROVED'
  | 'DISPUTED'
  | 'PROPOSED';

export type ProductComplianceDocumentInput = {
  readonly delete: Scalars['Boolean'];
  readonly documentLabel: Scalars['String'];
  readonly fileExtension: Scalars['String'];
  readonly fileName: Scalars['String'];
  readonly productId: Scalars['ObjectIdType'];
  readonly sourceUrl: Scalars['String'];
};

export type ProductComplianceDocumentSchema = {
  readonly __typename?: 'ProductComplianceDocumentSchema';
  readonly documentLabel: Scalars['String'];
  readonly fileName: Scalars['String'];
  readonly fileUrl: Scalars['String'];
};

export type ProductComplianceMutations = {
  readonly __typename?: 'ProductComplianceMutations';
  readonly deCompliance?: Maybe<GermanyComplianceMutations>;
  readonly euCompliance?: Maybe<EuComplianceMutations>;
  readonly extendedProducerResponsibility?: Maybe<EprMutations>;
  readonly frCompliance?: Maybe<FranceComplianceMutations>;
};

export type ProductComplianceSchema = {
  readonly __typename?: 'ProductComplianceSchema';
  readonly allEuComplianceCategories?: Maybe<ReadonlyArray<EuProductComplianceCategory>>;
  readonly allMsrCategories?: Maybe<ReadonlyArray<MsrCategory>>;
  readonly euComplianceInScope: Scalars['Boolean'];
  readonly extendedProducerResponsibility: ExtendedProducerResponsibilitySchema;
  readonly franceProductUniqueIdentificationNumberCount?: Maybe<Scalars['Int']>;
  readonly franceProductUniqueIdentificationNumbers?: Maybe<ReadonlyArray<FranceProductUniqueIdentificationNumberSchema>>;
  readonly germanyProductUniqueIdentificationNumberCount?: Maybe<Scalars['Int']>;
  readonly germanyProductUniqueIdentificationNumbers?: Maybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberSchema>>;
  readonly linkCount?: Maybe<Scalars['Int']>;
  readonly links?: Maybe<ReadonlyArray<LinkProductComplianceSchema>>;
  readonly productDestinationCountries: ReadonlyArray<Country>;
  readonly responsiblePersonCount?: Maybe<Scalars['Int']>;
  readonly responsiblePersonRejectReasons: ReadonlyArray<ResponsiblePersonRejectReasonSchema>;
  readonly responsiblePersons?: Maybe<ReadonlyArray<ResponsiblePersonSchema>>;
  readonly rpValidCountries: ReadonlyArray<EuComplianceResponsiblePersonCountriesAndRegions>;
};


export type ProductComplianceSchemaFranceProductUniqueIdentificationNumberCountArgs = {
  category?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberCategory>>;
  states?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberStatus>>;
};


export type ProductComplianceSchemaFranceProductUniqueIdentificationNumbersArgs = {
  category?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberCategory>>;
  states?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberStatus>>;
};


export type ProductComplianceSchemaGermanyProductUniqueIdentificationNumberCountArgs = {
  categories?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberCategory>>;
  states?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberStatus>>;
};


export type ProductComplianceSchemaGermanyProductUniqueIdentificationNumbersArgs = {
  categories?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberCategory>>;
  states?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberStatus>>;
};


export type ProductComplianceSchemaLinkCountArgs = {
  categories?: InputMaybe<ReadonlyArray<MsrCategory>>;
  complianceTypes?: InputMaybe<ReadonlyArray<LinkProductComplianceType>>;
  euComplianceCategories?: InputMaybe<ReadonlyArray<EuProductComplianceCategory>>;
  franceUinCategories?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberCategory>>;
  germanyUinCategories?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberCategory>>;
  isLinkedWithFranceUin?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithFranceUinCategories?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithGermanyUin?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithGermanyUinCategories?: InputMaybe<Scalars['Boolean']>;
  query?: InputMaybe<Scalars['String']>;
  responsiblePersonIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  searchType?: InputMaybe<ProductComplianceSearchType>;
  states?: InputMaybe<ReadonlyArray<LinkProductComplianceState>>;
};


export type ProductComplianceSchemaLinksArgs = {
  categories?: InputMaybe<ReadonlyArray<MsrCategory>>;
  complianceTypes?: InputMaybe<ReadonlyArray<LinkProductComplianceType>>;
  euComplianceCategories?: InputMaybe<ReadonlyArray<EuProductComplianceCategory>>;
  franceUinCategories?: InputMaybe<ReadonlyArray<FranceProductUniqueIdentificationNumberCategory>>;
  germanyUinCategories?: InputMaybe<ReadonlyArray<GermanyProductUniqueIdentificationNumberCategory>>;
  isLinkedWithFranceUin?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithFranceUinCategories?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithGermanyUin?: InputMaybe<Scalars['Boolean']>;
  isLinkedWithGermanyUinCategories?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  responsiblePersonIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  searchType?: InputMaybe<ProductComplianceSearchType>;
  states?: InputMaybe<ReadonlyArray<LinkProductComplianceState>>;
};


export type ProductComplianceSchemaResponsiblePersonCountArgs = {
  complianceType: LinkProductComplianceType;
  states?: InputMaybe<ReadonlyArray<ResponsiblePersonStatus>>;
};


export type ProductComplianceSchemaResponsiblePersonsArgs = {
  complianceType: LinkProductComplianceType;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ResponsiblePersonSort>;
  states?: InputMaybe<ReadonlyArray<ResponsiblePersonStatus>>;
};

export type ProductComplianceSearchType =
  | 'PRODUCT_ID';

export type ProductConstantsSchema = {
  readonly __typename?: 'ProductConstantsSchema';
  readonly prop65Chemicals: ReadonlyArray<Scalars['String']>;
};

export type ProductCountryBlockSchema = {
  readonly __typename?: 'ProductCountryBlockSchema';
  readonly countriesBlocked?: Maybe<ReadonlyArray<Country>>;
  readonly productId: Scalars['ObjectIdType'];
};

export type ProductDailyPerformanceSchema = {
  readonly __typename?: 'ProductDailyPerformanceSchema';
  readonly addToCart?: Maybe<Scalars['Int']>;
  readonly averageCostOfSaleCalculated?: Maybe<Scalars['Float']>;
  readonly conversionRate?: Maybe<Scalars['Float']>;
  readonly date: Datetime;
  readonly gmv?: Maybe<CurrencyValue>;
  readonly orders?: Maybe<Scalars['Int']>;
  readonly productDetailPageView?: Maybe<Scalars['Int']>;
};

export type ProductFpReviewStatus =
  | 'APPROVED'
  | 'BLOCKED'
  | 'UNDER_REVIEW';

export type ProductInteractionStats = {
  readonly __typename?: 'ProductInteractionStats';
  readonly clicks: Scalars['Int'];
  readonly country?: Maybe<Country>;
  readonly eventTime: Datetime;
  readonly gender?: Maybe<Gender>;
  readonly impressions: Scalars['Int'];
};

export type ProductListingFeeDetailsSchema = {
  readonly __typename?: 'ProductListingFeeDetailsSchema';
  readonly currentProductMax?: Maybe<Scalars['Int']>;
  readonly priceBreakdownPerTier?: Maybe<ReadonlyArray<ProductTierPriceSchema>>;
  readonly productMetrics?: Maybe<ProductListingPlanMonthlyProductMetrics>;
  readonly productMetricsBenchmark?: Maybe<ProductListingPlanMonthlyProductMetricsBenchmark>;
  readonly snapshotDate: Datetime;
};

export type ProductListingPlanHub = {
  readonly __typename?: 'ProductListingPlanHub';
  readonly bill: ProductListingFeeDetailsSchema;
  readonly productTotal: ReadonlyArray<ProductListingPlanProductMetrics>;
};


export type ProductListingPlanHubBillArgs = {
  date: DatetimeInput;
};


export type ProductListingPlanHubProductTotalArgs = {
  endDate: DatetimeInput;
  startDate: DatetimeInput;
};

export type ProductListingPlanMonthlyProductMetrics = {
  readonly __typename?: 'ProductListingPlanMonthlyProductMetrics';
  readonly date: Datetime;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly totalProduct: Scalars['Int'];
  readonly totalProductWithImpression: Scalars['Int'];
  readonly totalProductWithSale: Scalars['Int'];
};

export type ProductListingPlanMonthlyProductMetricsBenchmark = {
  readonly __typename?: 'ProductListingPlanMonthlyProductMetricsBenchmark';
  readonly avgImpressionRatio: Scalars['Float'];
  readonly avgSaleRatio: Scalars['Float'];
  readonly date: Datetime;
};

export type ProductListingPlanProductMetrics = {
  readonly __typename?: 'ProductListingPlanProductMetrics';
  readonly count?: Maybe<Scalars['Int']>;
  readonly date: Datetime;
};

export type ProductListingPlanTier =
  | 'TIER_ONE'
  | 'TIER_THREE'
  | 'TIER_TWO';

export type ProductListingState =
  | 'ACTIVE'
  | 'MERCHANT_INACTIVE'
  | 'REMOVED_BY_MERCHANT'
  | 'REMOVED_BY_WISH'
  | 'WISH_INACTIVE';

export type ProductListingTierSchema = {
  readonly __typename?: 'ProductListingTierSchema';
  readonly higherBound: Scalars['Int'];
  readonly lowerBound: Scalars['Int'];
  readonly price: CurrencyValue;
  readonly tier: ProductListingPlanTier;
};

export type ProductOrderStats = {
  readonly __typename?: 'ProductOrderStats';
  readonly country?: Maybe<Country>;
  readonly eventTime: Datetime;
  readonly gender?: Maybe<Gender>;
  readonly gmv: CurrencyValue;
  readonly merchantGmv?: Maybe<CurrencyValue>;
  readonly orders: Scalars['Int'];
};

export type ProductPerformanceSchema = {
  readonly __typename?: 'ProductPerformanceSchema';
  readonly daily: ReadonlyArray<ProductDailyPerformanceSchema>;
  readonly endDate: Datetime;
  readonly startDate: Datetime;
  readonly totalAddToCart: Scalars['Int'];
  readonly totalAverageCostOfSaleCalculated?: Maybe<Scalars['Float']>;
  readonly totalConversionRate: Scalars['Float'];
  readonly totalGmv: CurrencyValue;
  readonly totalOrders: Scalars['Int'];
  readonly totalProductDetailPageView: Scalars['Int'];
};


export type ProductPerformanceSchemaDailyArgs = {
  endDate: DatetimeInput;
  startDate: DatetimeInput;
};

export type ProductPerformanceStats = {
  readonly __typename?: 'ProductPerformanceStats';
  readonly activeProducts?: Maybe<Scalars['Int']>;
  readonly activeSkus?: Maybe<Scalars['Int']>;
  readonly averageAdditonalImagesPerProduct?: Maybe<Scalars['Float']>;
  readonly averagePrice?: Maybe<CurrencyValue>;
  readonly averageShippingPrice?: Maybe<CurrencyValue>;
  readonly endDate: Datetime;
  readonly gmv: CurrencyValue;
  readonly priceToShippingRatio?: Maybe<Scalars['Float']>;
  readonly productImpressions?: Maybe<Scalars['BigInt']>;
  readonly skusPerProduct?: Maybe<Scalars['Float']>;
  readonly startDate: Datetime;
};

export type ProductPostErrorCode =
  | 'CONFLICTING_PARAMETERS'
  | 'IDENTIFIER_ALREADY_IN_USE'
  | 'ILLEGAL_CHARACTER'
  | 'INVALID_MERCHANT_ID'
  | 'INVALID_PARAMETER'
  | 'INVALID_PRODUCT_ID'
  | 'INVALID_PRODUCT_VIDEO_ID'
  | 'INVALID_RULES'
  | 'INVALID_VIDEO'
  | 'INVALID_VIDEO_ID'
  | 'LIMIT_IS_ZERO'
  | 'MISSING_PARAMETER'
  | 'NO_ERROR'
  | 'RECORD_NOT_FOUND'
  | 'REQUEST_TOO_LARGE'
  | 'VIDEO_NOT_FOUND';

export type ProductPostsMutations = {
  readonly __typename?: 'ProductPostsMutations';
  readonly add: AddProductPostMutation;
  readonly delete: DeleteProductPostsMutation;
};


export type ProductPostsMutationsAddArgs = {
  input: AddProductPostInput;
};


export type ProductPostsMutationsDeleteArgs = {
  input: DeleteProductPostsInput;
};

export type ProductPredictedCategory = {
  readonly __typename?: 'ProductPredictedCategory';
  readonly categorizationSource: CategorizationSource;
  readonly category: TaxonomyCategorySchema;
  readonly categoryTreeId: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly lastUpdated: Datetime;
  readonly productId: Scalars['ObjectIdType'];
};

export type ProductPromotionDailyStats = {
  readonly __typename?: 'ProductPromotionDailyStats';
  readonly date: Datetime;
  readonly gmv?: Maybe<CurrencyValue>;
  readonly impressions?: Maybe<Scalars['Int']>;
  readonly promotionBudget?: Maybe<CurrencyValue>;
  readonly promotionSpending?: Maybe<CurrencyValue>;
  readonly promotionStatus: ProductPromotionStatus;
  readonly sales?: Maybe<Scalars['Int']>;
};

export type ProductPromotionLifetimeStats = {
  readonly __typename?: 'ProductPromotionLifetimeStats';
  readonly gmv: CurrencyValue;
  readonly sales: Scalars['Int'];
  readonly spend: CurrencyValue;
};

export type ProductPromotionPeriodStats = {
  readonly __typename?: 'ProductPromotionPeriodStats';
  readonly dailyStats: ReadonlyArray<ProductPromotionDailyStats>;
  readonly endDate: Datetime;
  readonly startDate: Datetime;
  readonly totalGmv: CurrencyValue;
  readonly totalImpressions: Scalars['Int'];
  readonly totalPromotionSpending: CurrencyValue;
  readonly totalSales: Scalars['Int'];
};

export type ProductPromotionRefundAssurance = {
  readonly __typename?: 'ProductPromotionRefundAssurance';
  readonly monthlyStats: ReadonlyArray<ProductPromotionRefundAssuranceStats>;
  readonly topLevelStats: ProductPromotionRefundAssuranceStats;
};

export type ProductPromotionRefundAssuranceCreditReceivedStatus =
  | 'DONE'
  | 'PENDING';

export type ProductPromotionRefundAssuranceStats = {
  readonly __typename?: 'ProductPromotionRefundAssuranceStats';
  readonly advancedLogisticsGmv?: Maybe<CurrencyValue>;
  readonly advancedLogisticsOrdersCount?: Maybe<Scalars['Int']>;
  readonly creditIssued?: Maybe<CurrencyValue>;
  readonly creditIssuedStatus?: Maybe<ProductPromotionRefundAssuranceCreditReceivedStatus>;
  readonly month?: Maybe<Datetime>;
  readonly refundAdvancedLogisticsGmv?: Maybe<CurrencyValue>;
  readonly refundRate?: Maybe<Scalars['Float']>;
  readonly refundedAdvancedLogisticsOrdersCount?: Maybe<Scalars['Int']>;
  readonly spend?: Maybe<CurrencyValue>;
};

export type ProductPromotionRefundAssuranceType =
  | 'ELIGIBLE'
  | 'OTHER';

export type ProductPromotionSchema = {
  readonly __typename?: 'ProductPromotionSchema';
  readonly dailyPromotionBudget: CurrencyValue;
  readonly intenseBoost?: Maybe<Scalars['Boolean']>;
  readonly lastUpdateDate?: Maybe<Datetime>;
  readonly lifetimeStats: ProductPromotionLifetimeStats;
  readonly periodStats: ProductPromotionPeriodStats;
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
  readonly promotionStatus: ProductPromotionStatus;
  readonly refundAssurance: ProductPromotionRefundAssurance;
};


export type ProductPromotionSchemaPeriodStatsArgs = {
  endTime: DatetimeInput;
  startTime: DatetimeInput;
};

export type ProductPromotionSearchType =
  | 'ID'
  | 'NAME'
  | 'SKU';

export type ProductPromotionStatus =
  | 'ACTIVE'
  | 'INACTIVE'
  | 'OUT_OF_BALANCE';

export type ProductRating = {
  readonly __typename?: 'ProductRating';
  readonly average30dRating?: Maybe<Scalars['Float']>;
  readonly productId?: Maybe<Scalars['String']>;
  readonly ratings?: Maybe<Scalars['Int']>;
  readonly sales?: Maybe<Scalars['Int']>;
};

export type ProductRatingListingTab =
  | 'BestRated'
  | 'MostReviewed'
  | 'WorstRated';

export type ProductSchema = {
  readonly __typename?: 'ProductSchema';
  readonly analyticsService: ProductAnalyticsSchema;
  readonly attributes?: Maybe<ReadonlyArray<MerchantProvidedAttributeSchema>>;
  readonly categories?: Maybe<ReadonlyArray<TrueTagSchema>>;
  readonly categoryExperienceEligibility?: Maybe<Scalars['Boolean']>;
  readonly chemicalNames?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly condition?: Maybe<CommerceProductCondition>;
  readonly consignmentOriginalPid?: Maybe<Scalars['ObjectIdType']>;
  readonly countryBlocks?: Maybe<ReadonlyArray<ProductCountryBlockSchema>>;
  readonly createTime: Datetime;
  readonly demoVideo?: Maybe<ProductVideo>;
  readonly description: Scalars['String'];
  readonly eligibleForCategoryDispute?: Maybe<ProductCategoryDisputeEligibility>;
  readonly enabled: Scalars['Boolean'];
  readonly extraImages?: Maybe<ReadonlyArray<ImageSchema>>;
  readonly flatRateShippingCountryCandidates?: Maybe<ReadonlyArray<FlatRateShippingCountryCandidate>>;
  readonly fpReviewStatus: CommerceProductFpReviewStatus;
  readonly fpWorkflow?: Maybe<FeedProcessingWorkflowSchema>;
  readonly hasBrand?: Maybe<Scalars['Boolean']>;
  readonly id: Scalars['ObjectIdType'];
  readonly infractions: ReadonlyArray<InfractionSchema>;
  readonly invalidCategoryNote?: Maybe<Scalars['String']>;
  readonly isConsignmentEligible?: Maybe<Scalars['Boolean']>;
  readonly isEuCompliant: Scalars['Boolean'];
  readonly isLtl?: Maybe<Scalars['Boolean']>;
  readonly isPromoted: Scalars['Boolean'];
  readonly isRemoved: Scalars['Boolean'];
  readonly isRemovedByMerchant: Scalars['Boolean'];
  readonly isRemovedByWish: Scalars['Boolean'];
  readonly isReturnsEnabled?: Maybe<Scalars['Boolean']>;
  readonly isUnityBlacklisted: Scalars['Boolean'];
  readonly isUnityPendingStandardWarehouse: Scalars['Boolean'];
  readonly isWishExpress: Scalars['Boolean'];
  readonly l1Category?: Maybe<TaxonomyCategorySchema>;
  readonly lastUpdateTime: Datetime;
  readonly listingState: ListingStateSchema;
  readonly mainImage: ImageSchema;
  readonly maxQuantity?: Maybe<Scalars['Int']>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly msrp?: Maybe<CurrencyValue>;
  readonly name: Scalars['String'];
  readonly performance?: Maybe<ProductPerformanceSchema>;
  readonly productComplianceDocuments?: Maybe<ReadonlyArray<ProductComplianceDocumentSchema>>;
  readonly productTrueTagInfo?: Maybe<ProductTrueTagInfoSchema>;
  readonly referenceArea?: Maybe<Area>;
  readonly referenceLength?: Maybe<Length>;
  readonly referenceUnit?: Maybe<Count>;
  readonly referenceVolume?: Maybe<Volume>;
  readonly referenceWeight?: Maybe<Weight>;
  readonly requestedBrand?: Maybe<BrandSchema>;
  readonly requestedBrandId?: Maybe<Scalars['ObjectIdType']>;
  readonly reviewStatus: CommerceProductReviewStatus;
  readonly sales: Scalars['Int'];
  readonly shipping: ShippingSchema;
  readonly shippingProfile?: Maybe<ShippingProfileSchema>;
  readonly sku?: Maybe<Scalars['String']>;
  readonly smallPictureUrl: Scalars['String'];
  readonly stats: ProductStats;
  readonly subcategory?: Maybe<TaxonomyCategorySchema>;
  readonly subcategoryId?: Maybe<Scalars['Int']>;
  readonly tags: ReadonlyArray<Scalars['String']>;
  readonly taxonomyCategory?: Maybe<TaxonomyCategorySchema>;
  readonly totalGmv: CurrencyValue;
  readonly totalInventory: Scalars['Int'];
  readonly trueTags?: Maybe<ReadonlyArray<TrueTagSchema>>;
  readonly unityEffectiveDateStandardWarehouse?: Maybe<Datetime>;
  readonly upc?: Maybe<Scalars['String']>;
  readonly variationCount: Scalars['Int'];
  readonly variationOptions?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly variations: ReadonlyArray<VariationSchema>;
  readonly warningType?: Maybe<ContestWarningType>;
  readonly wishes: Scalars['Int'];
};


export type ProductSchemaDemoVideoArgs = {
  useGroupings?: InputMaybe<Scalars['Boolean']>;
};


export type ProductSchemaPerformanceArgs = {
  endDate: DatetimeInput;
  startDate: DatetimeInput;
};


export type ProductSchemaShippingArgs = {
  warehouseId?: InputMaybe<Scalars['String']>;
};


export type ProductSchemaVariationsArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};

export type ProductSearchType =
  | 'ID'
  | 'NAME'
  | 'PARENTSKU'
  | 'SKU';

export type ProductSort = {
  readonly field: ProductSortField;
  readonly order: SortOrderType;
};

export type ProductSortField =
  | 'ID'
  | 'LAST_UPDATE'
  | 'SALES'
  | 'SKU';

export type ProductStats = {
  readonly __typename?: 'ProductStats';
  readonly daily: ReadonlyArray<ProductTotalStats>;
  readonly totals: ProductTotalStats;
  readonly weekly?: Maybe<ProductWeeklyStats>;
};


export type ProductStatsDailyArgs = {
  coreMetricsOnly?: InputMaybe<Scalars['Boolean']>;
  days: Scalars['Int'];
};


export type ProductStatsTotalsArgs = {
  coreMetricsOnly?: InputMaybe<Scalars['Boolean']>;
  days: Scalars['Int'];
};


export type ProductStatsWeeklyArgs = {
  weeksFromTheLatest?: InputMaybe<Scalars['Int']>;
};

export type ProductTaggingStatusSchema = {
  readonly __typename?: 'ProductTaggingStatusSchema';
  readonly imageChangeMlTaggerJobs?: Maybe<ReadonlyArray<ImageChangeMlTaggerJobSchema>>;
  readonly productCategorizationHistory: ReadonlyArray<ProductCategorization>;
  readonly productPredictedCategory?: Maybe<ProductPredictedCategory>;
};

export type ProductTaxonomyCategoryDisputeAdminUnchangedReason =
  | 'CORRECTLY_TAGGED'
  | 'IMAGE_MISMATCH'
  | 'OTHER';

export type ProductTaxonomyCategoryDisputeEligibilityEnum =
  | 'ELIGIBLE'
  | 'MERCHANT_MONTHLY_DISPUTE_QUOTA_EXCEEDED'
  | 'PRODUCT_LIFETIME_DISPUTE_QUOTA_EXCEEDED'
  | 'PRODUCT_NOT_ACTIVE'
  | 'PRODUCT_NOT_CATEGORIZED';

export type ProductTaxonomyCategoryDisputeHub = {
  readonly __typename?: 'ProductTaxonomyCategoryDisputeHub';
  readonly dispute?: Maybe<ProductTaxonomyCategoryDisputeSchema>;
  readonly disputeCount: Scalars['Int'];
  readonly disputes: ReadonlyArray<ProductTaxonomyCategoryDisputeSchema>;
  readonly productDisputeEligibility?: Maybe<ProductTaxonomyCategoryDisputeEligibilityEnum>;
};


export type ProductTaxonomyCategoryDisputeHubDisputeArgs = {
  disputeId?: InputMaybe<Scalars['ObjectIdType']>;
  productId?: InputMaybe<Scalars['ObjectIdType']>;
};


export type ProductTaxonomyCategoryDisputeHubDisputeCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  states?: InputMaybe<ReadonlyArray<ProductTaxonomyCategoryDisputeState>>;
};


export type ProductTaxonomyCategoryDisputeHubDisputesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  states?: InputMaybe<ReadonlyArray<ProductTaxonomyCategoryDisputeState>>;
};


export type ProductTaxonomyCategoryDisputeHubProductDisputeEligibilityArgs = {
  productId: Scalars['ObjectIdType'];
};

export type ProductTaxonomyCategoryDisputeSchema = {
  readonly __typename?: 'ProductTaxonomyCategoryDisputeSchema';
  readonly adminNote?: Maybe<Scalars['String']>;
  readonly adminUnchangedReason?: Maybe<ProductTaxonomyCategoryDisputeAdminUnchangedReason>;
  readonly categoryApproved?: Maybe<TaxonomyCategorySchema>;
  readonly categoryDisputed: TaxonomyCategorySchema;
  readonly categoryProposed: TaxonomyCategorySchema;
  readonly datetimeCreated: Datetime;
  readonly datetimeResolved?: Maybe<Datetime>;
  readonly id: Scalars['ObjectIdType'];
  readonly merchant: MerchantSchema;
  readonly merchantNote?: Maybe<Scalars['String']>;
  readonly product: ProductSchema;
  readonly state: ProductTaxonomyCategoryDisputeState;
  readonly supportFiles?: Maybe<ReadonlyArray<MerchantFileSchema>>;
};

export type ProductTaxonomyCategoryDisputeState =
  | 'PENDING_REVIEW'
  | 'RESOLVED_UNCHANGED'
  | 'RESOLVED_UPDATED';

export type ProductTierPriceSchema = {
  readonly __typename?: 'ProductTierPriceSchema';
  readonly price: CurrencyValue;
  readonly productCount: Scalars['Int'];
  readonly tier: ProductListingPlanTier;
};

export type ProductTotalStats = {
  readonly __typename?: 'ProductTotalStats';
  readonly endDate: Datetime;
  readonly gmv: CurrencyValue;
  readonly impressions: Scalars['BigInt'];
  readonly orders: Scalars['Int'];
  readonly startDate: Datetime;
};

export type ProductTrueTagInfoSchema = {
  readonly __typename?: 'ProductTrueTagInfoSchema';
  readonly counterfeitLastTagged?: Maybe<Datetime>;
  readonly counterfeitViolation: CounterfeitViolationSchema;
  readonly inappropriateLastTagged?: Maybe<Datetime>;
  readonly inappropriateViolation: InappropriateViolationSchema;
  readonly subreason?: Maybe<TaggingViolationSubcategory>;
};

export type ProductUpsertInput = {
  readonly attributes?: InputMaybe<ReadonlyArray<AttributeInput>>;
  readonly chemicalNames?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly condition?: InputMaybe<CommerceProductCondition>;
  readonly consignmentOriginalPid?: InputMaybe<Scalars['ObjectIdType']>;
  readonly countryShipping?: InputMaybe<ReadonlyArray<WarehouseCountryShippingInput>>;
  readonly defaultShipping?: InputMaybe<ReadonlyArray<DefaultShippingInput>>;
  readonly demoVideoSourceUrl?: InputMaybe<Scalars['String']>;
  readonly description?: InputMaybe<Scalars['String']>;
  readonly domesticShipping?: InputMaybe<ReadonlyArray<DomesticShippingInput>>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly images?: InputMaybe<ReadonlyArray<ImageInput>>;
  readonly isConsignmentEligible?: InputMaybe<Scalars['Boolean']>;
  readonly maxQuantity?: InputMaybe<Scalars['Int']>;
  readonly msrp?: InputMaybe<CurrencyInput>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly referenceArea?: InputMaybe<AreaInput>;
  readonly referenceLength?: InputMaybe<LengthInput>;
  readonly referenceUnit?: InputMaybe<CountInput>;
  readonly referenceVolume?: InputMaybe<VolumeInput>;
  readonly referenceWeight?: InputMaybe<WeightInput>;
  readonly requestedBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly shippingProfile?: InputMaybe<ShippingProfileUpsertInput>;
  readonly shippingProfileId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly sku?: InputMaybe<Scalars['String']>;
  readonly subcategoryId?: InputMaybe<Scalars['Int']>;
  readonly tags?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly upc?: InputMaybe<Scalars['String']>;
  readonly variations?: InputMaybe<ReadonlyArray<VariationInput>>;
  readonly warehouseId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly warningType?: InputMaybe<ContestWarningType>;
};

export type ProductVideo = {
  readonly __typename?: 'ProductVideo';
  readonly audio?: Maybe<ProductVideoAudio>;
  readonly audioStartTime?: Maybe<Scalars['Float']>;
  readonly averageWatchTime?: Maybe<Scalars['Float']>;
  readonly description?: Maybe<Scalars['String']>;
  readonly highQuality?: Maybe<RaccVideoAsset>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastUpdated?: Maybe<Datetime>;
  readonly likeCount?: Maybe<Scalars['Int']>;
  readonly lowQuality?: Maybe<RaccVideoAsset>;
  readonly mediumQuality?: Maybe<RaccVideoAsset>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly preview?: Maybe<RaccVideoAsset>;
  readonly productId: Scalars['ObjectIdType'];
  readonly rejectionReason?: Maybe<Scalars['String']>;
  readonly source: RaccVideoAsset;
  readonly state: ProductVideoState;
  readonly title?: Maybe<Scalars['String']>;
  readonly totalWatchTime?: Maybe<Scalars['Float']>;
  readonly uploadTime: Datetime;
  readonly videoSource?: Maybe<ProductVideoSource>;
  readonly viewCount?: Maybe<Scalars['Int']>;
};

export type ProductVideoAudio = {
  readonly __typename?: 'ProductVideoAudio';
  readonly duration: Scalars['Float'];
  readonly genres: ReadonlyArray<AudioGenre>;
  readonly id: Scalars['ObjectIdType'];
  readonly moodEmotion: ReadonlyArray<AudioMoodEmotion>;
  readonly productCategory: ReadonlyArray<AudioProductCategory>;
  readonly trackTitle: Scalars['String'];
  readonly url: Scalars['String'];
};

export type ProductVideoContentReviewTraits = {
  readonly containsMoreThanOneProduct?: InputMaybe<Scalars['Boolean']>;
  readonly hasEngravedNonEnglishText?: InputMaybe<Scalars['Boolean']>;
  readonly hasEngravedText?: InputMaybe<Scalars['Boolean']>;
  readonly hasFemale?: InputMaybe<Scalars['Boolean']>;
  readonly hasHatefulSymbol?: InputMaybe<Scalars['Boolean']>;
  readonly hasMale?: InputMaybe<Scalars['Boolean']>;
  readonly hasMerchantBranding?: InputMaybe<Scalars['Boolean']>;
  readonly hasMinor?: InputMaybe<Scalars['Boolean']>;
  readonly hasNudity?: InputMaybe<Scalars['Boolean']>;
  readonly hasObsceneGraphicContent?: InputMaybe<Scalars['Boolean']>;
  readonly hasPartialNudity?: InputMaybe<Scalars['Boolean']>;
  readonly hasPersonTalking?: InputMaybe<Scalars['Boolean']>;
  readonly hasSexualWellness?: InputMaybe<Scalars['Boolean']>;
  readonly hasUnverifiedOrMisleadingClaim?: InputMaybe<Scalars['Boolean']>;
  readonly hasWeapon?: InputMaybe<Scalars['Boolean']>;
  readonly isBlank?: InputMaybe<Scalars['Boolean']>;
  readonly isBlurry?: InputMaybe<Scalars['Boolean']>;
  readonly isFactoryVideo?: InputMaybe<Scalars['Boolean']>;
  readonly isImageSlideshow?: InputMaybe<Scalars['Boolean']>;
  readonly isScreenRecording?: InputMaybe<Scalars['Boolean']>;
  readonly isSensitiveVideo?: InputMaybe<Scalars['Boolean']>;
  readonly refersConsumerOffPlatform?: InputMaybe<Scalars['Boolean']>;
  readonly rotationIsIncorrect?: InputMaybe<Scalars['Boolean']>;
};

export type ProductVideoContentTagMutations = {
  readonly __typename?: 'ProductVideoContentTagMutations';
  readonly submitProductVideoContentManualReview?: Maybe<SubmitProductVideoContentManualReview>;
  readonly submitProductVideoContentReview?: Maybe<SubmitProductVideoContentReview>;
};


export type ProductVideoContentTagMutationsSubmitProductVideoContentManualReviewArgs = {
  input: SubmitProductVideoContentManualReviewInput;
};


export type ProductVideoContentTagMutationsSubmitProductVideoContentReviewArgs = {
  input: SubmitProductVideoContentReviewInput;
};

export type ProductVideoDailyStats = {
  readonly __typename?: 'ProductVideoDailyStats';
  readonly addToCart: Scalars['Int'];
  readonly avgWatchTime: Scalars['Float'];
  readonly buyerIntent: Scalars['Float'];
  readonly conversions: Scalars['Float'];
  readonly date: Datetime;
  readonly engagedViews: Scalars['Int'];
  readonly gmv?: Maybe<Scalars['Float']>;
  readonly likes?: Maybe<Scalars['Int']>;
  readonly views?: Maybe<Scalars['Int']>;
  readonly watchTime?: Maybe<Scalars['Float']>;
};

export type ProductVideoIpTagMutations = {
  readonly __typename?: 'ProductVideoIPTagMutations';
  readonly submitProductVideoIpManualReview?: Maybe<SubmitProductVideoIpManualReview>;
  readonly submitProductVideoIpReview?: Maybe<SubmitProductVideoIpReview>;
};


export type ProductVideoIpTagMutationsSubmitProductVideoIpManualReviewArgs = {
  input: SubmitProductVideoIpManualReviewInput;
};


export type ProductVideoIpTagMutationsSubmitProductVideoIpReviewArgs = {
  input: SubmitProductVideoIpReviewInput;
};

export type ProductVideoIpViolationReason =
  | 'BLURRED_INFORMATION'
  | 'COMMERCIAL'
  | 'COPYRIGHT_IMAGES'
  | 'COUNTERFEIT_OR_IP_VIOLATION'
  | 'EMBEDDED_LOGO'
  | 'PICTURED_WITH_MAJOR_BRAND'
  | 'UNKNOWN'
  | 'UNLICENSED_MEDIA';

export type ProductVideoServiceSchema = {
  readonly __typename?: 'ProductVideoServiceSchema';
  readonly audioCount: Scalars['Int'];
  readonly audios: ReadonlyArray<ProductVideoAudio>;
  readonly leaderboard?: Maybe<VideoLeaderboard>;
  readonly performance?: Maybe<VideoPerformance>;
  readonly recommendedAudios: ReadonlyArray<ProductVideoAudio>;
  readonly videoCount: Scalars['Int'];
  readonly videos: ReadonlyArray<ProductVideo>;
};


export type ProductVideoServiceSchemaAudioCountArgs = {
  genre?: InputMaybe<AudioGenre>;
  moodEmotion?: InputMaybe<AudioMoodEmotion>;
  productCategory?: InputMaybe<AudioProductCategory>;
  trackTitle?: InputMaybe<Scalars['String']>;
};


export type ProductVideoServiceSchemaAudiosArgs = {
  genre?: InputMaybe<AudioGenre>;
  limit?: InputMaybe<Scalars['Int']>;
  moodEmotion?: InputMaybe<AudioMoodEmotion>;
  offset?: InputMaybe<Scalars['Int']>;
  productCategory?: InputMaybe<AudioProductCategory>;
  trackTitle?: InputMaybe<Scalars['String']>;
};


export type ProductVideoServiceSchemaLeaderboardArgs = {
  category?: InputMaybe<VideoCategory>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
};


export type ProductVideoServiceSchemaPerformanceArgs = {
  endDate?: InputMaybe<DatetimeInput>;
  startDate?: InputMaybe<DatetimeInput>;
  videoId?: InputMaybe<Scalars['ObjectIdType']>;
};


export type ProductVideoServiceSchemaRecommendedAudiosArgs = {
  productCategory?: InputMaybe<AudioProductCategory>;
};


export type ProductVideoServiceSchemaVideoCountArgs = {
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<VideoSearchType>;
  videoStates?: InputMaybe<ReadonlyArray<ProductVideoState>>;
};


export type ProductVideoServiceSchemaVideosArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<VideoSearchType>;
  sort?: InputMaybe<VideoSort>;
  videoStates?: InputMaybe<ReadonlyArray<ProductVideoState>>;
};

export type ProductVideoSource =
  | 'INFLUENCER'
  | 'MERCHANT'
  | 'THIRD_PARTY';

export type ProductVideoState =
  | 'APPROVED'
  | 'FAILED_AUTO_REVIEW'
  | 'FAILED_OBJECT_DETECTION'
  | 'FAILED_REKOGNITION'
  | 'FAILED_TRANSCODE'
  | 'PENDING_AUTO_REVIEW'
  | 'PENDING_REKOGNITION'
  | 'PENDING_REVIEW'
  | 'PENDING_TRANSCODE'
  | 'REJECTED'
  | 'UNKNOWN_STATE';

export type ProductVideoTaggerJobSchema = {
  readonly __typename?: 'ProductVideoTaggerJobSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly product?: Maybe<ProductSchema>;
  readonly source: ProductVideoTaggerJobSource;
};

export type ProductVideoTaggerJobSource =
  | 'MANUAL_REVIEW'
  | 'MERCHANT_UPLOAD'
  | 'NOT_CAPTURED'
  | 'USER_REPORT';

export type ProductWeeklyStats = {
  readonly __typename?: 'ProductWeeklyStats';
  readonly cs: CsPerformanceStats;
  readonly endDate: Datetime;
  readonly refund: RefundPerformanceStats;
  readonly sales: SalesPerformanceStats;
  readonly startDate: Datetime;
};

export type ProductsCsvTemplateType =
  | 'ALL_COLUMNS'
  | 'CATEGORY'
  | 'CONTENT'
  | 'DEFAULT'
  | 'ENABLED'
  | 'PRICE_AND_INVENTORY'
  | 'SHIPPING';

export type PromotableProduct = {
  readonly __typename?: 'PromotableProduct';
  readonly isInTrendingCategory: Scalars['Boolean'];
  readonly product: ProductSchema;
};

export type PublicDsaMutations = {
  readonly __typename?: 'PublicDSAMutations';
  readonly createNotice?: Maybe<CreateNotice>;
  readonly disputeNotice?: Maybe<DisputeNotice>;
};


export type PublicDsaMutationsCreateNoticeArgs = {
  input: CreateNoticeInput;
};


export type PublicDsaMutationsDisputeNoticeArgs = {
  input: DisputeNoticeInput;
};

export type PublicShippingProviderDocs = {
  readonly __typename?: 'PublicShippingProviderDocs';
  readonly shippingProviderPolicies?: Maybe<ReadonlyArray<ShippingProviderPolicySchema>>;
};


export type PublicShippingProviderDocsShippingProviderPoliciesArgs = {
  destCountryCode?: InputMaybe<CountryCode>;
};

export type PublishAnnouncement = {
  readonly __typename?: 'PublishAnnouncement';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type PublishAnnouncementInput = {
  readonly id: Scalars['ObjectIdType'];
  readonly publishDate?: InputMaybe<DatetimeInput>;
};

export type RaccVideoAsset = {
  readonly __typename?: 'RaccVideoAsset';
  readonly contentType: Scalars['String'];
  readonly url: Scalars['String'];
};

export type RatingBreakdown = {
  readonly __typename?: 'RatingBreakdown';
  readonly fiveStarRatings?: Maybe<Scalars['Int']>;
  readonly fourStarRatings?: Maybe<Scalars['Int']>;
  readonly oneStarRatings?: Maybe<Scalars['Int']>;
  readonly threeStarRatings?: Maybe<Scalars['Int']>;
  readonly twoStarRatings?: Maybe<Scalars['Int']>;
};

export type RatingPerformanceStats = {
  readonly __typename?: 'RatingPerformanceStats';
  readonly average30dStoreRating?: Maybe<Scalars['Float']>;
  readonly averageProductRating?: Maybe<Scalars['Float']>;
  readonly averageStoreRating?: Maybe<Scalars['Float']>;
  readonly endDate: Datetime;
  readonly lowProductRatingPercentage?: Maybe<Scalars['Float']>;
  readonly lowStoreRatingPercentage?: Maybe<Scalars['Float']>;
  readonly productRatings?: Maybe<Scalars['Int']>;
  readonly productRatingsBreakdown?: Maybe<RatingBreakdown>;
  readonly startDate: Datetime;
  readonly storeRatings?: Maybe<Scalars['Int']>;
  readonly storeRatingsBreakdown?: Maybe<RatingBreakdown>;
};

export type Reason =
  | 'INCONSISTENT_PET'
  | 'INCORRECT'
  | 'INCORRECT_TOTAL_AMOUNT'
  | 'INVALID_CURRENCY'
  | 'LEDGER_ITEMS_NOT_FOUND'
  | 'MISSING'
  | 'REDUNDANT'
  | 'UNEXPECTED'
  | 'UNMATCHED';

export type RedirectType =
  | 'NEW_PAGE'
  | 'POPUP_MODAL';

export type RefundAmountType =
  | 'GENERAL'
  | 'PRICE'
  | 'SHIPPING';

export type RefundAssuranceConstants = {
  readonly __typename?: 'RefundAssuranceConstants';
  readonly enabled: Scalars['Boolean'];
  readonly guaranteedRefundRate: Scalars['Float'];
  readonly spendDiscountFactor: Scalars['Float'];
};

export type RefundDisputeHub = {
  readonly __typename?: 'RefundDisputeHub';
  readonly dispute?: Maybe<RefundDisputeSchema>;
  readonly disputeCount?: Maybe<Scalars['Int']>;
  readonly disputes?: Maybe<ReadonlyArray<RefundDisputeSchema>>;
};


export type RefundDisputeHubDisputeArgs = {
  id: Scalars['ObjectIdType'];
};


export type RefundDisputeHubDisputeCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  reasons?: InputMaybe<ReadonlyArray<DisputeReason>>;
  searchType?: InputMaybe<RefundDisputeSearchType>;
  states: ReadonlyArray<DisputeState>;
};


export type RefundDisputeHubDisputesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  reasons?: InputMaybe<ReadonlyArray<DisputeReason>>;
  searchType?: InputMaybe<RefundDisputeSearchType>;
  sort?: InputMaybe<DisputeSort>;
  states: ReadonlyArray<DisputeState>;
};

export type RefundDisputeMutations = {
  readonly __typename?: 'RefundDisputeMutations';
  readonly reply?: Maybe<RefundDisputeReplyMutation>;
};


export type RefundDisputeMutationsReplyArgs = {
  input: RefundDisputeReplyMutationInput;
};

export type RefundDisputeReplyMutation = {
  readonly __typename?: 'RefundDisputeReplyMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RefundDisputeReplyMutationInput = {
  readonly disputeId: Scalars['ObjectIdType'];
  readonly files?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly message: Scalars['String'];
};

export type RefundDisputeSchema = {
  readonly __typename?: 'RefundDisputeSchema';
  readonly consumerId: Scalars['ObjectIdType'];
  readonly disputeAmount: CurrencyValue;
  readonly id: Scalars['ObjectIdType'];
  readonly isReturnDispute: Scalars['Boolean'];
  readonly lastUpdate: Datetime;
  readonly merchant?: Maybe<MerchantSchema>;
  readonly messages: ReadonlyArray<DisputeMessageSchema>;
  readonly order: OrderSchema;
  readonly orderId: Scalars['ObjectIdType'];
  readonly product: ProductSchema;
  readonly productId: Scalars['ObjectIdType'];
  readonly reason: DisputeReasonSchema;
  readonly state: DisputeState;
};

export type RefundDisputeSearchType =
  | 'ORDER_ID';

export type RefundError = {
  readonly __typename?: 'RefundError';
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
};

export type RefundOrderInput = {
  readonly brandName?: InputMaybe<Scalars['String']>;
  readonly buyerFraudReasonCategory?: InputMaybe<BuyerFraudReasonCategory>;
  readonly expectedRefunds?: InputMaybe<Scalars['Int']>;
  readonly orderId: Scalars['ObjectIdType'];
  readonly partialAmountNote?: InputMaybe<Scalars['String']>;
  readonly partialAmountRefundType?: InputMaybe<RefundAmountType>;
  readonly partialQuantity?: InputMaybe<Scalars['Int']>;
  readonly partialRefundAmount?: InputMaybe<Scalars['Float']>;
  readonly reasonCategory: RefundReasonCategory;
  readonly reasonNote?: InputMaybe<Scalars['String']>;
  readonly shouldRefundToCash?: InputMaybe<Scalars['Boolean']>;
  readonly source?: InputMaybe<RefundSource>;
  readonly ticketId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type RefundOrders = {
  readonly __typename?: 'RefundOrders';
  readonly errorMessages?: Maybe<ReadonlyArray<RefundError>>;
  readonly refundedCount: Scalars['Int'];
};

export type RefundPerformanceStats = {
  readonly __typename?: 'RefundPerformanceStats';
  readonly deliverWrongAddressPercentage?: Maybe<Scalars['Float']>;
  readonly endDate: Datetime;
  readonly failToFulfillPercentage?: Maybe<Scalars['Float']>;
  readonly incompleteOrderPercentage?: Maybe<Scalars['Float']>;
  readonly itemDamagedPercentage?: Maybe<Scalars['Float']>;
  readonly itemNotFitPercentage?: Maybe<Scalars['Float']>;
  readonly itemNotMatchingListingPercentage?: Maybe<Scalars['Float']>;
  readonly itemNotWorkPercentage?: Maybe<Scalars['Float']>;
  readonly itemReturnedPercentage?: Maybe<Scalars['Float']>;
  readonly receivedWrongItemPercentage?: Maybe<Scalars['Float']>;
  readonly refundRate?: Maybe<Scalars['Float']>;
  readonly refundRatePercentile?: Maybe<Scalars['Int']>;
  readonly refunds?: Maybe<Scalars['Int']>;
  readonly shippingTakeTooLongPercentage?: Maybe<Scalars['Float']>;
  readonly startDate: Datetime;
};

export type RefundReasonCategory =
  | 'BLUE_ADMIN_REFUND'
  | 'BLUE_DELIVERY_NOT_DELIVERED'
  | 'BLUE_FUSION_IN_TRANSIT_LOST'
  | 'BLUE_FUSION_SENT_TO_WRONG_STORE'
  | 'BLUE_FUSION_STORE_LOST'
  | 'BLUE_FUSION_STORE_NOT_SCAN_IN'
  | 'BLUE_PROGRAM_DEPRECATION'
  | 'BLUE_STORE_OUT_OF_STOCK'
  | 'BLUE_STORE_QUIT'
  | 'CB_USER_CANCELLED_ORDER'
  | 'CIRCULAR_ROUTED_UNFULFILLED'
  | 'CLEARING_LIMBO'
  | 'COMMERCEHUB_BAD_ADDRESS'
  | 'COMMERCEHUB_BAD_SKU'
  | 'COMMERCEHUB_CANCELLED_AT_MERCHANTS_REQUEST'
  | 'COMMERCEHUB_OTHER'
  | 'COMMERCEHUB_OUT_OF_STOCK'
  | 'COMMERCEHUB_SUPPLIER_DETECTED_FRAUD'
  | 'CONFIRMED_FUSION_ITEM_NOT_PICKED_UP'
  | 'CONSUMER_FRAUD'
  | 'CONTENT_POLICY_VIOLATION_CANCELLATION'
  | 'CS_REFUND_FOR_USER_CANCEL'
  | 'CUSTOMER_MANUFACTURER_COMPLAINT'
  | 'CUSTOMER_REQUEST'
  | 'DECLINED_GIFT'
  | 'DOES_FIT_WRONG_SIZE'
  | 'DOES_NOT_FIT'
  | 'DOES_NOT_FIT_INCORRECT_SIZE'
  | 'DOES_NOT_FIT_USERS_FAULT'
  | 'DOES_NOT_FIT_WRONG_SIZE'
  | 'EMPTY_PACKAGE'
  | 'EPC_LAST_MILE_CARRIERS_UNABLE_TO_SHIP'
  | 'EPC_OVERSIZE'
  | 'EPC_OVERVALUE'
  | 'EPC_OVERWEIGHT'
  | 'EXPIRED_GIFT'
  | 'EXPIRED_GROUP_BUY'
  | 'FAKE_OR_COUNTERFEIT'
  | 'FBS_STORE_QUIT'
  | 'FBW_FAILED_TO_FULFILL_DUE_TO_CARRIER_RETURN'
  | 'FBW_WAREHOUSE_FAILED_TO_FULFILL'
  | 'FRAUDULENT_ACTIVITY'
  | 'INCOMPLETE_ORDER'
  | 'INCORRECT_QUANTITY_OF_ITEMS'
  | 'INSUFFICIENT_INVENTORY'
  | 'INVALID_ADDRESS'
  | 'IN_GRACE_PERIOD_DELAY_CANCEL'
  | 'ITEM_DAMAGED'
  | 'ITEM_DID_NOT_MEET_EXPECTATIONS'
  | 'ITEM_DOES_NOT_FIT'
  | 'ITEM_DOES_NOT_MATCH_LISTING'
  | 'ITEM_DOES_NOT_WORK_AS_DESCRIBED'
  | 'ITEM_HELD_AT_CUSTOMS'
  | 'ITEM_IS_COUNTERFEIT'
  | 'ITEM_IS_DAMAGED'
  | 'ITEM_IS_DANGEROUS'
  | 'ITEM_IS_POOR_QUALITY'
  | 'ITEM_MARKED_DELIVERED_BUT_DID_NOT_ARRIVE'
  | 'ITEM_MARKED_DELIVERED_NOT_ALL_ITEMS_ARRIVED'
  | 'ITEM_NEVER_ARRIVED'
  | 'ITEM_RETURNED_TO_SENDER'
  | 'LATE_OR_MISSING'
  | 'LIMBO_ORDER_UNFULFILLED'
  | 'MERCHANT_FAILED_TO_FULFILL'
  | 'MERCHANT_OUT_OF_STOCK'
  | 'MERCHANT_REPORTED_BUYER_FRAUD'
  | 'MERCHANT_REPORTED_ORDER'
  | 'MERCHANT_SENT_TO_WRONG_ADDRESS'
  | 'MISLEADING_LISTING'
  | 'MISSING_ITEM_OR_PARTS'
  | 'NOT_QUALIFIED_SHIPPING_PROVIDER'
  | 'ONEOFF_WISH_ERROR'
  | 'ORDER_PLACED_BY_TECHNICAL_ERROR'
  | 'ORDER_ROUTING'
  | 'OTHER'
  | 'PICKUP_NOW_ITEM_NOT_PICKED_UP'
  | 'POOR_QUALITY'
  | 'PREFER_NOT_TO_SAY'
  | 'PREORDER_NOT_FULFILLED'
  | 'PRESALE_TIMELINE_CLOSED'
  | 'PRICE_MATCH'
  | 'PRODUCT_LISTING_MISSING_INFO'
  | 'PRODUCT_MALFUNCTION'
  | 'RECEIVED_NOTE_FROM_MERCHANT'
  | 'RECEIVED_WRONG_ITEM'
  | 'REPLACEMENT_NEVER_RECEIVED'
  | 'RIGHT_OF_WITHDRAWAL'
  | 'SHIPPING_TAKING_TOO_LONG'
  | 'SHOPIFY_MERCHANT_CANCELLED'
  | 'STORE_SENT_THE_WRONG_SIZE'
  | 'STORE_UPLOADED_INVENTORY_RETURN'
  | 'SUSPECTED_FRAUD'
  | 'UNABLE_TO_SHIP'
  | 'USER_CANCELLED_ORDER'
  | 'USER_CANCEL_CHANGE_PAYMENT'
  | 'USER_ENTERED_INVALID_ADDRESS'
  | 'USER_ENTERED_WRONG_ADDRESS'
  | 'USER_NO_LONGER_WANTS_ITEM'
  | 'USER_PLACED_ORDER_BY_MISTAKE'
  | 'WISHBLUE_EPC_LATE_FULFILLMENT'
  | 'WRONG_COLOR'
  | 'WRONG_ITEM';

export type RefundSource =
  | 'MERCHANT'
  | 'PAYMENT_PROVIDER'
  | 'USER'
  | 'WISH';

export type RefundType =
  | 'FULL'
  | 'PARTIAL';

export type Region = {
  readonly __typename?: 'Region';
  readonly code: Scalars['String'];
  readonly country: Country;
  readonly name: Scalars['String'];
};

export type RegionShippingInput = {
  readonly additionalPrice?: InputMaybe<CurrencyInput>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly price?: InputMaybe<CurrencyInput>;
  readonly regionCode: Scalars['String'];
  readonly timeToDoor?: InputMaybe<Scalars['Int']>;
};

export type RegionShippingSchema = {
  readonly __typename?: 'RegionShippingSchema';
  readonly additionalPrice?: Maybe<CurrencyValue>;
  readonly enabled?: Maybe<Scalars['Boolean']>;
  readonly price?: Maybe<CurrencyValue>;
  readonly region: Region;
  readonly timeToDoor?: Maybe<Scalars['Int']>;
};

export type RegulatorAction =
  | 'UPSERT';

export type RegulatorReportAction =
  | 'CREATE';

export type RegulatorReportReason =
  | 'DANGEROUS_OR_UNSAFE'
  | 'HAZARDOUS'
  | 'OTHER_NON_COMPLIANCE'
  | 'POLICY_VIOLATION';

export type RegulatorSchema = {
  readonly __typename?: 'RegulatorSchema';
  readonly country: Country;
  readonly emailAddress: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
  readonly organization: Scalars['String'];
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly title?: Maybe<Scalars['String']>;
  readonly website: Scalars['String'];
};

export type RejectReturn = {
  readonly __typename?: 'RejectReturn';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RejectReturnInput = {
  readonly message: Scalars['String'];
  readonly orderId: Scalars['ObjectIdType'];
  readonly otherReasonExplanation?: InputMaybe<Scalars['String']>;
  readonly rejectReason: ReturnRequestRejectReason;
  readonly supportingDocument?: InputMaybe<Scalars['String']>;
};

export type RejectTrademarkInput = {
  readonly id: Scalars['ObjectIdType'];
  readonly rejectionReason?: InputMaybe<Scalars['String']>;
};

export type RejectTrademarksAndBrandInfo = {
  readonly __typename?: 'RejectTrademarksAndBrandInfo';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RejectTrademarksAndBrandInfoInput = {
  readonly brandInfoId: Scalars['ObjectIdType'];
  readonly brandInfoRejectionReason?: InputMaybe<Scalars['String']>;
  readonly trademarks: ReadonlyArray<RejectTrademarkInput>;
};

export type ReleasePayoutRequest = {
  readonly __typename?: 'ReleasePayoutRequest';
  readonly canResetPayout?: Maybe<Scalars['Boolean']>;
  readonly releasePaymentRequestId?: Maybe<Scalars['String']>;
};

export type RemoveCountFromMplus = {
  readonly __typename?: 'RemoveCountFromMplus';
  readonly ok?: Maybe<Scalars['Boolean']>;
  readonly removedIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type RemoveCountFromMplusInput = {
  readonly count?: InputMaybe<Scalars['Int']>;
};

export type RemoveFromPlus = {
  readonly __typename?: 'RemoveFromPlus';
  readonly ok?: Maybe<Scalars['Boolean']>;
};

export type RemoveFromPlusInput = {
  readonly merchantIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type RemoveNotifier = {
  readonly __typename?: 'RemoveNotifier';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RemoveNotifierInput = {
  readonly notifierId: Scalars['ObjectIdType'];
};

export type RemoveProduct = {
  readonly __typename?: 'RemoveProduct';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RemoveProductInput = {
  readonly productId: Scalars['ObjectIdType'];
};

export type RemoveShippingProfile = {
  readonly __typename?: 'RemoveShippingProfile';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RemoveVideo = {
  readonly __typename?: 'RemoveVideo';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RemoveVideoInput = {
  readonly productId: Scalars['ObjectIdType'];
  readonly videoId: Scalars['ObjectIdType'];
};

export type ReplyInfractionInput = {
  readonly message: Scalars['String'];
  readonly uploadFiles?: InputMaybe<ReadonlyArray<FileInput>>;
};

export type ReportAbuseHub = {
  readonly __typename?: 'ReportAbuseHub';
  readonly regulator?: Maybe<RegulatorSchema>;
  readonly regulatorReportReasons?: Maybe<ReadonlyArray<RegulatorReportReason>>;
};


export type ReportAbuseHubRegulatorArgs = {
  emailAddress: Scalars['String'];
};

export type ReportAbuseMutations = {
  readonly __typename?: 'ReportAbuseMutations';
  readonly upsertRegulator?: Maybe<UpsertRegulator>;
  readonly upsertRegulatorReport?: Maybe<UpsertRegulatorReport>;
};


export type ReportAbuseMutationsUpsertRegulatorArgs = {
  input?: InputMaybe<UpsertRegulatorInput>;
};


export type ReportAbuseMutationsUpsertRegulatorReportArgs = {
  input?: InputMaybe<UpsertRegulatorReportInput>;
};

export type ReportOrderInput = {
  readonly mTransactionId: Scalars['ObjectIdType'];
  readonly reportExplanation: Scalars['String'];
  readonly reportReasons: ReadonlyArray<ReportOrderReasons>;
};

export type ReportOrderMutation = {
  readonly __typename?: 'ReportOrderMutation';
  readonly errMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ReportOrderReasons =
  | 'OTHER'
  | 'POTENTIAL_SAFETY_THREAT'
  | 'SUSPECTED_ILLEGAL_ACTIVITY'
  | 'SUSPICIOUS_ORDER';

export type RequestPaymentInput = {
  readonly agreementFiles?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly idFiles?: InputMaybe<ReadonlyArray<FileInput>>;
};

export type ResetPasswordMutation = {
  readonly __typename?: 'ResetPasswordMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ResetPasswordMutationInput = {
  readonly comparePassword: Scalars['String'];
  readonly rawPassword: Scalars['String'];
  readonly token: Scalars['String'];
  readonly username: Scalars['String'];
};

export type ResetReleasePaymentRequestInput = {
  readonly requestId: Scalars['ObjectIdType'];
};

export type ResetReleasePaymentRequestMutation = {
  readonly __typename?: 'ResetReleasePaymentRequestMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ResponsiblePersonAction =
  | 'APPROVE'
  | 'CREATE'
  | 'DELETE'
  | 'REJECT'
  | 'UPDATE';

export type ResponsiblePersonAddressSchema = {
  readonly __typename?: 'ResponsiblePersonAddressSchema';
  readonly city: Scalars['String'];
  readonly country: EuComplianceResponsiblePersonCountriesAndRegions;
  readonly countryCode: EuComplianceResponsiblePersonCountriesAndRegionsCode;
  readonly county?: Maybe<Scalars['String']>;
  readonly name: Scalars['String'];
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly state?: Maybe<Scalars['String']>;
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: Maybe<Scalars['String']>;
  readonly zipcode?: Maybe<Scalars['String']>;
};

export type ResponsiblePersonFieldType =
  | 'RISK_SCORE';

export type ResponsiblePersonRejectReasonSchema = {
  readonly __typename?: 'ResponsiblePersonRejectReasonSchema';
  readonly reason: ResponsiblePersonRejectionReason;
  readonly text: Scalars['String'];
};

export type ResponsiblePersonRejectionReason =
  | 'INVALID_ADDRESS'
  | 'INVALID_NAME'
  | 'INVALID_PHONE_AND_EMAIL';

export type ResponsiblePersonSchema = {
  readonly __typename?: 'ResponsiblePersonSchema';
  readonly address?: Maybe<ResponsiblePersonAddressSchema>;
  readonly compliance?: Maybe<LinkProductComplianceType>;
  readonly email: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly merchant: MerchantSchema;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly rejectReason?: Maybe<ResponsiblePersonRejectionReason>;
  readonly status?: Maybe<ResponsiblePersonStatus>;
};

export type ResponsiblePersonSort = {
  readonly field: ResponsiblePersonFieldType;
  readonly order: SortOrderType;
};

export type ResponsiblePersonStatus =
  | 'ADMIN_APPROVED'
  | 'COMPLETE'
  | 'DELETED'
  | 'INREVIEW'
  | 'REJECTED';

export type ResponsiblePersonUpsertInput = {
  readonly action: ResponsiblePersonAction;
  readonly address?: InputMaybe<EuComplianceAddressInput>;
  readonly compliance: LinkProductComplianceType;
  readonly email?: InputMaybe<Scalars['String']>;
  readonly rejectReason?: InputMaybe<ResponsiblePersonRejectionReason>;
  readonly responsiblePersonId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type RestrictedProductCategory =
  | 'BEVERAGES'
  | 'CHILD_CARSEAT'
  | 'CHILD_HARNESS'
  | 'FOOD'
  | 'OTC_MEDICATION'
  | 'PET_FOOD'
  | 'PLANT_AND_PLANT_SEEDS'
  | 'SEATBELTS'
  | 'UNVERIFIED_WARRANTIES'
  | 'VITAMINS_AND_SUPPLEMENTS';

export type RestrictedProductCountryCode =
  | 'AR'
  | 'AT'
  | 'AU'
  | 'BE'
  | 'BG'
  | 'BR'
  | 'CA'
  | 'CH'
  | 'CO'
  | 'CZ'
  | 'DE'
  | 'DK'
  | 'EE'
  | 'ES'
  | 'FI'
  | 'FR'
  | 'GB'
  | 'GR'
  | 'HR'
  | 'HU'
  | 'IE'
  | 'IT'
  | 'JP'
  | 'KR'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'MT'
  | 'MX'
  | 'NL'
  | 'PL'
  | 'PT'
  | 'RO'
  | 'SE'
  | 'SI'
  | 'SK'
  | 'TR'
  | 'UA'
  | 'US';

export type RestrictedProductMutations = {
  readonly __typename?: 'RestrictedProductMutations';
  readonly upsertRestrictedProductRequest?: Maybe<UpsertRestrictedProductRequest>;
};


export type RestrictedProductMutationsUpsertRestrictedProductRequestArgs = {
  input?: InputMaybe<RestrictedProductRequestUpsertInput>;
};

export type RestrictedProductRegion = {
  readonly __typename?: 'RestrictedProductRegion';
  readonly isACountry: Scalars['Boolean'];
  readonly regionCode: RestrictedProductRegionCode;
  readonly regionName: Scalars['String'];
};

export type RestrictedProductRegionCode =
  | 'AU'
  | 'EU'
  | 'JP'
  | 'KR'
  | 'LA'
  | 'NA'
  | 'TR';

export type RestrictedProductRegionToCategory = {
  readonly __typename?: 'RestrictedProductRegionToCategory';
  readonly categories: ReadonlyArray<RestrictedProductCategory>;
  readonly regionCode: RestrictedProductRegionCode;
};

export type RestrictedProductRequestAction =
  | 'APPROVE'
  | 'BATCH_APPROVE'
  | 'BATCH_REJECT'
  | 'CREATE'
  | 'REJECT';

export type RestrictedProductRequestFieldType =
  | 'formattedCreateTime'
  | 'merchantId';

export type RestrictedProductRequestSchema = {
  readonly __typename?: 'RestrictedProductRequestSchema';
  readonly businessEntityName?: Maybe<Scalars['String']>;
  readonly decisionAdminId?: Maybe<Scalars['ObjectIdType']>;
  readonly decisionDate?: Maybe<Datetime>;
  readonly evidenceIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly id: Scalars['ObjectIdType'];
  readonly ipAddress?: Maybe<Scalars['String']>;
  readonly ipAddressCountry?: Maybe<Country>;
  readonly legalRepName?: Maybe<Scalars['String']>;
  readonly legalRepTitle?: Maybe<Scalars['String']>;
  readonly licenseExpiryDate?: Maybe<Datetime>;
  readonly merchant?: Maybe<MerchantSchema>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly merchantWarrantyDoc?: Maybe<MerchantFileSchema>;
  readonly productCategory: RestrictedProductCategory;
  readonly region: RestrictedProductRegion;
  readonly rejectedReason?: Maybe<Scalars['String']>;
  readonly requestDate?: Maybe<Datetime>;
  readonly state: RestrictedProductRequestState;
};

export type RestrictedProductRequestSort = {
  readonly field: RestrictedProductRequestFieldType;
  readonly order: SortOrderType;
};

export type RestrictedProductRequestState =
  | 'APPROVED'
  | 'AWAITING_ADMIN'
  | 'AWAITING_MERCHANT'
  | 'REJECTED';

export type RestrictedProductRequestUpsertInput = {
  readonly action: RestrictedProductRequestAction;
  readonly businessEntityName?: InputMaybe<Scalars['String']>;
  readonly categories?: InputMaybe<ReadonlyArray<RestrictedProductCategory>>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly legalRepName?: InputMaybe<Scalars['String']>;
  readonly legalRepTitle?: InputMaybe<Scalars['String']>;
  readonly region?: InputMaybe<RestrictedProductRegionCode>;
  readonly rejectedReason?: InputMaybe<Scalars['String']>;
  readonly warrantyFile?: InputMaybe<FileInput>;
  readonly warrantyFileUrl?: InputMaybe<Scalars['String']>;
  readonly warrantyFilename?: InputMaybe<Scalars['String']>;
};

export type RestrictedProductSchema = {
  readonly __typename?: 'RestrictedProductSchema';
  readonly allRegionRestrictedProductCategories?: Maybe<ReadonlyArray<RestrictedProductRegionToCategory>>;
  readonly allRestrictedProductCategories?: Maybe<ReadonlyArray<RestrictedProductCategory>>;
  readonly restrictedProductCategories?: Maybe<ReadonlyArray<RestrictedProductCategory>>;
  readonly restrictedProductCountryCodes?: Maybe<ReadonlyArray<RestrictedProductCountryCode>>;
  readonly restrictedProductEuropeCountries?: Maybe<ReadonlyArray<Country>>;
  readonly restrictedProductRegions?: Maybe<ReadonlyArray<RestrictedProductRegion>>;
  readonly restrictedProductRequests?: Maybe<ReadonlyArray<RestrictedProductRequestSchema>>;
  readonly restrictedProductRequestsCount?: Maybe<Scalars['Int']>;
};


export type RestrictedProductSchemaRestrictedProductCategoriesArgs = {
  region: RestrictedProductRegionCode;
};


export type RestrictedProductSchemaRestrictedProductRequestsArgs = {
  categories?: InputMaybe<ReadonlyArray<RestrictedProductCategory>>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  regions?: InputMaybe<ReadonlyArray<RestrictedProductRegionCode>>;
  sort?: InputMaybe<RestrictedProductRequestSort>;
  states?: InputMaybe<ReadonlyArray<RestrictedProductRequestState>>;
};


export type RestrictedProductSchemaRestrictedProductRequestsCountArgs = {
  categories?: InputMaybe<ReadonlyArray<RestrictedProductCategory>>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  regions?: InputMaybe<ReadonlyArray<RestrictedProductRegionCode>>;
  states?: InputMaybe<ReadonlyArray<RestrictedProductRequestState>>;
};

export type ReturnDetailsSchema = {
  readonly __typename?: 'ReturnDetailsSchema';
  readonly actualDeliverDays?: Maybe<Timedelta>;
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly returnSlipFilename?: Maybe<Scalars['String']>;
  readonly returnSlipId?: Maybe<Scalars['Int']>;
  readonly returnSlipUrl?: Maybe<Scalars['String']>;
  readonly shippingLabelFilename?: Maybe<Scalars['String']>;
  readonly shippingLabelUrl?: Maybe<Scalars['String']>;
  readonly shippingProvider?: Maybe<ShippingProviderSchema>;
  readonly trackingId?: Maybe<Scalars['ObjectIdType']>;
  readonly trackingUrl?: Maybe<Scalars['String']>;
  readonly warehouseConfirmedTime?: Maybe<Datetime>;
};

export type ReturnInformationSchema = {
  readonly __typename?: 'ReturnInformationSchema';
  readonly policyType?: Maybe<Scalars['String']>;
  readonly returnDetails?: Maybe<ReturnDetailsSchema>;
  readonly returnRequest?: Maybe<ReturnRequestSchema>;
};

export type ReturnRequestAction =
  | 'AUTHORIZE'
  | 'CANCEL'
  | 'CLAIM'
  | 'CLOSE'
  | 'CONTACT'
  | 'CREATE'
  | 'REFUND'
  | 'REJECT'
  | 'REQUIRE_DELIVERY_VERIFICATION'
  | 'VERIFY_RETURN';

export type ReturnRequestActionSchema = {
  readonly __typename?: 'ReturnRequestActionSchema';
  readonly action: ReturnRequestAction;
};

export type ReturnRequestCancelReason =
  | 'BUYER_ACCEPT_EXCHANGE'
  | 'BUYER_ACCEPT_RESHIP'
  | 'BUYER_INACTIVITY'
  | 'BUYER_NO_LONGER_HAS_AN_ISSUE'
  | 'OTHER';

export type ReturnRequestClaimReason =
  | 'BUYER_FRAUDULENT'
  | 'BUYER_UNFAIR'
  | 'OTHER';

export type ReturnRequestContactBuyerReason =
  | 'OFFER_EXCHANGE'
  | 'OFFER_RESHIP'
  | 'OTHER'
  | 'PROVIDE_PRODUCT_INSTRUCTION'
  | 'UNDERSTAND_FURTHER';

export type ReturnRequestRefundReason =
  | 'BLUE_ADMIN_REFUND'
  | 'BLUE_DELIVERY_NOT_DELIVERED'
  | 'BLUE_FUSION_IN_TRANSIT_LOST'
  | 'BLUE_FUSION_SENT_TO_WRONG_STORE'
  | 'BLUE_FUSION_STORE_LOST'
  | 'BLUE_FUSION_STORE_NOT_SCAN_IN'
  | 'BLUE_PROGRAM_DEPRECATION'
  | 'BLUE_STORE_OUT_OF_STOCK'
  | 'BLUE_STORE_QUIT'
  | 'CB_USER_CANCELLED_ORDER'
  | 'CIRCULAR_ROUTED_UNFULFILLED'
  | 'CLEARING_LIMBO'
  | 'COMMERCEHUB_BAD_ADDRESS'
  | 'COMMERCEHUB_BAD_SKU'
  | 'COMMERCEHUB_CANCELLED_AT_MERCHANTS_REQUEST'
  | 'COMMERCEHUB_OTHER'
  | 'COMMERCEHUB_OUT_OF_STOCK'
  | 'COMMERCEHUB_SUPPLIER_DETECTED_FRAUD'
  | 'CONFIRMED_FUSION_ITEM_NOT_PICKED_UP'
  | 'CONSUMER_FRAUD'
  | 'CONTENT_POLICY_VIOLATION_CANCELLATION'
  | 'CS_REFUND_FOR_USER_CANCEL'
  | 'CUSTOMER_MANUFACTURER_COMPLAINT'
  | 'CUSTOMER_REQUEST'
  | 'DECLINED_GIFT'
  | 'DOES_FIT_WRONG_SIZE'
  | 'DOES_NOT_FIT'
  | 'DOES_NOT_FIT_INCORRECT_SIZE'
  | 'DOES_NOT_FIT_USERS_FAULT'
  | 'DOES_NOT_FIT_WRONG_SIZE'
  | 'EMPTY_PACKAGE'
  | 'EPC_LAST_MILE_CARRIERS_UNABLE_TO_SHIP'
  | 'EPC_OVERSIZE'
  | 'EPC_OVERVALUE'
  | 'EPC_OVERWEIGHT'
  | 'EXPIRED_GIFT'
  | 'EXPIRED_GROUP_BUY'
  | 'FAKE_OR_COUNTERFEIT'
  | 'FBS_STORE_QUIT'
  | 'FBW_FAILED_TO_FULFILL_DUE_TO_CARRIER_RETURN'
  | 'FBW_WAREHOUSE_FAILED_TO_FULFILL'
  | 'FRAUDULENT_ACTIVITY'
  | 'INCOMPLETE_ORDER'
  | 'INCORRECT_QUANTITY_OF_ITEMS'
  | 'INSUFFICIENT_INVENTORY'
  | 'INVALID_ADDRESS'
  | 'IN_GRACE_PERIOD_DELAY_CANCEL'
  | 'ITEM_DAMAGED'
  | 'ITEM_DID_NOT_MEET_EXPECTATIONS'
  | 'ITEM_DOES_NOT_FIT'
  | 'ITEM_DOES_NOT_MATCH_LISTING'
  | 'ITEM_DOES_NOT_WORK_AS_DESCRIBED'
  | 'ITEM_HELD_AT_CUSTOMS'
  | 'ITEM_IS_COUNTERFEIT'
  | 'ITEM_IS_DAMAGED'
  | 'ITEM_IS_DANGEROUS'
  | 'ITEM_IS_POOR_QUALITY'
  | 'ITEM_MARKED_DELIVERED_BUT_DID_NOT_ARRIVE'
  | 'ITEM_MARKED_DELIVERED_NOT_ALL_ITEMS_ARRIVED'
  | 'ITEM_NEVER_ARRIVED'
  | 'ITEM_RETURNED_TO_SENDER'
  | 'LATE_OR_MISSING'
  | 'LIMBO_ORDER_UNFULFILLED'
  | 'MERCHANT_FAILED_TO_FULFILL'
  | 'MERCHANT_OUT_OF_STOCK'
  | 'MERCHANT_REPORTED_BUYER_FRAUD'
  | 'MERCHANT_REPORTED_ORDER'
  | 'MERCHANT_SENT_TO_WRONG_ADDRESS'
  | 'MISLEADING_LISTING'
  | 'MISSING_ITEM_OR_PARTS'
  | 'NOT_QUALIFIED_SHIPPING_PROVIDER'
  | 'ONEOFF_WISH_ERROR'
  | 'ORDER_PLACED_BY_TECHNICAL_ERROR'
  | 'ORDER_ROUTING'
  | 'OTHER'
  | 'PICKUP_NOW_ITEM_NOT_PICKED_UP'
  | 'POOR_QUALITY'
  | 'PREFER_NOT_TO_SAY'
  | 'PREORDER_NOT_FULFILLED'
  | 'PRESALE_TIMELINE_CLOSED'
  | 'PRICE_MATCH'
  | 'PRODUCT_LISTING_MISSING_INFO'
  | 'PRODUCT_MALFUNCTION'
  | 'RECEIVED_NOTE_FROM_MERCHANT'
  | 'RECEIVED_WRONG_ITEM'
  | 'REPLACEMENT_NEVER_RECEIVED'
  | 'RIGHT_OF_WITHDRAWAL'
  | 'SHIPPING_TAKING_TOO_LONG'
  | 'SHOPIFY_MERCHANT_CANCELLED'
  | 'STORE_SENT_THE_WRONG_SIZE'
  | 'STORE_UPLOADED_INVENTORY_RETURN'
  | 'SUSPECTED_FRAUD'
  | 'UNABLE_TO_SHIP'
  | 'USER_CANCELLED_ORDER'
  | 'USER_CANCEL_CHANGE_PAYMENT'
  | 'USER_ENTERED_INVALID_ADDRESS'
  | 'USER_ENTERED_WRONG_ADDRESS'
  | 'USER_NO_LONGER_WANTS_ITEM'
  | 'USER_PLACED_ORDER_BY_MISTAKE'
  | 'WISHBLUE_EPC_LATE_FULFILLMENT'
  | 'WRONG_COLOR'
  | 'WRONG_ITEM';

export type ReturnRequestRejectReason =
  | 'LATE_RETURN'
  | 'OTHER'
  | 'PRODUCT_DAMAGED'
  | 'WRONG_PRODUCT';

export type ReturnRequestSchema = {
  readonly __typename?: 'ReturnRequestSchema';
  readonly actions?: Maybe<ReadonlyArray<ReturnRequestActionSchema>>;
  readonly authType: Scalars['String'];
  readonly availableReturnCarriers: ReadonlyArray<ShippingProviderSchema>;
  readonly cancellationReason?: Maybe<ReturnRequestCancelReason>;
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly isToMerchantWarehouse: Scalars['Boolean'];
  readonly lastAction: ReturnRequestActionSchema;
  readonly merchantAuthorizedTime?: Maybe<Datetime>;
  readonly returnWarehouseAddress?: Maybe<AddressSchema>;
  readonly shippingLabelSentDate?: Maybe<Datetime>;
  readonly state: ReturnRequestState;
  readonly statusToDisplay: Scalars['String'];
};

export type ReturnRequestState =
  | 'APPEAL_CS'
  | 'AWAITING_MERCHANT'
  | 'CANCELLED'
  | 'CONTACT_IN_PROGRESS'
  | 'LABEL_SENT'
  | 'REFUNDED'
  | 'REJECTED';

export type RevShareInfoSchema = {
  readonly __typename?: 'RevShareInfoSchema';
  readonly destRegion?: Maybe<RevShareRegion>;
  readonly entityRegion?: Maybe<RevShareRegion>;
  readonly isRevShareFromMerchant?: Maybe<Scalars['Boolean']>;
  readonly productCategory?: Maybe<OrderRevShareProductCategory>;
  readonly qualifiers: ReadonlyArray<RevShareQualifier>;
  readonly sourceRegion?: Maybe<RevShareRegion>;
  readonly wssTier?: Maybe<WssTier>;
};

export type RevShareQualifier =
  | 'CATEGORY_APPAREL_ACCESSORY'
  | 'CATEGORY_CLOTHING'
  | 'CATEGORY_ELECTRONICS'
  | 'CATEGORY_HOUSEHOLD'
  | 'CATEGORY_JEWELRY_AND_ACCESSORY'
  | 'CATEGORY_SEX_TOY'
  | 'CATEGORY_SHOES'
  | 'CATEGORY_WATCH'
  | 'DEST_EU'
  | 'DEST_NA'
  | 'ENTITY_EU'
  | 'ENTITY_NA'
  | 'IS_WISH_EXPRESS'
  | 'SOURCE_EU'
  | 'SOURCE_NA'
  | 'TIER_BAN'
  | 'TIER_BRONZE'
  | 'TIER_GOLD'
  | 'TIER_PLATINUM'
  | 'TIER_SILVER'
  | 'TIER_UNASSESSED';

export type RevShareRegion =
  | 'EU'
  | 'NA'
  | 'OTHER';

export type Reversal = {
  readonly __typename?: 'Reversal';
  readonly amount: CurrencyValue;
  readonly id: Scalars['ObjectIdType'];
};

export type ReviewBankAccountDocument = {
  readonly __typename?: 'ReviewBankAccountDocument';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ReviewBankAccountDocumentInput = {
  readonly comment?: InputMaybe<Scalars['String']>;
  readonly documentId: Scalars['ObjectIdType'];
  readonly documentType: BankAccountDocumentType;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly state: BankAccountVerificationStatus;
};

export type ReviewMerchantTaxIdentificationInput = {
  readonly merchantTaxIdentificationId: Scalars['ObjectIdType'];
  readonly rejectedReason?: InputMaybe<MerchantTaxIdentificationRejectReson>;
  readonly reviewAction: MerchantTaxIdentificationReviewAction;
};

export type ReviewMerchantTaxIdentificationMutation = {
  readonly __typename?: 'ReviewMerchantTaxIdentificationMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type RoleSchema = {
  readonly __typename?: 'RoleSchema';
  readonly description?: Maybe<Scalars['String']>;
  readonly id: RoleType;
  readonly name: Scalars['String'];
};

export type RoleType =
  | 'ACCENTURE_DETAIL_LEAD'
  | 'ACCENTURE_DETAIL_WORKER'
  | 'ACCENTURE_FRAUD_LEAD'
  | 'ACCENTURE_FRAUD_WORKER'
  | 'ACCENTURE_INFRACTION_WORKER'
  | 'ACCENTURE_TAGGER_LEAD'
  | 'ACCENTURE_TAGGER_WORKER'
  | 'ACCENTURE_WORKER'
  | 'ACCESS_CONTROL_MANAGER'
  | 'ADMIN'
  | 'ALORICA_LEAD'
  | 'ALORICA_WORKER'
  | 'BD'
  | 'BD_LEAD'
  | 'BOOST_DASHBOARD'
  | 'BRAND_PARTNER'
  | 'BRAND_PROTECTION_CONTRACTOR'
  | 'BRAND_PROTECTION_LEAD'
  | 'BRAND_PROTECTION_WORKER'
  | 'CN_ORG_MLE_MPS'
  | 'CONTRACTOR'
  | 'COURIER'
  | 'CS_ADMIN'
  | 'CS_REP_EXTERNAL'
  | 'CS_REP_INTERNAL'
  | 'CS_REP_INTERNAL_LEAD'
  | 'DEP_IT_ADMIN'
  | 'DEP_PRODUCT_API_USER'
  | 'EPC_SUPPORT'
  | 'EVERC_IPV_DETECTION_EXTERNAL_API'
  | 'FACTORY'
  | 'FACTORY_ACCOUNT_MANAGER'
  | 'FINANCE'
  | 'FRAUD_TEAM'
  | 'FRAUD_TEAM_LEAD'
  | 'INSURANCE_PROVIDER'
  | 'IN_HOUSE_TAGGER'
  | 'LANGUAGE_SPECIALIST'
  | 'LEGAL_TEAM'
  | 'LEGAL_TEAM_LEAD'
  | 'LOAN_PROVIDER'
  | 'LOGISTICS_TRACKING_ADMIN'
  | 'MERCHANT_LEAD'
  | 'MERCHANT_REVIEW'
  | 'MERCHANT_SUPPORT'
  | 'MERCHANT_SUPPORT_LEAD'
  | 'META_USER'
  | 'OUTSOURCED_MERCHANT_SUPPORT'
  | 'PARTNER'
  | 'PAYMENT_PROVIDER'
  | 'PENDING_USER'
  | 'QA'
  | 'REQUEST_INFO_USER'
  | 'SALES_REP'
  | 'SHIP_PROVIDER'
  | 'SHIP_TO_STORE_PARTNER'
  | 'STAGE_ADMIN'
  | 'STORE_USER'
  | 'SUB_USER'
  | 'SUPPLY_CHAIN'
  | 'SYSTEM_ACCOUNT'
  | 'TAGGER'
  | 'TAGGER_LEAD'
  | 'TASKUS_CS_LEAD'
  | 'TASKUS_CS_WORKER'
  | 'TASKUS_DETAIL_LEAD'
  | 'TASKUS_DETAIL_WORKER'
  | 'TASKUS_MC_LEAD'
  | 'TASKUS_MC_WORKER'
  | 'TASKUS_TAGGER_LEAD'
  | 'TASKUS_TAGGER_WORKER'
  | 'TELEPERFORMANCE_BOGOTA_LEAD'
  | 'TELEPERFORMANCE_BOGOTA_WORKER'
  | 'TELEPERFORMANCE_EGYPT_LEAD'
  | 'TELEPERFORMANCE_EGYPT_WORKER'
  | 'TELEPERFORMANCE_INDIA_LEAD'
  | 'TELEPERFORMANCE_INDIA_WORKER'
  | 'TELEPERFORMANCE_LEAD'
  | 'TELEPERFORMANCE_WORKER'
  | 'TEST_USER'
  | 'TRANSCOSMOS_LEAD'
  | 'TRANSCOSMOS_WORKER'
  | 'TRUSTED_TAGGER'
  | 'TRUST_SAFETY'
  | 'USER'
  | 'WAREHOUSE'
  | 'WAREHOUSE_OPERATOR'
  | 'WISHCHAIN'
  | 'WISHPOST'
  | 'WISHPOST_EXTERNAL_API_MANAGER'
  | 'WISH_BLUE_AMBASSADOR'
  | 'WISH_BLUE_OPERATOR'
  | 'WISH_EXPRESS_SUPPORT'
  | 'WISH_HR'
  | 'ZENDESK_SUPPORT';

export type RootMutation = {
  readonly __typename?: 'RootMutation';
  readonly analytics?: Maybe<AnalyticsServiceMutations>;
  readonly announcements?: Maybe<AnnouncementMutations>;
  readonly authentication?: Maybe<AuthenticationMutations>;
  readonly brand?: Maybe<BrandMutations>;
  readonly brandPartner?: Maybe<BrandPartnerMutations>;
  readonly currentMerchant?: Maybe<MerchantMutation>;
  readonly currentUser?: Maybe<UserMutation>;
  readonly customerSupportTickets?: Maybe<CustomerSupportTicketMutations>;
  readonly dsa?: Maybe<DsaMutations>;
  readonly fulfillment: FulfillmentMutation;
  readonly gating?: Maybe<MerchantUserGateMutations>;
  readonly identity?: Maybe<IdentityMutations>;
  readonly locale?: Maybe<LocaleMutations>;
  readonly logistics?: Maybe<LogisticsMutations>;
  readonly marketing?: Maybe<MarketingServiceMutations>;
  readonly merchantIdentity?: Maybe<MerchantIdentityMutations>;
  readonly merchantSafety?: Maybe<MerchantSafetyMutations>;
  readonly mfp?: Maybe<MfpServiceMutations>;
  readonly oneoffPayments?: Maybe<MerchantOneoffPaymentMutations>;
  readonly payments?: Maybe<MerchantPaymentsMutation>;
  readonly plus?: Maybe<PlusAdminServiceMutations>;
  readonly policy?: Maybe<PolicyMutations>;
  readonly policyPublic: PolicyPublicMutations;
  readonly productCatalog: ProductCatalogMutations;
  readonly sanctionScreening?: Maybe<SanctionScreeningMutations>;
  readonly shippingProfileCollection: ShippingProfileMutations;
  readonly tagging?: Maybe<TaggingMutations>;
  readonly taxDashboard?: Maybe<TaxDashboardReviewMutations>;
  readonly uploads?: Maybe<UploadMutations>;
  readonly video?: Maybe<VideoMutations>;
  readonly webhook?: Maybe<WebhookMutations>;
};

export type RootQuery = {
  readonly __typename?: 'RootQuery';
  readonly announcements: AnnouncementsService;
  readonly authentication: AuthenticationServiceSchema;
  readonly brand?: Maybe<BrandServiceSchema>;
  readonly chrome?: Maybe<ChromeSchema>;
  readonly cs?: Maybe<CustomerSupportServiceSchema>;
  readonly currentBrandPartner?: Maybe<BrandPartnerInfoSchema>;
  readonly currentCountry?: Maybe<Country>;
  readonly currentLocale: Locale;
  readonly currentMerchant?: Maybe<MerchantSchema>;
  readonly currentProperLocale: Scalars['String'];
  readonly currentUser?: Maybe<UserSchema>;
  readonly dsa?: Maybe<DsaHub>;
  readonly fulfillment?: Maybe<FulfillmentSchema>;
  readonly identity?: Maybe<IdentityServiceSchema>;
  readonly listingQualityInsights?: Maybe<ListingQualityInsightsSchema>;
  readonly logistics?: Maybe<LogisticsSchema>;
  readonly marketing?: Maybe<MarketingServiceSchema>;
  readonly merchantEntity?: Maybe<MerchantEntitySchema>;
  readonly merchantIdentity?: Maybe<MerchantIdentityServiceSchema>;
  readonly merchantSafetyInfo?: Maybe<MerchantSafetySchema>;
  readonly merchantTermsOfService: MerchantTermsOfServiceSchema;
  readonly merchants?: Maybe<MerchantServiceSchema>;
  readonly mfp?: Maybe<MfpServiceSchema>;
  readonly notifications?: Maybe<NotificationsServiceSchema>;
  readonly payableInfo?: Maybe<PayableInfoSchema>;
  readonly payments?: Maybe<MerchantPaymentsService>;
  readonly platformConstants?: Maybe<PlatformConstants>;
  readonly policy?: Maybe<PolicySchema>;
  readonly policyPublic?: Maybe<PolicyPublicSchema>;
  readonly productCatalog?: Maybe<ProductCatalogSchema>;
  readonly publicShippingProviderDocs?: Maybe<PublicShippingProviderDocs>;
  readonly recentUsers?: Maybe<ReadonlyArray<UserSchema>>;
  readonly shippingProfileCollection?: Maybe<ShippingProfileCollectionSchema>;
  readonly storefront?: Maybe<StorefrontServiceSchema>;
  readonly su?: Maybe<UserSchema>;
  readonly tagging?: Maybe<TaggingServiceSchema>;
  readonly taxDashboardInfo?: Maybe<TaxDashboardSchema>;
  readonly taxonomy?: Maybe<TaxonomySchema>;
  readonly tos: TosServiceSchema;
  readonly webhook?: Maybe<WebhookSchema>;
};


export type RootQueryMerchantEntityArgs = {
  entityId?: InputMaybe<Scalars['String']>;
  merchantId?: InputMaybe<Scalars['String']>;
};

export type SalesPerformanceStats = {
  readonly __typename?: 'SalesPerformanceStats';
  readonly addToCart?: Maybe<Scalars['Int']>;
  readonly addToCartConversion?: Maybe<Scalars['Float']>;
  readonly checkoutConversion?: Maybe<Scalars['Float']>;
  readonly endDate: Datetime;
  readonly gmv: CurrencyValue;
  readonly orders?: Maybe<Scalars['Int']>;
  readonly productImpressions?: Maybe<Scalars['BigInt']>;
  readonly startDate: Datetime;
};

export type SalesforceLeadInfo = {
  readonly __typename?: 'SalesforceLeadInfo';
  readonly company?: Maybe<Scalars['String']>;
  readonly country: Country;
  readonly email?: Maybe<Scalars['String']>;
  readonly firstName?: Maybe<Scalars['String']>;
  readonly lastName?: Maybe<Scalars['String']>;
  readonly leadSource: SalesforceLeadSource;
  readonly valid: Scalars['Boolean'];
};

export type SalesforceLeadSource =
  | 'Lead_Questionnaire'
  | 'MMS_Lead_Questionnaire'
  | 'NOT_IMPLEMENTED';

export type SanctionScreeningHitStateType =
  | 'ESCALATE'
  | 'FALSE_HIT'
  | 'NEWLY_IDENTITY_VERIFIED'
  | 'NEWLY_IDENTITY_VERIFIED_EEA'
  | 'TRUE_HIT'
  | 'UNSET';

export type SanctionScreeningMutations = {
  readonly __typename?: 'SanctionScreeningMutations';
  readonly bulkReview?: Maybe<BulkReviewMutation>;
};


export type SanctionScreeningMutationsBulkReviewArgs = {
  input: BulkReviewInput;
};

export type ScheduledAddBudgetSchema = {
  readonly __typename?: 'ScheduledAddBudgetSchema';
  readonly amount: CurrencyValue;
  readonly days: ReadonlyArray<Scalars['Int']>;
  readonly enabled: Scalars['Boolean'];
};

export type ScreenCoordinates = {
  readonly x: Scalars['Float'];
  readonly y: Scalars['Float'];
};

export type SelectWpsShippingOptionInput = {
  readonly additionalServiceOptions?: InputMaybe<ReadonlyArray<WpsAvailableServices>>;
  readonly orderId: Scalars['ObjectIdType'];
  readonly shippingOptionId: Scalars['String'];
};

export type SelectWpsShippingOptionMutation = {
  readonly __typename?: 'SelectWPSShippingOptionMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly providerId?: Maybe<Scalars['Int']>;
  readonly trackingId?: Maybe<Scalars['String']>;
  readonly wpsShipmentId?: Maybe<Scalars['String']>;
};

export type SellerIdentityBusinessInfo = {
  readonly regBusinessName: Scalars['String'];
  readonly regBusinessNum: Scalars['String'];
};

export type SellerIdentityBusinessInfoIndividual = {
  readonly birthDate: DatetimeInput;
  readonly firstName: Scalars['String'];
  readonly lastName: Scalars['String'];
  readonly middleName?: InputMaybe<Scalars['String']>;
};

export type SellerIdentityBusinessLocation = {
  readonly baCity: Scalars['String'];
  readonly baCountry: CountryCode;
  readonly baState: Scalars['String'];
  readonly baStreetAddress1: Scalars['String'];
  readonly baStreetAddress2?: InputMaybe<Scalars['String']>;
  readonly baZipcode: Scalars['String'];
  readonly countryCodeDomicile: CountryCode;
};

export type SellerIdentityBusinessProof = {
  readonly imageListStr: Scalars['JSONString'];
  readonly layoutTag?: InputMaybe<Scalars['String']>;
  readonly proofId?: InputMaybe<Scalars['String']>;
  readonly proofOfBizDocType: BusinessDocTypes;
  readonly proofOfBizExpirationDate?: InputMaybe<DatetimeInput>;
};

export type SellerIdentityBusinessTaxInfo = {
  readonly businessTaxNumber?: InputMaybe<Scalars['String']>;
};

export type SellerIdentityBusinessTaxInfoIndividual = {
  readonly businessTaxNumber?: InputMaybe<Scalars['String']>;
};

export type SellerIdentityCnBusinessInfo = {
  readonly regBusinessName: Scalars['String'];
  readonly regBusinessNum: Scalars['String'];
};

export type SellerIdentityCnBusinessLocation = {
  readonly baCity: Scalars['String'];
  readonly baCountry: CountryCode;
  readonly baState: Scalars['String'];
  readonly baStreetAddress1: Scalars['String'];
  readonly baZipcode: Scalars['String'];
};

export type SellerIdentityCnBusinessProof = {
  readonly imageListStr: Scalars['JSONString'];
  readonly proofOfBizDocType: BusinessDocTypes;
  readonly proofOfBizExpirationDate?: InputMaybe<DatetimeInput>;
};

export type SellerIdentityCnIdProof = {
  readonly backOfImageListStr: Scalars['JSONString'];
  readonly frontOfImageListStr: Scalars['JSONString'];
  readonly idNumber: Scalars['String'];
  readonly proofOfIdDocType: IdDocTypes;
  readonly proofOfIdExpirationDate?: InputMaybe<DatetimeInput>;
  readonly selfieImageListStr: Scalars['JSONString'];
  readonly wishValidationCode: Scalars['String'];
};

export type SellerIdentityCnSetContactInfoInput = {
  readonly businessLocation: SellerIdentityCnBusinessLocation;
  readonly extraInfo?: InputMaybe<SellerIdentityCnExtraInfo>;
  readonly firstName: Scalars['String'];
  readonly lastName: Scalars['String'];
};

export type SellerIdentityCnSetContactInfoMutation = {
  readonly __typename?: 'SellerIdentityCNSetContactInfoMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentityCnSetProofOfBizIdentityInput = {
  readonly businessInfo: SellerIdentityCnBusinessInfo;
  readonly businessProof: SellerIdentityCnBusinessProof;
  readonly entityType: EntityTypes;
  readonly idProof: SellerIdentityCnIdProof;
  readonly legalBizRepName: Scalars['String'];
};

export type SellerIdentityCnSetProofOfBizIdentityMutation = {
  readonly __typename?: 'SellerIdentityCNSetProofOfBizIdentityMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentityCnSetProofOfIndividualIdentityInput = {
  readonly entityType: EntityTypes;
  readonly idProof: SellerIdentityCnIdProof;
};

export type SellerIdentityCnSetProofOfIndividualIdentityMutation = {
  readonly __typename?: 'SellerIdentityCNSetProofOfIndividualIdentityMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentityCnVerificationMutations = {
  readonly __typename?: 'SellerIdentityCNVerificationMutations';
  readonly setContactInfo?: Maybe<SellerIdentityCnSetContactInfoMutation>;
  readonly setProofOfIdentityBiz?: Maybe<SellerIdentityCnSetProofOfBizIdentityMutation>;
  readonly setProofOfIdentityIndividual?: Maybe<SellerIdentityCnSetProofOfIndividualIdentityMutation>;
};


export type SellerIdentityCnVerificationMutationsSetContactInfoArgs = {
  input: SellerIdentityCnSetContactInfoInput;
};


export type SellerIdentityCnVerificationMutationsSetProofOfIdentityBizArgs = {
  input: SellerIdentityCnSetProofOfBizIdentityInput;
};


export type SellerIdentityCnVerificationMutationsSetProofOfIdentityIndividualArgs = {
  input: SellerIdentityCnSetProofOfIndividualIdentityInput;
};

export type SellerIdentityCnExtraInfo = {
  readonly isReseller?: InputMaybe<Scalars['Boolean']>;
};

export type SellerIdentityExtraInfo = {
  readonly isReseller?: InputMaybe<Scalars['Boolean']>;
};

export type SellerIdentityGetStartedMutation = {
  readonly __typename?: 'SellerIdentityGetStartedMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentityIdProof = {
  readonly backOfImageListStr: Scalars['JSONString'];
  readonly frontOfImageListStr: Scalars['JSONString'];
  readonly idNumber: Scalars['String'];
  readonly layoutTag?: InputMaybe<Scalars['String']>;
  readonly proofOfIdDocType: IdDocTypes;
  readonly proofOfIdExpirationDate?: InputMaybe<DatetimeInput>;
  readonly selfieImageListStr: Scalars['JSONString'];
};

export type SellerIdentityLegalBizRep = {
  readonly birthDate?: InputMaybe<DatetimeInput>;
  readonly firstName: Scalars['String'];
  readonly isLegalRepAndConsentToElectronicSig: Scalars['Boolean'];
  readonly lastName: Scalars['String'];
  readonly middleName?: InputMaybe<Scalars['String']>;
};

export type SellerIdentitySetContactInfoInput = {
  readonly businessLocation: SellerIdentityBusinessLocation;
  readonly extraInfo?: InputMaybe<SellerIdentityExtraInfo>;
};

export type SellerIdentitySetContactInfoMutation = {
  readonly __typename?: 'SellerIdentitySetContactInfoMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentitySetProofOfBizIdentityInput = {
  readonly businessInfo: SellerIdentityBusinessInfo;
  readonly businessProof: ReadonlyArray<SellerIdentityBusinessProof>;
  readonly businessTax?: InputMaybe<SellerIdentityBusinessTaxInfo>;
  readonly entityType: EntityTypes;
  readonly idProof: ReadonlyArray<SellerIdentityIdProof>;
  readonly legalBizRep: SellerIdentityLegalBizRep;
};

export type SellerIdentitySetProofOfBizIdentityMutation = {
  readonly __typename?: 'SellerIdentitySetProofOfBizIdentityMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentitySetProofOfIndividualIdentityInput = {
  readonly businessInfo: SellerIdentityBusinessInfoIndividual;
  readonly businessProof: ReadonlyArray<SellerIdentityBusinessProof>;
  readonly businessTax?: InputMaybe<SellerIdentityBusinessTaxInfoIndividual>;
  readonly entityType: EntityTypes;
  readonly idProof: ReadonlyArray<SellerIdentityIdProof>;
};

export type SellerIdentitySetProofOfIndividualIdentityMutation = {
  readonly __typename?: 'SellerIdentitySetProofOfIndividualIdentityMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentitySetVerificationFlowInput = {
  readonly verificationFlowType: VerificationFlowTypes;
};

export type SellerIdentitySetVerificationFlowMutation = {
  readonly __typename?: 'SellerIdentitySetVerificationFlowMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SellerIdentityVerificationMutations = {
  readonly __typename?: 'SellerIdentityVerificationMutations';
  readonly setContactInfo?: Maybe<SellerIdentitySetContactInfoMutation>;
  readonly setGettingStarted?: Maybe<SellerIdentityGetStartedMutation>;
  readonly setProofOfIdentityBiz?: Maybe<SellerIdentitySetProofOfBizIdentityMutation>;
  readonly setProofOfIdentityIndividual?: Maybe<SellerIdentitySetProofOfIndividualIdentityMutation>;
  readonly setVerificationFlow?: Maybe<SellerIdentitySetVerificationFlowMutation>;
};


export type SellerIdentityVerificationMutationsSetContactInfoArgs = {
  input: SellerIdentitySetContactInfoInput;
};


export type SellerIdentityVerificationMutationsSetProofOfIdentityBizArgs = {
  input: SellerIdentitySetProofOfBizIdentityInput;
};


export type SellerIdentityVerificationMutationsSetProofOfIdentityIndividualArgs = {
  input: SellerIdentitySetProofOfIndividualIdentityInput;
};


export type SellerIdentityVerificationMutationsSetVerificationFlowArgs = {
  input: SellerIdentitySetVerificationFlowInput;
};

export type SellerProfileCountryOption = {
  readonly __typename?: 'SellerProfileCountryOption';
  readonly countryCode: Scalars['String'];
  readonly countryName: Scalars['String'];
  readonly regionList?: Maybe<ReadonlyArray<SellerProfileRegionInformation>>;
};

export type SellerProfileRegionConstants = {
  readonly __typename?: 'SellerProfileRegionConstants';
  readonly countryOptions: ReadonlyArray<SellerProfileCountryOption>;
  readonly genericCountryOptions: Scalars['GenericScalar'];
};

export type SellerProfileRegionInformation = {
  readonly __typename?: 'SellerProfileRegionInformation';
  readonly cityNames?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly regionName: Scalars['String'];
};

export type SellerProfileVerificationDocType =
  | 'articles_of_incorporation'
  | 'business_license'
  | 'certificate_of_incorporation'
  | 'citizenship_card'
  | 'driver_license'
  | 'national_id'
  | 'partnership_agreement'
  | 'passport'
  | 'permanent_resident_card'
  | 'recent_business_returns'
  | 'social_security_card'
  | 'state_id'
  | 'vat_registration_certificate';

export type SellerProfileVerificationStatus =
  | 'APPROVED'
  | 'COMPLETE'
  | 'INCOMPLETE'
  | 'REJECTED'
  | 'REQUEST_INFO'
  | 'REVIEWING';

export type SellerVerificationAdminFeedback = {
  readonly __typename?: 'SellerVerificationAdminFeedback';
  readonly businessAddressIssue?: Maybe<Scalars['String']>;
  readonly countryOfDomicileIssue?: Maybe<Scalars['String']>;
  readonly dateOfBirthIssue?: Maybe<Scalars['String']>;
  readonly entityTypeIssue?: Maybe<Scalars['String']>;
  readonly firstNameIssue?: Maybe<Scalars['String']>;
  readonly isLegalRepAndConsentsToSigIssue?: Maybe<Scalars['String']>;
  readonly lastNameIssue?: Maybe<Scalars['String']>;
  readonly legalRepNameIssue?: Maybe<Scalars['String']>;
  readonly middleNameIssue?: Maybe<Scalars['String']>;
  readonly proofDocIssues?: Maybe<Scalars['JSONString']>;
  readonly registeredBusinessNameIssue?: Maybe<Scalars['String']>;
  readonly registeredBusinessNumIssue?: Maybe<Scalars['String']>;
  readonly verificationFlowIssue?: Maybe<Scalars['String']>;
};

export type SellerVerificationFeedback = {
  readonly __typename?: 'SellerVerificationFeedback';
  readonly businessAddressIssue?: Maybe<Scalars['String']>;
  readonly companyNameIssue?: Maybe<Scalars['String']>;
  readonly countryOfDomicileIssue?: Maybe<Scalars['String']>;
  readonly dateOfBirthIssue?: Maybe<Scalars['String']>;
  readonly entityTypeIssue?: Maybe<Scalars['String']>;
  readonly firstNameIssue?: Maybe<Scalars['String']>;
  readonly lastNameIssue?: Maybe<Scalars['String']>;
  readonly middleNameIssue?: Maybe<Scalars['String']>;
  readonly phoneNumberIssue?: Maybe<Scalars['String']>;
  readonly proofOfIdDocTypeIssue?: Maybe<Scalars['String']>;
  readonly proofOfIdentificationIssue?: Maybe<Scalars['String']>;
};

export type SellerVerificationSchema = {
  readonly __typename?: 'SellerVerificationSchema';
  readonly actionRequired: Scalars['Boolean'];
  readonly adminFeedback?: Maybe<SellerVerificationFeedback>;
  readonly adminLatestFeedback?: Maybe<SellerVerificationAdminFeedback>;
  readonly businessAddress?: Maybe<AddressSchema>;
  readonly canStart: Scalars['Boolean'];
  readonly companyName?: Maybe<Scalars['String']>;
  readonly completedCnVerification?: Maybe<Scalars['Boolean']>;
  readonly dateOfBirth?: Maybe<Datetime>;
  readonly domicileCountry?: Maybe<Country>;
  readonly entityType?: Maybe<UserEntityType>;
  readonly firstName?: Maybe<Scalars['String']>;
  readonly gmvCap?: Maybe<CurrencyValue>;
  readonly gmvCapGracePeriodDays?: Maybe<Scalars['Int']>;
  readonly gmvCapGracePeriodEndDate?: Maybe<Datetime>;
  readonly gmvCapReached: Scalars['Boolean'];
  readonly hasCompleted: Scalars['Boolean'];
  readonly impressionsPaused: Scalars['Boolean'];
  readonly isKycVerification: Scalars['Boolean'];
  readonly isLegalRepAndConsentToElectronicSig?: Maybe<Scalars['Boolean']>;
  readonly kycVerification: KycVerificationSchema;
  readonly lastName?: Maybe<Scalars['String']>;
  readonly lastUpdateTime?: Maybe<Datetime>;
  readonly legalRepName?: Maybe<Scalars['String']>;
  readonly merchantId?: Maybe<Scalars['String']>;
  readonly middleName?: Maybe<Scalars['String']>;
  readonly numSalesCap?: Maybe<Scalars['Int']>;
  readonly paymentsBlocked: Scalars['Boolean'];
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly proofOfDocs?: Maybe<ReadonlyArray<MerchantProofDocSchema>>;
  readonly proofOfIdDocType?: Maybe<SellerProfileVerificationDocType>;
  readonly proofOfIdFiles?: Maybe<ReadonlyArray<MerchantFileSchema>>;
  readonly regBusinessName?: Maybe<Scalars['String']>;
  readonly regBusinessNum?: Maybe<Scalars['String']>;
  readonly status?: Maybe<SellerProfileVerificationStatus>;
  readonly verificationFlowType?: Maybe<VerificationFlowTypes>;
  readonly verificationFlowTypeString?: Maybe<Scalars['String']>;
};

export type SendTestMessage = {
  readonly __typename?: 'SendTestMessage';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SendTestMessageInput = {
  readonly subscription: WebhookSubscriptionInput;
};

export type SentimentType =
  | 'INFO'
  | 'NEGATIVE'
  | 'POSITIVE'
  | 'WARNING';

export type SetWpsPackageTypeInput = {
  readonly orderId: Scalars['ObjectIdType'];
  readonly packageType: WpsPackageType;
};

export type SetWpsPackageTypeMutation = {
  readonly __typename?: 'SetWPSPackageTypeMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ShippableCountryCode =
  | 'AD'
  | 'AL'
  | 'AR'
  | 'AT'
  | 'AU'
  | 'BA'
  | 'BE'
  | 'BG'
  | 'BR'
  | 'CA'
  | 'CH'
  | 'CL'
  | 'CO'
  | 'CR'
  | 'CZ'
  | 'DE'
  | 'DK'
  | 'EE'
  | 'ES'
  | 'FI'
  | 'FR'
  | 'GB'
  | 'GI'
  | 'GR'
  | 'HR'
  | 'HU'
  | 'IE'
  | 'IL'
  | 'IS'
  | 'IT'
  | 'JP'
  | 'KR'
  | 'LI'
  | 'LT'
  | 'LU'
  | 'LV'
  | 'MC'
  | 'MD'
  | 'ME'
  | 'MK'
  | 'MT'
  | 'MX'
  | 'NL'
  | 'NO'
  | 'NZ'
  | 'PE'
  | 'PL'
  | 'PR'
  | 'PT'
  | 'RO'
  | 'RS'
  | 'SE'
  | 'SG'
  | 'SI'
  | 'SK'
  | 'SM'
  | 'UA'
  | 'US'
  | 'VI'
  | 'ZA';

export type ShippingDetailsSchema = {
  readonly __typename?: 'ShippingDetailsSchema';
  readonly city: Scalars['String'];
  readonly country?: Maybe<Country>;
  readonly countryCode: CountryCode;
  readonly name: Scalars['String'];
  readonly neighborhood?: Maybe<Scalars['String']>;
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly provider?: Maybe<ShippingProviderSchema>;
  readonly providerId?: Maybe<Scalars['Int']>;
  readonly region?: Maybe<Scalars['String']>;
  readonly shipNote?: Maybe<Scalars['String']>;
  readonly state?: Maybe<Scalars['String']>;
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: Maybe<Scalars['String']>;
  readonly streetAddress3?: Maybe<Scalars['String']>;
  readonly trackingId?: Maybe<Scalars['String']>;
  readonly verificationState: AddressVerificationState;
  readonly zipcode?: Maybe<Scalars['String']>;
};

export type ShippingOriginSettings = {
  readonly __typename?: 'ShippingOriginSettings';
  readonly destinationRegion: Scalars['String'];
  readonly originCountryCode: Scalars['String'];
  readonly originCountryName?: Maybe<Scalars['String']>;
  readonly shippingType: Scalars['String'];
};

export type ShippingPlanInput = {
  readonly skus: ReadonlyArray<ShippingPlanSkuInput>;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type ShippingPlanSkuInput = {
  readonly dimensions: PackageDimensionsInput;
  readonly quantity: Scalars['Int'];
  readonly variationId: Scalars['ObjectIdType'];
};

export type ShippingPlanSkuSchema = {
  readonly __typename?: 'ShippingPlanSKUSchema';
  readonly dimensions: VariationDimensions;
  readonly quantity: Scalars['Int'];
  readonly sku: Scalars['String'];
  readonly variationId: Scalars['ObjectIdType'];
  readonly weight: Weight;
};

export type ShippingPlanSchema = {
  readonly __typename?: 'ShippingPlanSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly skus?: Maybe<ReadonlyArray<ShippingPlanSkuSchema>>;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type ShippingProfileCollectionSchema = {
  readonly __typename?: 'ShippingProfileCollectionSchema';
  readonly shippingProfileCount: Scalars['Int'];
  readonly shippingProfiles: ReadonlyArray<ShippingProfileSchema>;
};


export type ShippingProfileCollectionSchemaShippingProfileCountArgs = {
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ShippingProfileSearchType>;
};


export type ShippingProfileCollectionSchemaShippingProfilesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ShippingProfileSearchType>;
};

export type ShippingProfileLinkInput = {
  readonly productIds: ReadonlyArray<Scalars['ObjectIdType']>;
  readonly shippingProfileId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type ShippingProfileMutations = {
  readonly __typename?: 'ShippingProfileMutations';
  readonly linkShippingProfile?: Maybe<LinkShippingProfile>;
  readonly removeShippingProfile?: Maybe<RemoveShippingProfile>;
  readonly upsertShippingProfile?: Maybe<UpsertShippingProfile>;
};


export type ShippingProfileMutationsLinkShippingProfileArgs = {
  input?: InputMaybe<ShippingProfileLinkInput>;
};


export type ShippingProfileMutationsRemoveShippingProfileArgs = {
  input?: InputMaybe<ShippingProfileRemoveInput>;
};


export type ShippingProfileMutationsUpsertShippingProfileArgs = {
  input?: InputMaybe<ShippingProfileUpsertInput>;
};

export type ShippingProfileRemoveInput = {
  readonly idsToRemove?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type ShippingProfileSchema = {
  readonly __typename?: 'ShippingProfileSchema';
  readonly description: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly linkedProductCount: Scalars['Int'];
  readonly name: Scalars['String'];
  readonly shippingDetailsPerDestination?: Maybe<ReadonlyArray<DestinationShippingProfileSchema>>;
};

export type ShippingProfileSearchType =
  | 'PRODUCT_ID'
  | 'PROFILE_ID'
  | 'PROFILE_NAME';

export type ShippingProfileUpsertInput = {
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly shippingDetailsPerDestination?: InputMaybe<ReadonlyArray<DestinationShippingProfileInput>>;
};

export type ShippingProviderCountryInput = {
  readonly countryCode: CountryCode;
  readonly timelineOperations?: InputMaybe<ReadonlyArray<ShippingProviderOperationInput>>;
};

export type ShippingProviderCountrySchema = {
  readonly __typename?: 'ShippingProviderCountrySchema';
  readonly country: Country;
  readonly timelineOperations?: Maybe<ReadonlyArray<ShippingProviderOperationSchema>>;
};

export type ShippingProviderInput = {
  readonly countryRequired?: InputMaybe<Scalars['Boolean']>;
  readonly inputReleaseTime?: InputMaybe<DatetimeInput>;
  readonly inputReleaseType?: InputMaybe<ShippingProviderOperationTypeEnum>;
  readonly inputRestrictCountries?: InputMaybe<ReadonlyArray<ShippingProviderCountryInput>>;
  readonly inputTrackingSources?: InputMaybe<ReadonlyArray<ShippingProviderTrackerInput>>;
  readonly inputWtsTrackingSources?: InputMaybe<ReadonlyArray<ShippingProviderTrackerInput>>;
  readonly isCnProvider?: InputMaybe<Scalars['Boolean']>;
  readonly name: Scalars['String'];
  readonly needAddTimelineOperation?: InputMaybe<Scalars['Boolean']>;
  readonly originCountry?: InputMaybe<CountryCode>;
  readonly postalCodeRequired?: InputMaybe<Scalars['Boolean']>;
  readonly providerId: Scalars['Int'];
  readonly providerUrl: Scalars['String'];
  readonly shippingProviderType?: InputMaybe<ShippingProviderState>;
  readonly trackingShipDateRequired?: InputMaybe<Scalars['Boolean']>;
  readonly trackingUrl: Scalars['String'];
};

export type ShippingProviderOperationInput = {
  readonly dateTime?: InputMaybe<DatetimeInput>;
  readonly type?: InputMaybe<ShippingProviderOperationTypeEnum>;
};

export type ShippingProviderOperationSchema = {
  readonly __typename?: 'ShippingProviderOperationSchema';
  readonly dateTime?: Maybe<Datetime>;
  readonly type?: Maybe<ShippingProviderOperationTypeEnum>;
};

export type ShippingProviderOperationTypeEnum =
  | 'ADD_SHIPPING_PROVIDER'
  | 'REMOVE_SHIPPING_PROVIDER';

export type ShippingProviderPolicySchema = {
  readonly __typename?: 'ShippingProviderPolicySchema';
  readonly allowedProviderType: Scalars['String'];
  readonly condition?: Maybe<Scalars['String']>;
  readonly destinationCountry?: Maybe<Country>;
  readonly note?: Maybe<Scalars['String']>;
  readonly origin?: Maybe<Scalars['String']>;
  readonly shippingProviders: ReadonlyArray<ShippingProviderSchema>;
  readonly wishpostChannels?: Maybe<ReadonlyArray<Scalars['String']>>;
};

export type ShippingProviderSchema = {
  readonly __typename?: 'ShippingProviderSchema';
  readonly countryRequired?: Maybe<Scalars['Boolean']>;
  readonly ddpSupportedOriginCountries?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly id: Scalars['Int'];
  readonly isCnProvider?: Maybe<Scalars['Boolean']>;
  readonly isQualified?: Maybe<Scalars['Boolean']>;
  readonly lastUpdate?: Maybe<Datetime>;
  readonly name: Scalars['String'];
  readonly originCountry?: Maybe<Country>;
  readonly postalCodeRequired?: Maybe<Scalars['Boolean']>;
  readonly providerUrl: Scalars['String'];
  readonly qualifiedNote?: Maybe<Scalars['String']>;
  readonly restrictionCountries?: Maybe<ReadonlyArray<ShippingProviderCountrySchema>>;
  readonly shippingProviderType?: Maybe<ShippingProviderState>;
  readonly status: Scalars['Boolean'];
  readonly timelineOperations?: Maybe<ReadonlyArray<ShippingProviderOperationSchema>>;
  readonly trackers?: Maybe<ReadonlyArray<ShippingProviderTrackerSchema>>;
  readonly trackingFormats?: Maybe<ReadonlyArray<TrackingIdFormatSchema>>;
  readonly trackingShipDateRequired?: Maybe<Scalars['Boolean']>;
  readonly trackingUrl: Scalars['String'];
  readonly wtsTrackers?: Maybe<ReadonlyArray<ShippingProviderTrackerSchema>>;
};


export type ShippingProviderSchemaTrackingFormatsArgs = {
  destCountryCode?: InputMaybe<CountryCode>;
};

export type ShippingProviderSearchType =
  | 'NAME'
  | 'PROVIDER_ID';

export type ShippingProviderState =
  | 'ACTIVE'
  | 'DELETED'
  | 'NON_TEST_SERVICE'
  | 'TEST_SERVICE'
  | 'UNREGISTER_TEST_SERVICE';

export type ShippingProviderTrackerInput = {
  readonly ratio: Scalars['Int'];
  readonly trackingSlug: Scalars['String'];
  readonly trackingSource: TrackingSourceEnum;
};

export type ShippingProviderTrackerSchema = {
  readonly __typename?: 'ShippingProviderTrackerSchema';
  readonly ratio: Scalars['Int'];
  readonly trackingName: Scalars['String'];
  readonly trackingSlug?: Maybe<Scalars['String']>;
  readonly trackingSource: TrackingSourceEnum;
};

export type ShippingSchema = {
  readonly __typename?: 'ShippingSchema';
  readonly calculatedShippingEnabled?: Maybe<Scalars['Boolean']>;
  readonly defaultShipping?: Maybe<ReadonlyArray<DefaultShippingSchema>>;
  readonly domesticShipping?: Maybe<ReadonlyArray<DomesticShippingSchema>>;
  readonly maxCalculatedShippingPrice?: Maybe<CurrencyValue>;
  readonly maxMerchantSetShippingPrice?: Maybe<CurrencyValue>;
  readonly warehouseCountryShipping?: Maybe<ReadonlyArray<WarehouseCountryShippingSchema>>;
  readonly wishpostEstimatedShipping?: Maybe<ReadonlyArray<WishPostShippingSchema>>;
};


export type ShippingSchemaMaxCalculatedShippingPriceArgs = {
  countries?: InputMaybe<ReadonlyArray<CountryCode>>;
};


export type ShippingSchemaMaxMerchantSetShippingPriceArgs = {
  countries?: InputMaybe<ReadonlyArray<CountryCode>>;
};


export type ShippingSchemaWarehouseCountryShippingArgs = {
  shippingTypes?: InputMaybe<ReadonlyArray<WarehouseShippingType>>;
};

export type ShippingSettingMutations = {
  readonly __typename?: 'ShippingSettingMutations';
  readonly updateShippingSetting?: Maybe<UpdateShippingSetting>;
};


export type ShippingSettingMutationsUpdateShippingSettingArgs = {
  calculatedShippingAccountConfig?: InputMaybe<Scalars['Int']>;
  countryShipping?: InputMaybe<ReadonlyArray<CountryShippingSetting>>;
  flatRateShippingOptInStatus?: InputMaybe<Scalars['Boolean']>;
  isUpsert?: InputMaybe<Scalars['Boolean']>;
  otherCountriesShipping?: InputMaybe<OtherCountriesShippingSetting>;
  useShopifyShippingRate?: InputMaybe<Scalars['Boolean']>;
};

export type ShippingSettingsSchema = {
  readonly __typename?: 'ShippingSettingsSchema';
  readonly country: Country;
  readonly enabled: Scalars['Boolean'];
  readonly price?: Maybe<CurrencyValue>;
};

export type ShopifyOnboardingAuthInfo = {
  readonly __typename?: 'ShopifyOnboardingAuthInfo';
  readonly apiKey: Scalars['String'];
  readonly authToken?: Maybe<Scalars['String']>;
  readonly shopUrl?: Maybe<Scalars['String']>;
};

export type ShopifySchema = {
  readonly __typename?: 'ShopifySchema';
  readonly apiKey?: Maybe<Scalars['String']>;
  readonly eligibleProductCount: Scalars['Int'];
  readonly hasFlatRates: Scalars['Boolean'];
  readonly onboardingAuthToken: Scalars['String'];
  readonly preorderCount: Scalars['Int'];
  readonly shippingProfileId: Scalars['String'];
  readonly shopUrl: Scalars['String'];
};

export type SignupSource =
  | 'SIGNUP_EXPRESS'
  | 'SIGNUP_GREEN_CHANNEL'
  | 'SIGNUP_LEGACY'
  | 'SIGNUP_MERCHANT_PLUS'
  | 'SIGNUP_MOBILE'
  | 'SIGNUP_V3'
  | 'SIGNUP_V4'
  | 'SIGNUP_V5';

export type SortByOrder =
  | 'ASC'
  | 'DESC';

export type SortOrderFulfillmentSpeed =
  | 'FulfillmentSpeed'
  | 'TransactionDate';

export type SortOrderTransactionDateField =
  | 'TransactionDate';

export type SortOrderType =
  | 'ASC'
  | 'DESC';

export type SortProductQualityRefundField =
  | 'QualityRefundRate';

export type SortProductRatingField =
  | 'AverageRating';

export type SpecialOrderProgramSchema = {
  readonly __typename?: 'SpecialOrderProgramSchema';
  readonly name: Scalars['String'];
  readonly taskLink?: Maybe<Scalars['String']>;
};

export type StaticFines = {
  readonly __typename?: 'StaticFines';
  readonly cancellationFine: CurrencyValue;
};

export type Status =
  | 'CANCELLED'
  | 'DEDUCTED'
  | 'DELAYING'
  | 'PENDING';

export type StoreRating = {
  readonly __typename?: 'StoreRating';
  readonly comment?: Maybe<Scalars['String']>;
  readonly date?: Maybe<Scalars['String']>;
  readonly orderIds: ReadonlyArray<Scalars['String']>;
  readonly rating?: Maybe<Scalars['Int']>;
  readonly refundReason?: Maybe<Scalars['String']>;
  readonly transactionId?: Maybe<Scalars['String']>;
};

export type StoreReviewSummarySchema = {
  readonly __typename?: 'StoreReviewSummarySchema';
  readonly averageRating: Scalars['Float'];
  readonly count: Scalars['Int'];
};

export type StorefrontCustomizationSchema = {
  readonly __typename?: 'StorefrontCustomizationSchema';
  readonly feeds: ReadonlyArray<StorefrontFeedSchema>;
  readonly id: Scalars['ObjectIdType'];
  readonly visualTheme: StorefrontVisualThemeSchema;
};

export type StorefrontFeedSchema = {
  readonly __typename?: 'StorefrontFeedSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
};

export type StorefrontSchema = {
  readonly __typename?: 'StorefrontSchema';
  readonly creationDate: Datetime;
  readonly customization?: Maybe<StorefrontCustomizationSchema>;
  readonly location?: Maybe<Country>;
  readonly name: Scalars['String'];
  readonly reviewSummary: StoreReviewSummarySchema;
};

export type StorefrontServiceSchema = {
  readonly __typename?: 'StorefrontServiceSchema';
  readonly forMerchant?: Maybe<StorefrontSchema>;
  readonly merchantEnabled: Scalars['Boolean'];
  readonly serviceEnabled: Scalars['Boolean'];
};


export type StorefrontServiceSchemaForMerchantArgs = {
  id: Scalars['ObjectIdType'];
};


export type StorefrontServiceSchemaMerchantEnabledArgs = {
  id: Scalars['ObjectIdType'];
};

export type StorefrontVisualThemeSchema = {
  readonly __typename?: 'StorefrontVisualThemeSchema';
  readonly name: Scalars['String'];
  readonly primaryColor: Scalars['String'];
  readonly secondaryColor: Scalars['String'];
};

export type SubmitAttributeExtraction = {
  readonly __typename?: 'SubmitAttributeExtraction';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitAttributeExtractionInput = {
  readonly attributeExtractionResult: ReadonlyArray<ExtractionResultInput>;
  readonly jobId: Scalars['ObjectIdType'];
};

export type SubmitCategoryClassification = {
  readonly __typename?: 'SubmitCategoryClassification';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitCategoryClassificationInput = {
  readonly categoryId?: InputMaybe<Scalars['String']>;
  readonly categoryPath?: InputMaybe<Scalars['String']>;
  readonly jobId: Scalars['ObjectIdType'];
  readonly treeVersion?: InputMaybe<Scalars['String']>;
};

export type SubmitCategoryManualOverride = {
  readonly __typename?: 'SubmitCategoryManualOverride';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitCategoryManualOverrideInput = {
  readonly categoryId: Scalars['Int'];
  readonly categoryPath: Scalars['String'];
  readonly categoryTreeId: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly l1CategoryId: Scalars['Int'];
  readonly productId: Scalars['String'];
};

export type SubmitProductVideoContentManualReview = {
  readonly __typename?: 'SubmitProductVideoContentManualReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitProductVideoContentManualReviewInput = {
  readonly merchantId: Scalars['ObjectIdType'];
  readonly productId: Scalars['ObjectIdType'];
  readonly videoId: Scalars['ObjectIdType'];
  readonly videoQuality: VideoQualityLevel;
  readonly videoRelatesToProduct: Scalars['Boolean'];
  readonly videoTraits: ProductVideoContentReviewTraits;
};

export type SubmitProductVideoContentReview = {
  readonly __typename?: 'SubmitProductVideoContentReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitProductVideoContentReviewInput = {
  readonly jobId: Scalars['ObjectIdType'];
  readonly videoQuality: VideoQualityLevel;
  readonly videoRelatesToProduct: Scalars['Boolean'];
  readonly videoTraits: ProductVideoContentReviewTraits;
};

export type SubmitProductVideoIpManualReview = {
  readonly __typename?: 'SubmitProductVideoIPManualReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitProductVideoIpManualReviewInput = {
  readonly blurredInformationCategory?: InputMaybe<BlurredInformationCategory>;
  readonly ipInfringedBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly ipViolationReason?: InputMaybe<ProductVideoIpViolationReason>;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly productId: Scalars['ObjectIdType'];
  readonly videoId: Scalars['ObjectIdType'];
};

export type SubmitProductVideoIpReview = {
  readonly __typename?: 'SubmitProductVideoIPReview';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubmitProductVideoIpReviewInput = {
  readonly blurredInformationCategory?: InputMaybe<BlurredInformationCategory>;
  readonly ipInfringedBrandId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly ipViolationReason?: InputMaybe<ProductVideoIpViolationReason>;
  readonly jobId: Scalars['ObjectIdType'];
};

export type SubmitWarehouseVerificationRequestInput = {
  readonly documentUrls: ReadonlyArray<Scalars['String']>;
  readonly warehouseId: Scalars['ObjectIdType'];
};

export type SubmitWarehouseVerificationRequestMutation = {
  readonly __typename?: 'SubmitWarehouseVerificationRequestMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type SubscriptionEndpointType =
  | 'ARN'
  | 'URL';

export type SwedenConfirmedDeliveredCarrierTypes = {
  readonly __typename?: 'SwedenConfirmedDeliveredCarrierTypes';
  readonly carrierId: Scalars['Int'];
  readonly swedenDeliveredCarrierTypes: ReadonlyArray<SwedenDeliveredCarrierType>;
};

export type SwedenDeliveredCarrierType =
  | 'IntlEUCarrier'
  | 'IntraEUCarrier';

export type TaggingJobState =
  | 'AWAITING_IN_HOUSE_TAGGER'
  | 'AWAITING_MERCHANT_RELEASE'
  | 'AWAITING_ML'
  | 'AWAITING_RESOLVER'
  | 'AWAITING_TAGGER'
  | 'COMPLETE'
  | 'DISABLED_OR_ALREADY_INAPPROPRIATE'
  | 'IMAGE_MISSING'
  | 'OVERRIDDEN'
  | 'OVERRIDDEN_COMPLETE';

export type TaggingMlResult =
  | 'APPROVED'
  | 'REJECTED'
  | 'UNSURE';

export type TaggingMutations = {
  readonly __typename?: 'TaggingMutations';
  readonly createProductTaxonomyCategoryDispute?: Maybe<CreateProductTaxonomyCategoryDispute>;
  readonly deleteDedupImage?: Maybe<DeleteDedupImage>;
  readonly getAndClaimProductTaxonomyCategoryDispute?: Maybe<GetAndClaimProductTaxonomyCategoryDisputeForReview>;
  readonly markProductTaxonomyCategoryDisputeUnchanged?: Maybe<MarkProductTaxonomyCategoryDisputeUnchanged>;
  readonly markProductTaxonomyCategoryDisputeUpdated?: Maybe<MarkProductTaxonomyCategoryDisputeUpdated>;
  readonly platformSweeps?: Maybe<PlatformSweepMutations>;
  readonly productVideoContentTag?: Maybe<ProductVideoContentTagMutations>;
  readonly productVideoIpTag?: Maybe<ProductVideoIpTagMutations>;
  readonly submitAttributeExtraction?: Maybe<SubmitAttributeExtraction>;
  readonly submitCategoryClassification?: Maybe<SubmitCategoryClassification>;
  readonly submitCategoryManualOverride?: Maybe<SubmitCategoryManualOverride>;
  readonly updateDedupImage?: Maybe<UpdateDedupImage>;
};


export type TaggingMutationsCreateProductTaxonomyCategoryDisputeArgs = {
  input: CreateProductTaxonomyCategoryDisputeInput;
};


export type TaggingMutationsDeleteDedupImageArgs = {
  input: DeleteDedupImageInput;
};


export type TaggingMutationsGetAndClaimProductTaxonomyCategoryDisputeArgs = {
  input?: InputMaybe<GetAndClaimProductTaxonomyCategoryDisputeForReviewInput>;
};


export type TaggingMutationsMarkProductTaxonomyCategoryDisputeUnchangedArgs = {
  input: MarkProductTaxonomyCategoryDisputeUnchangedInput;
};


export type TaggingMutationsMarkProductTaxonomyCategoryDisputeUpdatedArgs = {
  input: MarkProductTaxonomyCategoryDisputeUpdatedInput;
};


export type TaggingMutationsSubmitAttributeExtractionArgs = {
  input: SubmitAttributeExtractionInput;
};


export type TaggingMutationsSubmitCategoryClassificationArgs = {
  input: SubmitCategoryClassificationInput;
};


export type TaggingMutationsSubmitCategoryManualOverrideArgs = {
  input: SubmitCategoryManualOverrideInput;
};


export type TaggingMutationsUpdateDedupImageArgs = {
  input: UpdateDedupImageInput;
};

export type TaggingServiceSchema = {
  readonly __typename?: 'TaggingServiceSchema';
  readonly attributeExtractionTaggerJob?: Maybe<AttributeExtractionTaggerJobSchema>;
  readonly categoryClassificationTaggerJob?: Maybe<CategoryClassificationTaggerJobSchema>;
  readonly dedupImageLibHub?: Maybe<DedupImageLibraryHub>;
  readonly generalTaggingManagement?: Maybe<GeneralTaggingManagement>;
  readonly inappropriateViolationTaggingManagement?: Maybe<InappropriateViolationTaggingManagement>;
  readonly ipViolationTaggingManagement?: Maybe<IpViolationTaggingManagement>;
  readonly misleadingViolationTaggingManagement?: Maybe<MisleadingViolationTaggingManagement>;
  readonly productTaggingStatus?: Maybe<ProductTaggingStatusSchema>;
  readonly productTaxonomyCategoryDisputeHub?: Maybe<ProductTaxonomyCategoryDisputeHub>;
  readonly productVideoContentTaggerJob?: Maybe<ProductVideoTaggerJobSchema>;
  readonly productVideoIpTaggerJob?: Maybe<ProductVideoTaggerJobSchema>;
};


export type TaggingServiceSchemaAttributeExtractionTaggerJobArgs = {
  taskId?: InputMaybe<Scalars['String']>;
};


export type TaggingServiceSchemaProductTaggingStatusArgs = {
  productId: Scalars['ObjectIdType'];
};

export type TaggingViolationReason = {
  readonly __typename?: 'TaggingViolationReason';
  readonly displayName?: Maybe<Scalars['String']>;
  readonly internalDisplayName: Scalars['String'];
  readonly isBrandTaggingReason: Scalars['Boolean'];
  readonly reason: CounterfeitReasonCode;
  readonly subcategories?: Maybe<ReadonlyArray<TaggingViolationSubcategory>>;
};

export type TaggingViolationSubReasonCode =
  | 'ALCOHOL'
  | 'AMMUNITION'
  | 'ANIME_PRODUCTS'
  | 'ANTI_GAY'
  | 'ASSAULT_WEAPON_CONVERSION_PIECES'
  | 'BENZENE'
  | 'BEVERAGES'
  | 'BLOOD_COLLECTION_TUBES'
  | 'BLUE_RAY'
  | 'BLURRED_LOGOS'
  | 'BLURRED_TAGS'
  | 'BLURRED_WATERMARKS'
  | 'BRANDING_CHANGE'
  | 'BRAND_DISCREPANCY'
  | 'BRASS_OR_METAL_KNUCKLES'
  | 'BULLION'
  | 'BULLYING'
  | 'BUTANE'
  | 'CASSETTE_TAPE'
  | 'CATHETERS'
  | 'CD'
  | 'CHILD_CARSEAT'
  | 'CHILD_HARNESS'
  | 'CHLOROFORM'
  | 'CIGARETTE'
  | 'CLAIM_FREE_PRODUCT_OFFERS'
  | 'CN_PROHIBITED_PRODUCT_AIRSOFT'
  | 'CN_PROHIBITED_PRODUCT_BB_GUNS'
  | 'CN_PROHIBITED_PRODUCT_IMITATION_FIREARMS'
  | 'CN_PROHIBITED_PRODUCT_STUN_GUNS'
  | 'CN_PROHIBITED_PRODUCT_TASERS'
  | 'COCKROACH_CHALK'
  | 'COMPETITOR_WATERMARK'
  | 'CONFEDERATE_FLAG'
  | 'CONTACTS'
  | 'CONTACT_LENS_SOLUTION'
  | 'CONTAINS_HARMFUL_CONTENT'
  | 'COUNTERFEIT_CURRENCY'
  | 'CPSC_VIOLATION'
  | 'CUSTOMER_FEEDBACK_ABOUT_FALSE_SPEC'
  | 'DANGEROUS_CPA_VIOLATION'
  | 'DANGEROUS_NON_CPA_VIOLATION'
  | 'DOMESTIC_TERRORISTS_MEMORABILIA'
  | 'DVD'
  | 'ECIGARETTE_VAPE'
  | 'ENDANGERED_SPECIES'
  | 'EPA_EMMISIONS_DEFEAT_US'
  | 'EPA_PESTICIDES_US'
  | 'EROTIC_SETUPS'
  | 'EURO_CURRENCY'
  | 'EXPLOSIVE_WEAPONS'
  | 'EYELASH_GROWTH_SERUM'
  | 'FEEDBACK_ABOUT_NO_PRODUCT'
  | 'FIREARMS_AND_GUNS'
  | 'FOOD'
  | 'FULLY_EXPOSED_ANUS'
  | 'FULLY_EXPOSED_GENITAL'
  | 'FULLY_EXPOSED_NIPPLE'
  | 'FULLY_LOADED_TV_BOXES'
  | 'GIFT_CARDS_OR_ACCESS_CODES'
  | 'GLYPHOSATE'
  | 'GRADUAL_CHANGE'
  | 'GUN_BUILDING_KITS'
  | 'GUN_SILENCERS'
  | 'GUN_SILENCER_COMPONENTS'
  | 'GUN_SILENCER_MISUSE'
  | 'HATEFUL_CORONAVIRUS_PRODUCTS'
  | 'HATEFUL_IMAGERY'
  | 'HATE_GROUPS'
  | 'HATE_SPEECH'
  | 'HIDDEN_SEX_TOYS'
  | 'HITLER_IMAGERY'
  | 'HOOKAH_PEN'
  | 'HOUSEKEEPING_TOUR_PACKAGES'
  | 'HOVERBOARDS'
  | 'HUMAN_BY_PRODUCTS'
  | 'HUMAN_GROWTH_HORMONE'
  | 'HYPERREALISTIC_CONTENT'
  | 'IMAGE_NOT_PRODUCT'
  | 'IMAGE_OF_MASTURBATION'
  | 'IMAGE_OF_PENETRATION'
  | 'IMAGE_OR_TITLE_CHANGE'
  | 'IMITATION_CURRENCY'
  | 'INJECTABLE_ITEMS'
  | 'JAMMERS'
  | 'KKK_PARAPHERNALIA'
  | 'LASER_DISC'
  | 'LASER_POINTERS'
  | 'LISTING_PROMOTES_HIDING_PROHIBITED_SUBSTANCE'
  | 'LIVE_ANIMAL'
  | 'MAGNETS_AS_TOYS'
  | 'MARIJUANA'
  | 'MERCAHNT_CONTACT_OR_REFERAL'
  | 'METAL_NINJA_STARS'
  | 'MISLEADING_CLAIMS'
  | 'MISLEADING_KEY_FEATURE'
  | 'MISLEADING_WIG'
  | 'MISSING_KEY_REQUIREMENTS'
  | 'MOD_BOXES'
  | 'NAZI_MEMORABILIA'
  | 'NON_CLINICAL_CONTENT'
  | 'NOT_DESCRIBE_AVAILABLE_QUANTITY'
  | 'NOT_FOCUS_MAIN_IMAGE'
  | 'NOT_FOCUS_OF_MAIN_IMAGE'
  | 'NUDE_MINOR_IN_NON_SEXUAL_CONTEXT'
  | 'ODOMETER_CORRECTION_TOOLS'
  | 'OTC_MEDICATION'
  | 'OTHER_WHITE_SUPREMACY_MEMORABILIA'
  | 'OXIMETERS'
  | 'PENICILLIN'
  | 'PESTICIDES'
  | 'PET_FOOD'
  | 'PILL_PRESSES'
  | 'PLANTS'
  | 'PLANT_SEEDS'
  | 'PLANT_SEED_WITH_IMPOSSIBLE_CLAIM'
  | 'PLANT_SEED_WITH_IMPOSSIBLE_CLAIM_V2'
  | 'POPPERS_AND_MUSCLE_RELAXANTS'
  | 'PRESCRIPTION_STRENGTH_ITEMS'
  | 'PRICE_POINT_UNREASONABLE'
  | 'PRODUCT_VARIANCE'
  | 'PROHIBITED_CUSTOMS_CN'
  | 'PROHIBITED_SUBSTANCE_PIPE'
  | 'PROUD_BOY_MEMORABILIA'
  | 'PURCHANSED_FOLLOWERS'
  | 'QANON_MEMORABILIA'
  | 'RACIAL_CLEANSING'
  | 'RANDOM_PRODUCT'
  | 'RATING_SHOW_WRONG_PRODUCT'
  | 'RECORDS'
  | 'RECREATIONAL_DRUGS_AND_CHEMICALS'
  | 'REVIEW_SHOW_WRONG_PRODUCT'
  | 'SEATBELTS'
  | 'SELF_FEEDING_BABY_BOTTLE_CLIPS'
  | 'SELF_FEEDING_BABY_PILLOWS'
  | 'SEXUALLY_EXPLICIT_CONTENT'
  | 'SEXUALLY_EXPLICIT_MATERIAL'
  | 'SEXUALLY_SUGGESTIVE_CONTENT'
  | 'SEXUAL_CONTENT_INCLUDING_MINOR'
  | 'SIZE_COLOR_OPTION_GAMING'
  | 'SIZE_MISPRESENTATION'
  | 'SIZE_MISREPRESENTATION_MAIN_IMAGE'
  | 'SIZE_NOT_AS_ADVERTISED'
  | 'SOFTWARE'
  | 'SPY_CAMERAS'
  | 'STANDALONE_LITHIUM_BATTERY'
  | 'SUBSCRIPTIONS_OR_MEMBERSHIPS'
  | 'SURPRISE_BOX'
  | 'SYRINGES'
  | 'TERRORIST_PROMOTION_GROUPS'
  | 'TIRE_SPIKES'
  | 'TITLE_IMAGE_MISMATCH'
  | 'TOBACCO'
  | 'TOBACCO_SEEDS'
  | 'UNAUTHROIZED_USE_WISH'
  | 'UNCENSORED_EROTIC_ANIME'
  | 'UNREALISTIC_HEALTH_CLAIM_PRODUCTS'
  | 'UNREASONABLE_SPEC'
  | 'UNSUPPORTED_MEDICAL_CLAIMS'
  | 'UNVERFIED_PRICE_INFORMATION'
  | 'UNVERIFIED_FREE_SHIPPING'
  | 'UNVERIFIED_LOGO'
  | 'UNVERIFIED_SHIPPING_TIME_FRAME'
  | 'UNVERIFIED_WARRANTIES'
  | 'US_PROP_MONEY'
  | 'VALUE_VARIANCE'
  | 'VAPE_LIQUID'
  | 'VHS_TAPE'
  | 'VIDEO_GAME'
  | 'VIRTUAL_MONEY'
  | 'VITAMINS_AND_SUPPLEMENTS';

export type TaggingViolationSubcategory = {
  readonly __typename?: 'TaggingViolationSubcategory';
  readonly displayName?: Maybe<Scalars['String']>;
  readonly internalDisplayName: Scalars['String'];
  readonly subcategory?: Maybe<TaggingViolationSubReasonCode>;
};

export type TakedownRequestContestSchema = {
  readonly __typename?: 'TakedownRequestContestSchema';
  readonly contestId: Scalars['ObjectIdType'];
  readonly merchant?: Maybe<MerchantSchema>;
  readonly product: ProductSchema;
  readonly source: TakedownRequestContestSource;
  readonly state: TakedownRequestContestState;
};

export type TakedownRequestContestSource =
  | 'IMAGE_MATCH'
  | 'NONE'
  | 'REPORTED';

export type TakedownRequestContestState =
  | 'APPROVED'
  | 'PENDING_REVIEW'
  | 'REJECTED';

export type TakedownRequestMutations = {
  readonly __typename?: 'TakedownRequestMutations';
  readonly createTakedownRequest?: Maybe<CreateTakedownRequest>;
};


export type TakedownRequestMutationsCreateTakedownRequestArgs = {
  input?: InputMaybe<CreateTakedownRequestInput>;
};

export type TakedownRequestSchema = {
  readonly __typename?: 'TakedownRequestSchema';
  readonly brand: BrandSchema;
  readonly contact?: Maybe<Scalars['String']>;
  readonly email?: Maybe<Scalars['String']>;
  readonly id: Scalars['ObjectIdType'];
  readonly name?: Maybe<Scalars['String']>;
  readonly notes?: Maybe<Scalars['String']>;
  readonly numProducts: Scalars['Int'];
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly products: ReadonlyArray<TakedownRequestContestSchema>;
  readonly reportedDate: Datetime;
  readonly state: TakedownRequestState;
  readonly typeOfInfringement: TypeOfInfringement;
};


export type TakedownRequestSchemaNumProductsArgs = {
  states?: InputMaybe<ReadonlyArray<TakedownRequestContestState>>;
};


export type TakedownRequestSchemaProductsArgs = {
  count?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  states?: InputMaybe<ReadonlyArray<TakedownRequestContestState>>;
};

export type TakedownRequestState =
  | 'ACTIVE'
  | 'COMPLETE'
  | 'PENDING';

export type TaxAuthoritySchema = {
  readonly __typename?: 'TaxAuthoritySchema';
  readonly id: Scalars['String'];
  readonly name: Scalars['String'];
  readonly officialName?: Maybe<Scalars['String']>;
  readonly type: TaxAuthorityType;
};

export type TaxAuthorityType =
  | 'ADDITIONAL_FEE'
  | 'ADDITIONAL_SALES_AND_USE_TAX'
  | 'BMP'
  | 'CBT'
  | 'CGST'
  | 'CITY_AMUSEMENT'
  | 'CITY_FEES'
  | 'CITY_FOOD_BEVERAGE'
  | 'CITY_RENTAL'
  | 'CITY_SALES_USE'
  | 'CLT'
  | 'COF'
  | 'COM'
  | 'COMPENSATION_CESS'
  | 'CONSUMPTION_TAX'
  | 'COUNTY_AMUSEMENT'
  | 'COUNTY_FEES'
  | 'COUNTY_FOOD_BEVERAGE'
  | 'COUNTY_RENTAL'
  | 'COUNTY_SALES_USE'
  | 'CST'
  | 'CSU'
  | 'DISTRICT_AMUSEMENT'
  | 'DISTRICT_FEES'
  | 'DISTRICT_FOOD_BEVERAGE'
  | 'DISTRICT_RENTAL'
  | 'DISTRICT_SALES_USE'
  | 'DPH'
  | 'EEE'
  | 'EXC'
  | 'FCP'
  | 'FCP_ST'
  | 'FEE'
  | 'GCT'
  | 'GENERAL_SALES_AND_USE_TAX'
  | 'GIT'
  | 'GST'
  | 'HST'
  | 'ICMS'
  | 'ICMS_CR'
  | 'ICMS_PF'
  | 'ICMS_PMC'
  | 'ICMS_RD'
  | 'ICMS_ST'
  | 'ICMS_ST_CNAE'
  | 'ICMS_ST_CNAE_IVA'
  | 'IGI'
  | 'IGIC'
  | 'IGST'
  | 'IGV'
  | 'II'
  | 'IMI'
  | 'IPI'
  | 'IPSI'
  | 'ISS'
  | 'IST'
  | 'ISV'
  | 'ITBIS'
  | 'ITBMS'
  | 'IVA'
  | 'KDV'
  | 'MOT'
  | 'MRDT'
  | 'MVA'
  | 'MWST'
  | 'NHIL'
  | 'OMB'
  | 'PCL'
  | 'PDV'
  | 'PIS'
  | 'PST'
  | 'PVM'
  | 'QST'
  | 'SCT'
  | 'SGST'
  | 'ST'
  | 'STATE_AMUSEMENT'
  | 'STATE_FEES'
  | 'STATE_FOOD_BEVERAGE'
  | 'STATE_RENTAL'
  | 'STATE_SALES_USE'
  | 'SUFRAMA'
  | 'SUT'
  | 'TELECOM'
  | 'THSBT'
  | 'TOURISM_TAX'
  | 'TOURISM_TAX_ADDITIONAL'
  | 'TT'
  | 'TVA'
  | 'UTGST'
  | 'VAT';

export type TaxConstants = {
  readonly __typename?: 'TaxConstants';
  readonly ca: CaTaxConstants;
  readonly marketplaceCountries: ReadonlyArray<TaxMarketplaceCountry>;
  readonly marketplaceUnions: ReadonlyArray<TaxMarketplaceUnion>;
  readonly ukVatInfo: UkVatInfoSchema;
  readonly us: UsTaxConstants;
};


export type TaxConstantsMarketplaceCountriesArgs = {
  includeUpcoming?: InputMaybe<Scalars['Boolean']>;
};


export type TaxConstantsMarketplaceUnionsArgs = {
  includeUpcoming?: InputMaybe<Scalars['Boolean']>;
};

export type TaxDashboardReviewMutations = {
  readonly __typename?: 'TaxDashboardReviewMutations';
  readonly reviewMerchantTaxIdentification: ReviewMerchantTaxIdentificationMutation;
};


export type TaxDashboardReviewMutationsReviewMerchantTaxIdentificationArgs = {
  input: ReviewMerchantTaxIdentificationInput;
};

export type TaxDashboardSchema = {
  readonly __typename?: 'TaxDashboardSchema';
  readonly usTaxIdentificationMerchants?: Maybe<ReadonlyArray<MerchantSchema>>;
};


export type TaxDashboardSchemaUsTaxIdentificationMerchantsArgs = {
  formType?: InputMaybe<MerchantTaxIdentificationFormType>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<MerchantTaxIdentificationSearchType>;
  sort?: InputMaybe<MerchantTaxIdentificationSortFieldType>;
  status?: InputMaybe<MerchantTaxIdentificationStatus>;
};

export type TaxLiabilitySchema = {
  readonly __typename?: 'TaxLiabilitySchema';
  readonly remitPercentage?: Maybe<Scalars['Float']>;
  readonly remitType?: Maybe<CommerceTransactionTaxRemitType>;
  readonly userEntityTypeForRemit?: Maybe<KycMerchantType>;
};

export type TaxMarketplaceCountry = {
  readonly __typename?: 'TaxMarketplaceCountry';
  readonly country: Country;
  readonly launchDate?: Maybe<Datetime>;
};

export type TaxMarketplaceUnion = {
  readonly __typename?: 'TaxMarketplaceUnion';
  readonly launchDate?: Maybe<Datetime>;
  readonly union: Union;
};

export type TaxSetting = {
  readonly __typename?: 'TaxSetting';
  readonly authority: TaxSettingAuthority;
  readonly certificateFileUrl?: Maybe<Scalars['String']>;
  readonly euDetails?: Maybe<TaxSettingEuDetails>;
  readonly germanyDetails?: Maybe<TaxSettingGermanyDetails>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastUpdated: Datetime;
  readonly merchantId: Scalars['ObjectIdType'];
  readonly mexicoDetails?: Maybe<TaxSettingMexicoDetails>;
  readonly ossRegistrationCountry?: Maybe<Country>;
  readonly reviewStatus?: Maybe<CommerceMerchantReviewStatus>;
  readonly status: CommerceMerchantTaxInfoStatus;
  readonly taxCertificateFile?: Maybe<MerchantFileSchema>;
  readonly taxLiability?: Maybe<ReadonlyArray<TaxLiabilitySchema>>;
  readonly taxNumber?: Maybe<Scalars['String']>;
  readonly taxNumberType?: Maybe<TaxSettingTaxNumberType>;
  readonly ukDetails?: Maybe<TaxSettingUkDetails>;
};


export type TaxSettingTaxLiabilityArgs = {
  whenShippingFromDomicileCountry?: InputMaybe<Scalars['Boolean']>;
};

export type TaxSettingAuthority = {
  readonly __typename?: 'TaxSettingAuthority';
  readonly country: Country;
  readonly displayName?: Maybe<Scalars['String']>;
  readonly level: TaxSettingAuthorityLevel;
  readonly stateCode?: Maybe<Scalars['String']>;
};

export type TaxSettingAuthorityLevel =
  | 'CITY'
  | 'COUNTRY'
  | 'COUNTY'
  | 'DISTRICT'
  | 'STATE';

export type TaxSettingEuDetails = {
  readonly __typename?: 'TaxSettingEUDetails';
  readonly ustSt1T1Number?: Maybe<Scalars['String']>;
};

export type TaxSettingGermanyDetails = {
  readonly __typename?: 'TaxSettingGermanyDetails';
  readonly noNumberReason?: Maybe<CommerceMerchantTaxInfoGermanyNoNumberReason>;
};

export type TaxSettingMexicoDetails = {
  readonly __typename?: 'TaxSettingMexicoDetails';
  readonly defaultShipFromIsMx?: Maybe<Scalars['Boolean']>;
};

export type TaxSettingTaxNumberType =
  | 'COMPANY_REGISTRITION_NUMBER'
  | 'NATIONAL_INSURANCE_NUMBER'
  | 'OSS'
  | 'OTHER'
  | 'TAX_IDENTIFICATION_NUMBER'
  | 'VALUE_ADDED_TAX';

export type TaxSettingUkDetails = {
  readonly __typename?: 'TaxSettingUKDetails';
  readonly gbVatEntity?: Maybe<GbVatEntityType>;
};

export type TaxSettingsInput = {
  readonly authorityLevel: TaxSettingAuthorityLevel;
  readonly certificateFileUrl?: InputMaybe<Scalars['String']>;
  readonly countryCode: CountryCode;
  readonly displayName?: InputMaybe<Scalars['String']>;
  readonly gbVatEntity?: InputMaybe<GbVatEntityType>;
  readonly mxDefaultShipFromIsMx?: InputMaybe<Scalars['Boolean']>;
  readonly ossRegistrationCountryCode?: InputMaybe<CountryCode>;
  readonly stateCode?: InputMaybe<Scalars['String']>;
  readonly taxNumber?: InputMaybe<Scalars['String']>;
  readonly taxNumberType?: InputMaybe<TaxSettingTaxNumberType>;
  readonly ustSt1T1Number?: InputMaybe<Scalars['String']>;
};

export type TaxSettingsMutations = {
  readonly __typename?: 'TaxSettingsMutations';
  readonly upsertTaxSettings: UpsertTaxSettingsMutation;
};


export type TaxSettingsMutationsUpsertTaxSettingsArgs = {
  input: UpsertTaxSettingsInput;
};

export type TaxTargetCurrency =
  | 'AUTHORITY'
  | 'CUSTOMER'
  | 'MERCHANT';

export type TaxType =
  | 'INTERNATIONAL_AC'
  | 'INTERNATIONAL_CA'
  | 'INTERNATIONAL_CA1'
  | 'INTERNATIONAL_DS'
  | 'INTERNATIONAL_EC'
  | 'INTERNATIONAL_ER'
  | 'INTERNATIONAL_ES'
  | 'INTERNATIONAL_EXC'
  | 'INTERNATIONAL_IC'
  | 'INTERNATIONAL_IM'
  | 'INTERNATIONAL_IR'
  | 'INTERNATIONAL_IS'
  | 'INTERNATIONAL_MA'
  | 'INTERNATIONAL_MP'
  | 'INTERNATIONAL_MVT'
  | 'INTERNATIONAL_NL'
  | 'INTERNATIONAL_NR'
  | 'INTERNATIONAL_RC'
  | 'INTERNATIONAL_S'
  | 'INTERNATIONAL_SA'
  | 'INTERNATIONAL_SI'
  | 'INTERNATIONAL_SN'
  | 'INTERNATIONAL_STK'
  | 'INTERNATIONAL_TE'
  | 'INTERNATIONAL_TR'
  | 'INTERNATIONAL_UN'
  | 'INTERNATIONAL_US'
  | 'INTERNATIONAL_VG'
  | 'INTERNATIONAL_ZC'
  | 'INTERNATIONAL_ZE'
  | 'INTERNATIONAL_ZI'
  | 'INTERNATIONAL_ZR'
  | 'US_BO'
  | 'US_CA'
  | 'US_CA1'
  | 'US_CU'
  | 'US_EXC'
  | 'US_GR'
  | 'US_IC'
  | 'US_IM'
  | 'US_LT'
  | 'US_MVT'
  | 'US_NL'
  | 'US_RC'
  | 'US_RS'
  | 'US_RU'
  | 'US_S'
  | 'US_SA'
  | 'US_SC'
  | 'US_STK'
  | 'US_SV'
  | 'US_UN'
  | 'US_US'
  | 'US_UU'
  | 'US_VG'
  | 'US_ZE'
  | 'US_ZR'
  | 'Undefined';

export type TaxonomyAttributeSchema = {
  readonly __typename?: 'TaxonomyAttributeSchema';
  readonly dataType: AttributeDataType;
  readonly dataTypeFormat: AttributeDataTypeFormat;
  readonly description: Scalars['String'];
  readonly enabledForVariations: Scalars['Boolean'];
  readonly id: Scalars['Int'];
  readonly isVariationAttribute: Scalars['Boolean'];
  readonly level: AttributeLevel;
  readonly maxMultiSelect: Scalars['Int'];
  readonly mode: AttributeMode;
  readonly name: Scalars['String'];
  readonly usage: AttributeUsage;
  readonly values?: Maybe<ReadonlyArray<TaxonomyAttributeValueSchema>>;
};

export type TaxonomyAttributeValueSchema = {
  readonly __typename?: 'TaxonomyAttributeValueSchema';
  readonly id: Scalars['Int'];
  readonly value: Scalars['String'];
};

export type TaxonomyCategorySchema = {
  readonly __typename?: 'TaxonomyCategorySchema';
  readonly categoriesAlongPath: ReadonlyArray<TaxonomyCategorySchema>;
  readonly categoryChildren?: Maybe<ReadonlyArray<TaxonomyCategorySchema>>;
  readonly categoryTreeId: Scalars['Int'];
  readonly categoryTreeVersion: Scalars['String'];
  readonly description: Scalars['String'];
  readonly id: Scalars['String'];
  readonly name: Scalars['String'];
};

export type TaxonomySchema = {
  readonly __typename?: 'TaxonomySchema';
  readonly attributes?: Maybe<ReadonlyArray<TaxonomyAttributeSchema>>;
  readonly category?: Maybe<TaxonomyCategorySchema>;
  readonly categoryAttributesCsv?: Maybe<ReadonlyArray<ReadonlyArray<Scalars['String']>>>;
  readonly l1Categories?: Maybe<ReadonlyArray<TaxonomyCategorySchema>>;
  readonly leafCategories?: Maybe<ReadonlyArray<TaxonomyCategorySchema>>;
  readonly taxonomyTreeCsv?: Maybe<ReadonlyArray<ReadonlyArray<Scalars['String']>>>;
  readonly variationOptions?: Maybe<ReadonlyArray<TaxonomyAttributeSchema>>;
};


export type TaxonomySchemaAttributesArgs = {
  categoryId: Scalars['Int'];
  treeVersion?: InputMaybe<Scalars['String']>;
};


export type TaxonomySchemaCategoryArgs = {
  categoryId?: InputMaybe<Scalars['Int']>;
  treeVersion?: InputMaybe<Scalars['String']>;
};


export type TaxonomySchemaCategoryAttributesCsvArgs = {
  categoryId: Scalars['Int'];
};


export type TaxonomySchemaL1CategoriesArgs = {
  leafCategoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  treeVersion?: InputMaybe<Scalars['String']>;
};


export type TaxonomySchemaLeafCategoriesArgs = {
  l1CategoryId: Scalars['Int'];
  treeVersion?: InputMaybe<Scalars['String']>;
};


export type TaxonomySchemaTaxonomyTreeCsvArgs = {
  treeVersion?: InputMaybe<Scalars['String']>;
};


export type TaxonomySchemaVariationOptionsArgs = {
  categoryId: Scalars['Int'];
  treeVersion?: InputMaybe<Scalars['String']>;
};

export type TermsOfServiceRegionType =
  | 'CN'
  | 'EU'
  | 'US';

export type TermsOfServiceSchema = {
  readonly __typename?: 'TermsOfServiceSchema';
  readonly canAccept: Scalars['Boolean'];
  readonly id: Scalars['ObjectIdType'];
  readonly merchantTermsOfServiceAgreement?: Maybe<MerchantTermsOfServiceAgreementSchema>;
  readonly region?: Maybe<TermsOfServiceRegionType>;
  readonly releaseDate: Datetime;
  readonly tosType: TermsOfServiceType;
  readonly version: Scalars['Int'];
};

export type TermsOfServiceType =
  | 'EPC'
  | 'MERCHANT'
  | 'MERCHANT_PARTNER'
  | 'MERCHANT_VALIDATION'
  | 'PAYMENT_REAL_NAME_AUTH'
  | 'PRODUCT_BOOST'
  | 'UPS'
  | 'WISH_EXPRESS'
  | 'WISH_EXPRESS_RETURN'
  | 'WPS';

export type TicketSearchType =
  | 'ID'
  | 'ORDER_ID'
  | 'PRODUCT_ID'
  | 'RETURN_ID'
  | 'SKU'
  | 'TRANSACTION_ID'
  | 'USER_NAME';

export type TicketSortFieldType =
  | 'CREATED_TIME'
  | 'LAST_UPDATE';

export type Timedelta = {
  readonly __typename?: 'Timedelta';
  readonly days: Scalars['Float'];
  readonly hours: Scalars['Float'];
  readonly minutes: Scalars['Float'];
  readonly seconds: Scalars['Int'];
};

export type TodoItem = {
  readonly __typename?: 'TodoItem';
  readonly canSnooze: Scalars['Boolean'];
  readonly completed: Scalars['Boolean'];
  readonly id: Scalars['ObjectIdType'];
  readonly pinned: Scalars['Boolean'];
  readonly sentiment: MerchantTodoItemSentiment;
  readonly snoozeCount: Scalars['Int'];
  readonly snoozeHours?: Maybe<Scalars['Int']>;
  readonly snoozeOptionText?: Maybe<Scalars['String']>;
  readonly type: MerchantTodoItemType;
};

export type TodoSchema = {
  readonly __typename?: 'TodoSchema';
  readonly items: ReadonlyArray<TodoItem>;
};

export type TosServiceSchema = {
  readonly __typename?: 'TosServiceSchema';
  readonly termsOfService?: Maybe<TermsOfServiceSchema>;
};


export type TosServiceSchemaTermsOfServiceArgs = {
  country?: InputMaybe<CountryCode>;
  tosType: TermsOfServiceType;
  version?: InputMaybe<Scalars['Int']>;
};

export type TrackingCheckpointLocationSchema = {
  readonly __typename?: 'TrackingCheckpointLocationSchema';
  readonly city?: Maybe<Scalars['String']>;
  readonly coordinates?: Maybe<GeoCoordinates>;
  readonly country?: Maybe<Country>;
  readonly state?: Maybe<Scalars['String']>;
  readonly zipcode?: Maybe<Scalars['String']>;
};

export type TrackingCheckpointResultingStateSchema = {
  readonly __typename?: 'TrackingCheckpointResultingStateSchema';
  readonly state: CheckpointAfterActionState;
  readonly text?: Maybe<Scalars['String']>;
};

export type TrackingCheckpointSchema = {
  readonly __typename?: 'TrackingCheckpointSchema';
  readonly date: Datetime;
  readonly location: TrackingCheckpointLocationSchema;
  readonly message?: Maybe<Scalars['String']>;
  readonly resultingTracking: TrackingCheckpointResultingStateSchema;
  readonly type?: Maybe<TrackingInfoCheckpointType>;
  readonly wishpostAction?: Maybe<Scalars['String']>;
};

export type TrackingDisputeHub = {
  readonly __typename?: 'TrackingDisputeHub';
  readonly disputeCount?: Maybe<Scalars['Int']>;
  readonly disputes?: Maybe<ReadonlyArray<TrackingDisputeSchema>>;
};


export type TrackingDisputeHubDisputeCountArgs = {
  creationDateEnd?: InputMaybe<DatetimeInput>;
  creationDateStart?: InputMaybe<DatetimeInput>;
  filterWarningDisputes?: InputMaybe<Scalars['Boolean']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<TrackingDisputeSearchType>;
  states: ReadonlyArray<TrackingDisputeState>;
};


export type TrackingDisputeHubDisputesArgs = {
  creationDateEnd?: InputMaybe<DatetimeInput>;
  creationDateStart?: InputMaybe<DatetimeInput>;
  filterWarningDisputes?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<TrackingDisputeSearchType>;
  sort?: InputMaybe<DisputeSort>;
  states: ReadonlyArray<TrackingDisputeState>;
};

export type TrackingDisputeMessageSchema = {
  readonly __typename?: 'TrackingDisputeMessageSchema';
  readonly date: Datetime;
  readonly files: ReadonlyArray<MerchantFileSchema>;
  readonly message?: Maybe<Scalars['String']>;
  readonly reportedCountry?: Maybe<CountryCode>;
  readonly reportedDeliveredDate?: Maybe<Datetime>;
  readonly reportedFulfillmentDate?: Maybe<Datetime>;
  readonly reportedState?: Maybe<UsStateCode>;
  readonly senderName: Scalars['String'];
  readonly senderType: TrackingDisputeMessageSenderType;
  readonly type: TrackingDisputeMessageType;
};

export type TrackingDisputeMessageSenderType =
  | 'ADMIN'
  | 'MERCHANT';

export type TrackingDisputeMessageType =
  | 'ADMIN_COMMENT'
  | 'APPROVED'
  | 'CANCELLED'
  | 'CLOSE'
  | 'DECLINED'
  | 'INITIATED'
  | 'REOPEN'
  | 'REPLY';

export type TrackingDisputeSchema = {
  readonly __typename?: 'TrackingDisputeSchema';
  readonly carrierSiteLink?: Maybe<Scalars['String']>;
  readonly createDate: Datetime;
  readonly id: Scalars['ObjectIdType'];
  readonly isClosed?: Maybe<Scalars['Boolean']>;
  readonly isWishExpressLate: Scalars['Boolean'];
  readonly lastUpdate?: Maybe<Datetime>;
  readonly merchant: MerchantSchema;
  readonly merchantNote?: Maybe<Scalars['String']>;
  readonly messages: ReadonlyArray<TrackingDisputeMessageSchema>;
  readonly orderId: Scalars['ObjectIdType'];
  readonly orderInfractionDisputeSubreason?: Maybe<OrderInfractionDisputeSubreason>;
  readonly productId: Scalars['ObjectIdType'];
  readonly reportedCountry?: Maybe<CountryCode>;
  readonly reportedDeliveredDate?: Maybe<Datetime>;
  readonly reportedFulfillmentDate?: Maybe<Datetime>;
  readonly reportedState?: Maybe<UsStateCode>;
  readonly requestReason: Scalars['String'];
  readonly state: TrackingDisputeState;
  readonly trackingId?: Maybe<Scalars['String']>;
  readonly warehouseCountry?: Maybe<Scalars['String']>;
  readonly warningId?: Maybe<Scalars['ObjectIdType']>;
};

export type TrackingDisputeSearchType =
  | 'INFRACTION_ID'
  | 'ORDER_ID';

export type TrackingDisputeState =
  | 'APPROVED'
  | 'AWAITING_ADMIN'
  | 'AWAITING_MERCHANT'
  | 'CANCELLED'
  | 'DECLINED';

export type TrackingIdFormatSchema = {
  readonly __typename?: 'TrackingIDFormatSchema';
  readonly country?: Maybe<Country>;
  readonly example?: Maybe<Scalars['String']>;
  readonly format?: Maybe<Scalars['String']>;
};

export type TrackingInfoCheckpointType =
  | 'DESTINATION'
  | 'SOURCE'
  | 'UNKNOWN'
  | 'WISHPOST_DELEGATE';

export type TrackingPerformanceStats = {
  readonly __typename?: 'TrackingPerformanceStats';
  readonly averageClaimedFulfillmentTime?: Maybe<Timedelta>;
  readonly averageFulfillmentTime?: Maybe<Timedelta>;
  readonly endDate: Datetime;
  readonly lateConfirmedFulfillment?: Maybe<Scalars['Int']>;
  readonly lateConfirmedFulfillmentRate?: Maybe<Scalars['Float']>;
  readonly ordersFulfilled?: Maybe<Scalars['Int']>;
  readonly ordersWithValidTracking?: Maybe<Scalars['Int']>;
  readonly preFulfillmentCancellationRate?: Maybe<Scalars['Float']>;
  readonly preFulfillmentCancellations?: Maybe<Scalars['Int']>;
  readonly startDate: Datetime;
  readonly validTrackingRate?: Maybe<Scalars['Float']>;
};

export type TrackingSourceEnum =
  | 'AFTERSHIP'
  | 'CANADAPOST'
  | 'CHINAPOST'
  | 'DHL'
  | 'EASYPOST'
  | 'EMS'
  | 'GENERIC'
  | 'LAPOSTE'
  | 'NO_OP'
  | 'ROUTE'
  | 'TRACK17'
  | 'TRACKINGMORE'
  | 'USER'
  | 'USPS'
  | 'WISHPOST'
  | 'WOSP'
  | 'WTS';

export type TrademarkCountryCode =
  | 'AE'
  | 'AU'
  | 'BR'
  | 'CA'
  | 'CH'
  | 'CN'
  | 'DE'
  | 'ES'
  | 'EU'
  | 'FR'
  | 'GB'
  | 'IN'
  | 'IT'
  | 'JP'
  | 'MX'
  | 'NL'
  | 'SG'
  | 'TR'
  | 'US';

export type TransactionPaymentType =
  | 'ADYEN'
  | 'ADYEN_BANKING'
  | 'AFFIRM'
  | 'AFTERPAY'
  | 'AFTERPAY_CASHAPP'
  | 'BOKU'
  | 'BOLETO'
  | 'BRAINTREE'
  | 'BRAINTREE_ACH'
  | 'BRAINTREE_FB'
  | 'BRAINTREE_GOOGLE'
  | 'BRAINTREE_PAYPAL'
  | 'BRAINTREE_VENMO'
  | 'COMMERCE_LOAN'
  | 'EBANX'
  | 'FB_CHECKOUT'
  | 'KLARNA'
  | 'KLARNA_PAYLATER'
  | 'NONE'
  | 'OFFLINE_CASH'
  | 'OXXO'
  | 'PAYNEARME'
  | 'PAYPAL'
  | 'PAYTM'
  | 'PIX'
  | 'SHOPIFY_CHECKOUT'
  | 'STRIPE'
  | 'STRIPE_APPLE_PAY'
  | 'STRIPE_GOOGLE'
  | 'STRIPE_IDEAL'
  | 'STRIPE_SAMSUNG_PAY'
  | 'TWITTERDIRECTBUY'
  | 'UNKNOWN'
  | 'XENDIT_INVOICE';

export type TrueTagSchema = {
  readonly __typename?: 'TrueTagSchema';
  readonly id: Scalars['ObjectIdType'];
  readonly name: Scalars['String'];
  readonly topLevel?: Maybe<TrueTagSchema>;
};

export type TwoFactorCodeState =
  | 'EXPIRED'
  | 'INVALID'
  | 'OK';

export type TwoFactorGenTokenInput = {
  readonly isEnablingTfa?: InputMaybe<Scalars['Boolean']>;
  readonly sendPhoneCall?: InputMaybe<Scalars['Boolean']>;
  readonly username: Scalars['String'];
};

export type TwoFactorGenTokenMutation = {
  readonly __typename?: 'TwoFactorGenTokenMutation';
  readonly allowTfaPhone?: Maybe<Scalars['Boolean']>;
  readonly bdEmail?: Maybe<Scalars['String']>;
  readonly error?: Maybe<Scalars['String']>;
  readonly isInternalEmployee?: Maybe<Scalars['Boolean']>;
  readonly isMerchant?: Maybe<Scalars['Boolean']>;
  readonly obfuscatedPhoneNumber?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type TwoFactorMutations = {
  readonly __typename?: 'TwoFactorMutations';
  readonly sendCode: TwoFactorSendCodeMutation;
  readonly turnOff: TwoFactorTurnOffMutation;
  readonly turnOn: TwoFactorTurnOnMutation;
  readonly verifyCode: TwoFactorVerifyCodeMutation;
};


export type TwoFactorMutationsTurnOffArgs = {
  input: TwoFactorTurnOffInput;
};


export type TwoFactorMutationsTurnOnArgs = {
  input: TwoFactorTurnOnInput;
};


export type TwoFactorMutationsVerifyCodeArgs = {
  input: TwoFactorVerifyCodeInput;
};

export type TwoFactorSendCodeMutation = {
  readonly __typename?: 'TwoFactorSendCodeMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly sent?: Maybe<Scalars['Boolean']>;
  readonly sentTime?: Maybe<Datetime>;
};

export type TwoFactorTurnOffInput = {
  readonly code: Scalars['String'];
};

export type TwoFactorTurnOffMutation = {
  readonly __typename?: 'TwoFactorTurnOffMutation';
  readonly codeState?: Maybe<TwoFactorCodeState>;
  readonly error?: Maybe<Scalars['String']>;
  readonly isOn?: Maybe<Scalars['Boolean']>;
};

export type TwoFactorTurnOnInput = {
  readonly code: Scalars['String'];
};

export type TwoFactorTurnOnMutation = {
  readonly __typename?: 'TwoFactorTurnOnMutation';
  readonly backupCodes?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly codeState?: Maybe<TwoFactorCodeState>;
  readonly error?: Maybe<Scalars['String']>;
  readonly isOn?: Maybe<Scalars['Boolean']>;
};

export type TwoFactorVerifyCodeInput = {
  readonly code: Scalars['String'];
};

export type TwoFactorVerifyCodeMutation = {
  readonly __typename?: 'TwoFactorVerifyCodeMutation';
  readonly codeState?: Maybe<TwoFactorCodeState>;
  readonly error?: Maybe<Scalars['String']>;
};

export type TypeOfInfringement =
  | 'BRAND_PROTECTION'
  | 'COPYRIGHT'
  | 'COUNTERFEIT'
  | 'EU_COMMUNITY_DESIGN_VIOLATION'
  | 'PATENT_INFRINGEMENT'
  | 'RIGHT_OF_PUBLICITY'
  | 'TRADEMARK_INFRINGEMENT';

export type UiStateMutations = {
  readonly __typename?: 'UIStateMutations';
  readonly clear: ClearUiState;
  readonly clearAll: ClearAllUiState;
  readonly update: UpdateUiState;
};


export type UiStateMutationsClearArgs = {
  input: UpdateUiStateInput;
};


export type UiStateMutationsUpdateArgs = {
  input: UpdateUiStateInput;
};

export type UiStateSchema = {
  readonly __typename?: 'UIStateSchema';
  readonly bool?: Maybe<Scalars['Boolean']>;
  readonly int?: Maybe<Scalars['Int']>;
  readonly intArray?: Maybe<ReadonlyArray<Scalars['Int']>>;
  readonly string?: Maybe<Scalars['String']>;
  readonly stringArray?: Maybe<ReadonlyArray<Scalars['String']>>;
};


export type UiStateSchemaBoolArgs = {
  state: UserUiState;
};


export type UiStateSchemaIntArgs = {
  state: UserUiState;
};


export type UiStateSchemaIntArrayArgs = {
  state: UserUiState;
};


export type UiStateSchemaStringArgs = {
  state: UserUiState;
};


export type UiStateSchemaStringArrayArgs = {
  state: UserUiState;
};

export type UkVatInfoSchema = {
  readonly __typename?: 'UKVatInfoSchema';
  readonly eoriNumber: Scalars['String'];
  readonly name: Scalars['String'];
  readonly number: Scalars['String'];
};

export type UpcProductSchema = {
  readonly __typename?: 'UPCProductSchema';
  readonly brandName?: Maybe<Scalars['String']>;
  readonly description?: Maybe<Scalars['String']>;
  readonly images?: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly name?: Maybe<Scalars['String']>;
  readonly upc: Scalars['String'];
  readonly variations?: Maybe<ReadonlyArray<UpcVariationSchema>>;
};

export type UpcProductServiceSchema = {
  readonly __typename?: 'UPCProductServiceSchema';
  readonly product?: Maybe<UpcProductSchema>;
};


export type UpcProductServiceSchemaProductArgs = {
  upc?: Scalars['String'];
};

export type UpcVariationSchema = {
  readonly __typename?: 'UPCVariationSchema';
  readonly color?: Maybe<Scalars['String']>;
  readonly images?: Maybe<ReadonlyArray<Maybe<Scalars['String']>>>;
  readonly price?: Maybe<CurrencyValue>;
  readonly productName?: Maybe<Scalars['String']>;
  readonly size?: Maybe<Scalars['String']>;
  readonly upc: Scalars['String'];
};

export type UsStateCode =
  | 'AA'
  | 'AE'
  | 'AK'
  | 'AL'
  | 'AP'
  | 'AR'
  | 'AS'
  | 'AZ'
  | 'CA'
  | 'CO'
  | 'CT'
  | 'DC'
  | 'DE'
  | 'FL'
  | 'GA'
  | 'GU'
  | 'HI'
  | 'IA'
  | 'ID'
  | 'IL'
  | 'IN'
  | 'KS'
  | 'KY'
  | 'LA'
  | 'MA'
  | 'MD'
  | 'ME'
  | 'MI'
  | 'MN'
  | 'MO'
  | 'MP'
  | 'MS'
  | 'MT'
  | 'NC'
  | 'ND'
  | 'NE'
  | 'NH'
  | 'NJ'
  | 'NM'
  | 'NV'
  | 'NY'
  | 'OH'
  | 'OK'
  | 'OR'
  | 'PA'
  | 'RI'
  | 'SC'
  | 'SD'
  | 'TN'
  | 'TX'
  | 'UT'
  | 'VA'
  | 'VT'
  | 'WA'
  | 'WI'
  | 'WV'
  | 'WY';

export type UsTaxConstants = {
  readonly __typename?: 'USTaxConstants';
  readonly homeRuleStates: ReadonlyArray<Scalars['String']>;
  readonly marketplaceMunicipalities: ReadonlyArray<UsTaxMarketplaceMunicipalities>;
  readonly marketplaceStates: ReadonlyArray<Scalars['String']>;
  readonly nomadStates: ReadonlyArray<Scalars['String']>;
};

export type UsTaxMarketplaceMunicipalities = {
  readonly __typename?: 'USTaxMarketplaceMunicipalities';
  readonly cities: ReadonlyArray<Scalars['String']>;
  readonly counties: ReadonlyArray<Scalars['String']>;
  readonly districts: ReadonlyArray<Scalars['String']>;
  readonly stateCode: Scalars['String'];
};

export type UnclaimNotices = {
  readonly __typename?: 'UnclaimNotices';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UnclaimNoticesInput = {
  readonly noticeIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type Union = {
  readonly __typename?: 'Union';
  readonly code: Scalars['String'];
  readonly countries?: Maybe<ReadonlyArray<Country>>;
  readonly name: Scalars['String'];
};


export type UnionNameArgs = {
  localized?: InputMaybe<Scalars['Boolean']>;
};

export type UnitCombined =
  | 'CENTILITER'
  | 'CENTIMETER'
  | 'COUNT'
  | 'CUBICMETER'
  | 'FLUID_OUNCE'
  | 'FOOT'
  | 'GALLON'
  | 'GRAM'
  | 'INCH'
  | 'KILOGRAM'
  | 'LITER'
  | 'LOAD'
  | 'METER'
  | 'MILLIGRAM'
  | 'MILLILITER'
  | 'OUNCE'
  | 'PINT'
  | 'POD'
  | 'POUND'
  | 'QUART'
  | 'ROLL'
  | 'SQUARE_FOOT'
  | 'SQUARE_METER'
  | 'WASH'
  | 'YARD';

export type UpdateAuditQueueWarning = {
  readonly __typename?: 'UpdateAuditQueueWarning';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateAuditQueueWarningInput = {
  readonly action: MerchantWarningAuditAction;
  readonly auditRevertReason?: InputMaybe<MerchantWarningAuditRevertReason>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly ids?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type UpdateDedupImage = {
  readonly __typename?: 'UpdateDedupImage';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateDedupImageInput = {
  readonly brandId: Scalars['ObjectIdType'];
  readonly imageIds: ReadonlyArray<Scalars['ObjectIdType']>;
};

export type UpdateMerchantFinalSale = {
  readonly __typename?: 'UpdateMerchantFinalSale';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateMerchantGamingReviewTicket = {
  readonly __typename?: 'UpdateMerchantGamingReviewTicket';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateNotifier = {
  readonly __typename?: 'UpdateNotifier';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateNotifierInput = {
  readonly newCountryCodes?: InputMaybe<ReadonlyArray<CountryCode>>;
  readonly newIsTrustedFlagger?: InputMaybe<Scalars['Boolean']>;
  readonly newName?: InputMaybe<Scalars['String']>;
  readonly newOrganization?: InputMaybe<Scalars['String']>;
  readonly notifierId: Scalars['ObjectIdType'];
};

export type UpdateOffsiteBoost = {
  readonly __typename?: 'UpdateOffsiteBoost';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateOrderDeliveryConfirmation = {
  readonly __typename?: 'UpdateOrderDeliveryConfirmation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateOrderDeliveryConfirmationInput = {
  readonly dateDelivered: DatetimeInput;
  readonly deliveryReceiptFileUrl?: InputMaybe<Scalars['String']>;
  readonly orderId: Scalars['ObjectIdType'];
  readonly trackingUrl?: InputMaybe<Scalars['String']>;
};

export type UpdatePayPalSettingInput = {
  readonly businessId?: InputMaybe<Scalars['String']>;
  readonly businessName?: InputMaybe<Scalars['String']>;
  readonly collectorType: MerchantPaymentCollectorType;
  readonly email: Scalars['String'];
  readonly personalId?: InputMaybe<Scalars['String']>;
  readonly personalName: Scalars['String'];
  readonly personalPhoneNumber: Scalars['String'];
};

export type UpdatePayPalSettingMutation = {
  readonly __typename?: 'UpdatePayPalSettingMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly newNextPayoutTime?: Maybe<Datetime>;
  readonly ok: Scalars['Boolean'];
};

export type UpdatePayoneerSettingInput = {
  readonly businessId?: InputMaybe<Scalars['String']>;
  readonly businessName?: InputMaybe<Scalars['String']>;
  readonly collectorType: MerchantPaymentCollectorType;
  readonly personalId?: InputMaybe<Scalars['String']>;
  readonly personalName: Scalars['String'];
  readonly personalPhoneNumber: Scalars['String'];
};

export type UpdatePayoneerSettingMutation = {
  readonly __typename?: 'UpdatePayoneerSettingMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly newNextPayoutTime?: Maybe<Datetime>;
  readonly ok: Scalars['Boolean'];
};

export type UpdatePermissionInput = {
  readonly id: Scalars['String'];
  readonly permission: PermissionType;
  readonly status: PermissionStatusType;
};

export type UpdatePermissionMutation = {
  readonly __typename?: 'UpdatePermissionMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateProductLogisticsMetadata = {
  readonly __typename?: 'UpdateProductLogisticsMetadata';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly success: Scalars['Boolean'];
};

export type UpdateProductLogisticsMetadataInput = {
  readonly packageDimensions: PackageDimensionsInput;
  readonly productId: Scalars['ObjectIdType'];
  readonly variationId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type UpdateRoleInput = {
  readonly assigned: Scalars['Boolean'];
  readonly id: Scalars['String'];
  readonly role: RoleType;
};

export type UpdateRoleMutation = {
  readonly __typename?: 'UpdateRoleMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateShippingProvider = {
  readonly __typename?: 'UpdateShippingProvider';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingProvider?: Maybe<ShippingProviderSchema>;
};

export type UpdateShippingProviderName = {
  readonly __typename?: 'UpdateShippingProviderName';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingProvider?: Maybe<ShippingProviderSchema>;
};

export type UpdateShippingProviderNameInput = {
  readonly name: Scalars['String'];
  readonly providerId: Scalars['Int'];
};

export type UpdateShippingSetting = {
  readonly __typename?: 'UpdateShippingSetting';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok?: Maybe<Scalars['Boolean']>;
  readonly useShopifyShippingRate?: Maybe<Scalars['Boolean']>;
};

export type UpdateSystemUpdateBaseAnnouncement = {
  readonly __typename?: 'UpdateSystemUpdateBaseAnnouncement';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateSystemUpdateBaseAnnouncementInput = {
  readonly audienceGroups?: InputMaybe<ReadonlyArray<AudienceGroup>>;
  readonly categories?: InputMaybe<ReadonlyArray<AnnouncementCategory>>;
  readonly content?: InputMaybe<ReadonlyArray<CreateAnnouncementContentSchemaInput>>;
  readonly expiryDate?: InputMaybe<DatetimeInput>;
  readonly id: Scalars['ObjectIdType'];
  readonly locales?: InputMaybe<ReadonlyArray<AnnouncementLocale>>;
  readonly merchantIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly program?: InputMaybe<AnnouncementProgram>;
  readonly publishDate?: InputMaybe<DatetimeInput>;
};

export type UpdateUiState = {
  readonly __typename?: 'UpdateUIState';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateUiStateInput = {
  readonly boolValue?: InputMaybe<Scalars['Boolean']>;
  readonly intArrayValue?: InputMaybe<ReadonlyArray<Scalars['Int']>>;
  readonly intValue?: InputMaybe<Scalars['Int']>;
  readonly state: UserUiState;
  readonly stringArrayValue?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly stringValue?: InputMaybe<Scalars['String']>;
};

export type UpdateUin = {
  readonly __typename?: 'UpdateUin';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateUinInput = {
  readonly id: Scalars['ObjectIdType'];
  readonly responsibleEntityName: Scalars['String'];
  readonly uin: Scalars['String'];
};

export type UpdateUserInfoInput = {
  readonly bdMerchantCountry?: InputMaybe<BdMerchantCountryCodeType>;
  readonly email?: InputMaybe<Scalars['String']>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly firstName?: InputMaybe<Scalars['String']>;
  readonly id: Scalars['ObjectIdType'];
  readonly lastName?: InputMaybe<Scalars['String']>;
  readonly manager?: InputMaybe<Scalars['ObjectIdType']>;
  readonly username?: InputMaybe<Scalars['String']>;
};

export type UpdateUserInfoMutation = {
  readonly __typename?: 'UpdateUserInfoMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpdateUserQueuesInput = {
  readonly assigned: Scalars['Boolean'];
  readonly id: Scalars['ObjectIdType'];
  readonly queueId: Scalars['ObjectIdType'];
};

export type UpdateUserQueuesMutation = {
  readonly __typename?: 'UpdateUserQueuesMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UploadBankAccountDocument = {
  readonly __typename?: 'UploadBankAccountDocument';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UploadBankAccountDocumentInput = {
  readonly bankDocFile: FileInput;
};

export type UploadEuvatTaxQuestionnaire = {
  readonly __typename?: 'UploadEUVATTaxQuestionnaire';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UploadMutations = {
  readonly __typename?: 'UploadMutations';
  readonly initiateUpload?: Maybe<InitiateUploadMutation>;
};


export type UploadMutationsInitiateUploadArgs = {
  input: InitiateUploadInput;
};

export type UploadProductComplianceDocuments = {
  readonly __typename?: 'UploadProductComplianceDocuments';
  readonly failure?: Maybe<Scalars['String']>;
  readonly fileUrls?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertConfirmedDeliveryCarrier = {
  readonly __typename?: 'UpsertConfirmedDeliveryCarrier';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertDiscountCampaignInput = {
  readonly countries?: InputMaybe<ReadonlyArray<CountryCode>>;
  readonly discountData?: InputMaybe<ReadonlyArray<VariationDiscountDataInput>>;
  readonly endTime?: InputMaybe<DatetimeInput>;
  readonly eventId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly startTime?: InputMaybe<DatetimeInput>;
};

export type UpsertDiscountCampaignMutation = {
  readonly __typename?: 'UpsertDiscountCampaignMutation';
  readonly campaignId?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertFlashSaleCampaignInput = {
  readonly countries?: InputMaybe<ReadonlyArray<CountryCode>>;
  readonly discountData?: InputMaybe<ReadonlyArray<VariationDiscountDataInput>>;
  readonly endTime?: InputMaybe<DatetimeInput>;
  readonly eventId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly name?: InputMaybe<Scalars['String']>;
  readonly startTime?: InputMaybe<DatetimeInput>;
};

export type UpsertFlashSaleCampaignMutation = {
  readonly __typename?: 'UpsertFlashSaleCampaignMutation';
  readonly campaignId?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertFranceLinkProductCompliance = {
  readonly __typename?: 'UpsertFranceLinkProductCompliance';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly rateLimit?: Maybe<Scalars['Boolean']>;
};

export type UpsertFranceLinkProductComplianceInput = {
  readonly action: LinkProductComplianceAction;
  readonly category?: InputMaybe<FranceProductUniqueIdentificationNumberCategory>;
  readonly compliance: LinkProductComplianceType;
  readonly productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly responsiblePersonId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly uinIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type UpsertFranceProductUniqueIdentificationNumber = {
  readonly __typename?: 'UpsertFranceProductUniqueIdentificationNumber';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertGermanyLinkProductCompliance = {
  readonly __typename?: 'UpsertGermanyLinkProductCompliance';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly rateLimit?: Maybe<Scalars['Boolean']>;
};

export type UpsertGermanyLinkProductComplianceInput = {
  readonly action: LinkProductComplianceAction;
  readonly category?: InputMaybe<GermanyProductUniqueIdentificationNumberCategory>;
  readonly compliance: LinkProductComplianceType;
  readonly productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly responsiblePersonId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly uinIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type UpsertGermanyProductUniqueIdentificationNumber = {
  readonly __typename?: 'UpsertGermanyProductUniqueIdentificationNumber';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertLinkProductCompliance = {
  readonly __typename?: 'UpsertLinkProductCompliance';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantReturnSettingsMutation = {
  readonly __typename?: 'UpsertMerchantReturnSettingsMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantReturnSettingsMutationInput = {
  readonly authType?: InputMaybe<AuthType>;
  readonly countryCode: CountryCode;
  readonly policyType: PolicyType;
  readonly productId?: InputMaybe<Scalars['String']>;
  readonly returnDays: Scalars['Int'];
  readonly useWishReturnWarehouse: Scalars['Boolean'];
  readonly variationId?: InputMaybe<Scalars['String']>;
  readonly warehouseId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type UpsertMerchantReturnWarehouseMutation = {
  readonly __typename?: 'UpsertMerchantReturnWarehouseMutation';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantSenderAddressInput = {
  readonly address: AddressInput;
  readonly isDefault: Scalars['Boolean'];
  readonly merchantSenderAddressId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly warehouseName: Scalars['String'];
};

export type UpsertMerchantSenderAddressMutation = {
  readonly __typename?: 'UpsertMerchantSenderAddressMutation';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantTaxIdentificationInput = {
  readonly address: AddressInput;
  readonly businessName?: InputMaybe<Scalars['String']>;
  readonly businessType?: InputMaybe<MerchantTaxIdentificationBusinessType>;
  readonly domicileExplanation?: InputMaybe<Scalars['String']>;
  readonly employeeIdNumber?: InputMaybe<Scalars['String']>;
  readonly firstName?: InputMaybe<Scalars['String']>;
  readonly foreignTaxId?: InputMaybe<Scalars['String']>;
  readonly lastName?: InputMaybe<Scalars['String']>;
  readonly paymentReceiverIdentity: MerchantTaxIdentificationPaymentReceiverEntity;
  readonly selfIdentityClassification: MerchantTaxIdentificationSelfIdentityClassification;
  readonly signDate: DatetimeInput;
};

export type UpsertMerchantTaxIdentificationMutation = {
  readonly __typename?: 'UpsertMerchantTaxIdentificationMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantWarehouseMutation = {
  readonly __typename?: 'UpsertMerchantWarehouseMutation';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantWarning = {
  readonly __typename?: 'UpsertMerchantWarning';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertMerchantWarningInput = {
  readonly action: MerchantWarningAction;
  readonly cancelInput?: InputMaybe<CancelInfractionInput>;
  readonly claimInput?: InputMaybe<ClaimInfractionInput>;
  readonly closeInput?: InputMaybe<CloseInfractionInput>;
  readonly disputeInput?: InputMaybe<DisputeInfractionInput>;
  readonly messageInput?: InputMaybe<ReplyInfractionInput>;
  readonly requestPaymentInput?: InputMaybe<RequestPaymentInput>;
  readonly warningId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type UpsertOrderInfractionDispute = {
  readonly __typename?: 'UpsertOrderInfractionDispute';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertOrderInfractionDisputeInput = {
  readonly action: OrderInfractionDisputeAction;
  readonly adminMessage?: InputMaybe<Scalars['String']>;
  readonly cannedResponseId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly carrierSiteLink?: InputMaybe<Scalars['String']>;
  readonly customerAddressProof?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly disputeSubreason?: InputMaybe<OrderInfractionDisputeSubreason>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly invalidAddressProof?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly message?: InputMaybe<Scalars['String']>;
  readonly newTrackingNumber?: InputMaybe<Scalars['String']>;
  readonly orderId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly reportedDeliveredDate?: InputMaybe<DatetimeInput>;
  readonly reportedDestinationCountryCode?: InputMaybe<CountryCode>;
  readonly reportedDestinationStateCode?: InputMaybe<UsStateCode>;
  readonly reportedFulfillmentDate?: InputMaybe<DatetimeInput>;
  readonly reportedShippingProviderId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly shippedFromCountryCode?: InputMaybe<CountryCode>;
  readonly uploadFiles?: InputMaybe<ReadonlyArray<FileInput>>;
  readonly warehouseCountryCode?: InputMaybe<CountryCode>;
  readonly warningId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly warningReason?: InputMaybe<MerchantWarningReason>;
};

export type UpsertProduct = {
  readonly __typename?: 'UpsertProduct';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
};

export type UpsertProductCategoryDispute = {
  readonly __typename?: 'UpsertProductCategoryDispute';
  readonly message?: Maybe<Scalars['String']>;
  readonly nextId?: Maybe<Scalars['ObjectIdType']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertProductCategoryDisputeInput = {
  readonly action: ProductCategoryDisputeAction;
  readonly adminUnchangedOtherReasonDetails?: InputMaybe<Scalars['String']>;
  readonly adminUnchangedReason?: InputMaybe<ProductCategoryDisputeAdminUnchangedReason>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly merchantNote?: InputMaybe<Scalars['String']>;
  readonly productId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly proposedTopCategoryTagId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly reason?: InputMaybe<ProductCategoryDisputeReason>;
  readonly source?: InputMaybe<ProductCategoryDisputeSource>;
  readonly uploadFiles?: InputMaybe<ReadonlyArray<FileInput>>;
};

export type UpsertProducts = {
  readonly __typename?: 'UpsertProducts';
  readonly failures?: Maybe<ReadonlyArray<UpsertProductsErrorItem>>;
  readonly ok: Scalars['Boolean'];
  readonly productIds?: Maybe<ReadonlyArray<Scalars['ObjectIdType']>>;
};

export type UpsertProductsErrorItem = {
  readonly __typename?: 'UpsertProductsErrorItem';
  readonly message: Scalars['String'];
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
};

export type UpsertProductsFromCsvFile = {
  readonly __typename?: 'UpsertProductsFromCSVFile';
  readonly jobId?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertProductsFromCsvFileInput = {
  readonly columnIdList?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  readonly feedType: ProductCsvJobType;
  readonly fileUrl: Scalars['String'];
};

export type UpsertRegulator = {
  readonly __typename?: 'UpsertRegulator';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertRegulatorInput = {
  readonly action: RegulatorAction;
  readonly countryRegionCode: CountryCode;
  readonly emailAddress: Scalars['String'];
  readonly name: Scalars['String'];
  readonly organization: Scalars['String'];
  readonly phoneNumber?: InputMaybe<Scalars['String']>;
  readonly title?: InputMaybe<Scalars['String']>;
  readonly website: Scalars['String'];
};

export type UpsertRegulatorReport = {
  readonly __typename?: 'UpsertRegulatorReport';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertRegulatorReportInput = {
  readonly action: RegulatorReportAction;
  readonly caseNumber?: InputMaybe<Scalars['String']>;
  readonly description: Scalars['String'];
  readonly emailAddress: Scalars['String'];
  readonly reason: RegulatorReportReason;
  readonly supportingFiles: ReadonlyArray<FileInput>;
  readonly urls: ReadonlyArray<Scalars['String']>;
};

export type UpsertResponsiblePerson = {
  readonly __typename?: 'UpsertResponsiblePerson';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertRestrictedProductRequest = {
  readonly __typename?: 'UpsertRestrictedProductRequest';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertReturnWarehouseInput = {
  readonly address: AddressInput;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly isActive: Scalars['Boolean'];
  readonly name: Scalars['String'];
};

export type UpsertShippingProfile = {
  readonly __typename?: 'UpsertShippingProfile';
  readonly id?: Maybe<Scalars['ObjectIdType']>;
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertTaxSettingsInput = {
  readonly countryOfDomicile: CountryCode;
  readonly euStandardShipFromCc?: InputMaybe<CountryCode>;
  readonly euWishExpressShipFromCc?: InputMaybe<CountryCode>;
  readonly settings: ReadonlyArray<TaxSettingsInput>;
};

export type UpsertTaxSettingsMutation = {
  readonly __typename?: 'UpsertTaxSettingsMutation';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertVideo = {
  readonly __typename?: 'UpsertVideo';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly videoId?: Maybe<Scalars['ObjectIdType']>;
};

export type UpsertWarehouseInput = {
  readonly address?: InputMaybe<AddressInput>;
  readonly enabledCountries?: InputMaybe<ReadonlyArray<CountryCode>>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly merchantFulfillmentTimeInfo?: InputMaybe<MerchantFulfillmentTimeInfoInput>;
  readonly name?: InputMaybe<Scalars['String']>;
};

export type UpsertWebhookSubscription = {
  readonly __typename?: 'UpsertWebhookSubscription';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UpsertWebhookSubscriptionInput = {
  readonly endpoint: Scalars['String'];
  readonly subscriptionId?: InputMaybe<Scalars['ObjectIdType']>;
  readonly topicId?: InputMaybe<Scalars['ObjectIdType']>;
};

export type UserBackToOnboardingReason =
  | 'DORMANT'
  | 'FAKE_NON_CN_NO_REAL_NAME'
  | 'REVERT_REVIEW_RESULT'
  | 'TRIGGERED_CN_VERIFICATION';

export type UserEntityType =
  | 'COMPANY'
  | 'INDIVIDUAL';

export type UserGateSchema = {
  readonly __typename?: 'UserGateSchema';
  readonly isAllowed: Scalars['Boolean'];
};


export type UserGateSchemaIsAllowedArgs = {
  name: Scalars['String'];
};

export type UserMutation = {
  readonly __typename?: 'UserMutation';
  readonly changeEmail?: Maybe<ChangeEmailMutation>;
  readonly changePhoneNumber: ChangePhoneNumberMutation;
  readonly deleteAllDevices: DeleteAllDevicesMutation;
  readonly deleteDevice: DeleteDeviceMutation;
  readonly manualLinkEntity: MerchantEntityManualLinkMutations;
  readonly merchant?: Maybe<MerchantMutation>;
  readonly onboarding: UserOnboardingMutations;
  readonly password: PasswordMutations;
  readonly twoFactorAuthentication: TwoFactorMutations;
  readonly uiState?: Maybe<UiStateMutations>;
};


export type UserMutationChangeEmailArgs = {
  input: ChangeEmailInput;
};


export type UserMutationDeleteDeviceArgs = {
  input: DeleteDeviceInput;
};

export type UserOnboardingAboutBusinessInfo = {
  readonly existingStoreUrl?: InputMaybe<Scalars['String']>;
  readonly onboardingAnnualRevenueRange: Scalars['String'];
  readonly onboardingExistingSellingLocations: ExistingSellingLocations;
  readonly onboardingHasErpPartners?: InputMaybe<Scalars['Boolean']>;
  readonly onboardingMerchantSellerAge: Scalars['String'];
  readonly onboardingProductCategory: Scalars['String'];
  readonly onboardingSkuQuantity: Scalars['Int'];
  readonly onboardingTopPerformingWebsite?: InputMaybe<Scalars['String']>;
  readonly onboardingWishLocalInterested?: InputMaybe<Scalars['Boolean']>;
};

export type UserOnboardingAccountSetup = {
  readonly email?: InputMaybe<Scalars['String']>;
  readonly firstName: Scalars['String'];
  readonly lastName: Scalars['String'];
  readonly storeName?: InputMaybe<Scalars['String']>;
};

export type UserOnboardingAccountSetupMutation = {
  readonly __typename?: 'UserOnboardingAccountSetupMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UserOnboardingBusinessInfo = {
  readonly city: Scalars['String'];
  readonly country: CountryCode;
  readonly countryOfDomicile?: InputMaybe<CountryCode>;
  readonly onboardingBusinessRegistrationName?: InputMaybe<Scalars['String']>;
  readonly onboardingBusinessRegistrationNumber?: InputMaybe<Scalars['Int']>;
  readonly state?: InputMaybe<Scalars['String']>;
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: InputMaybe<Scalars['String']>;
  readonly zipcode: Scalars['String'];
};

export type UserOnboardingContactInfo = {
  readonly city: Scalars['String'];
  readonly country: CountryCode;
  readonly firstName: Scalars['String'];
  readonly lastName: Scalars['String'];
  readonly phoneNumber: Scalars['String'];
  readonly state?: InputMaybe<Scalars['String']>;
  readonly streetAddress1: Scalars['String'];
  readonly streetAddress2?: InputMaybe<Scalars['String']>;
  readonly zipcode: Scalars['String'];
};

export type UserOnboardingMutations = {
  readonly __typename?: 'UserOnboardingMutations';
  readonly setAboutBusinessInfo?: Maybe<UserOnboardingSetAboutBusinessInfoMutation>;
  readonly setAccountInfo?: Maybe<UserOnboardingAccountSetupMutation>;
  readonly setBusinessInfo?: Maybe<UserOnboardingSetBusinessInfoMutation>;
  readonly setContactInfo?: Maybe<UserOnboardingSetContactInfoMutation>;
  readonly verifyPhoneNumber?: Maybe<UserOnboardingVerifyPhoneNumberMutation>;
};


export type UserOnboardingMutationsSetAboutBusinessInfoArgs = {
  input: UserOnboardingAboutBusinessInfo;
};


export type UserOnboardingMutationsSetAccountInfoArgs = {
  input: UserOnboardingAccountSetup;
};


export type UserOnboardingMutationsSetBusinessInfoArgs = {
  input: UserOnboardingBusinessInfo;
};


export type UserOnboardingMutationsSetContactInfoArgs = {
  input: UserOnboardingContactInfo;
};


export type UserOnboardingMutationsVerifyPhoneNumberArgs = {
  input: UserOnboardingVerifyPhoneNumber;
};

export type UserOnboardingSetAboutBusinessInfoMutation = {
  readonly __typename?: 'UserOnboardingSetAboutBusinessInfoMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UserOnboardingSetBusinessInfoMutation = {
  readonly __typename?: 'UserOnboardingSetBusinessInfoMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UserOnboardingSetContactInfoMutation = {
  readonly __typename?: 'UserOnboardingSetContactInfoMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UserOnboardingVerifyPhoneNumber = {
  readonly byPhoneCall?: InputMaybe<Scalars['Boolean']>;
  readonly phoneNumber: Scalars['String'];
  readonly verificationCode?: InputMaybe<Scalars['String']>;
};

export type UserOnboardingVerifyPhoneNumberMutation = {
  readonly __typename?: 'UserOnboardingVerifyPhoneNumberMutation';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type UserSchema = {
  readonly __typename?: 'UserSchema';
  readonly accountManager?: Maybe<UserSchema>;
  readonly alerts?: Maybe<ReadonlyArray<AlertSchema>>;
  readonly backToOnboardingReason?: Maybe<UserBackToOnboardingReason>;
  readonly bdMerchantCountry?: Maybe<BdMerchantCountryCodeType>;
  readonly businessAddress?: Maybe<AddressSchema>;
  readonly canAcceptMerchantTos: Scalars['Boolean'];
  readonly canAccessHome: Scalars['Boolean'];
  readonly canEditPhoneNumber: Scalars['Boolean'];
  readonly canHandleEscalatedMerchantGamingReview: Scalars['Boolean'];
  readonly companyName?: Maybe<Scalars['String']>;
  readonly confirmEmailPath?: Maybe<Scalars['String']>;
  readonly currentDevices: ReadonlyArray<DeviceSchema>;
  readonly displayName?: Maybe<Scalars['String']>;
  readonly email: Scalars['String'];
  readonly entityType?: Maybe<UserEntityType>;
  readonly factoryManager?: Maybe<UserSchema>;
  readonly firstName?: Maybe<Scalars['String']>;
  readonly gating: UserGateSchema;
  readonly hasPermission: Scalars['Boolean'];
  readonly hasSeenFbwTos: Scalars['Boolean'];
  readonly hasTfaBackupCodes: Scalars['Boolean'];
  readonly id: Scalars['ObjectIdType'];
  readonly isAdmin: Scalars['Boolean'];
  readonly isApiUser: Scalars['Boolean'];
  readonly isBd?: Maybe<Scalars['Boolean']>;
  readonly isEnabled: Scalars['Boolean'];
  readonly isNewNav?: Maybe<Scalars['Boolean']>;
  readonly isOnCsTeam: Scalars['Boolean'];
  readonly isSalesRep: Scalars['Boolean'];
  readonly isStoreOrMerchantUser: Scalars['Boolean'];
  readonly lastName?: Maybe<Scalars['String']>;
  readonly manager?: Maybe<UserSchema>;
  readonly manualMerchantConnections?: Maybe<ReadonlyArray<MerchantConnectionSchema>>;
  readonly merchantId?: Maybe<Scalars['ObjectIdType']>;
  readonly name?: Maybe<Scalars['String']>;
  readonly numCurrentDevices?: Maybe<Scalars['Int']>;
  readonly oidcCredentials?: Maybe<ReadonlyArray<OidcCredentialSchema>>;
  readonly onboarding?: Maybe<OnboardingSchema>;
  readonly onboardingUrl?: Maybe<Scalars['String']>;
  readonly permissions?: Maybe<ReadonlyArray<PermissionSchema>>;
  readonly phoneNumber?: Maybe<Scalars['String']>;
  readonly possibleManagers?: Maybe<ReadonlyArray<UserSchema>>;
  readonly qqGroupNumber?: Maybe<Scalars['String']>;
  readonly queues?: Maybe<ReadonlyArray<LogicalQueueSchema>>;
  readonly roles?: Maybe<ReadonlyArray<RoleSchema>>;
  readonly serviceTypes?: Maybe<ReadonlyArray<UserServiceType>>;
  readonly supportConfig?: Maybe<MerchantSupportConfigSchema>;
  readonly tfaTokenSentTime?: Maybe<Datetime>;
  readonly todo: TodoSchema;
  readonly twoFactorEnabled: Scalars['Boolean'];
  readonly uiState?: Maybe<UiStateSchema>;
  readonly username: Scalars['String'];
  readonly utmSource?: Maybe<Scalars['String']>;
};


export type UserSchemaCurrentDevicesArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  skip?: InputMaybe<Scalars['Int']>;
};


export type UserSchemaHasPermissionArgs = {
  permissions: ReadonlyArray<PermissionType>;
};


export type UserSchemaOnboardingUrlArgs = {
  currentUrlPath: Scalars['String'];
};


export type UserSchemaPermissionsArgs = {
  status: PermissionStatusType;
};


export type UserSchemaQueuesArgs = {
  assigned?: InputMaybe<Scalars['Boolean']>;
};

export type UserServiceType =
  | 'EMAIL'
  | 'TAGGING'
  | 'TICKET';

export type UserUiState =
  | 'DISMISSED_FULFILLMENT_PENALTY_INSIGHT'
  | 'DISMISSED_FULFILLMENT_SLA_INSIGHT'
  | 'DISMISSED_HOW_TO_FULFILL_INSIGHT'
  | 'DISMISSED_KYC_VERIFICATION_INTRO_BANNER'
  | 'DISMISSED_SELLER_VERIFICATION_INTRO_BANNER'
  | 'DISMISSED_SWITCH_NAV_BACK_TUTORIAL'
  | 'DISMISSED_VIDEO_OPTIMIZE_TIPS'
  | 'DISMISSED_WISH_EXPRESS_INTRO_BANNER'
  | 'FULFILLMENT_MOST_RECENT_ORIGIN_COUNTRIES'
  | 'FULFILLMENT_MOST_RECENT_SHIPPING_PROVIDERS'
  | 'HAS_COMPLETED_CS_SURVEY'
  | 'HAS_SEEN_KYC_VERIFICATION_SUCCESS_MESSAGE'
  | 'HAS_SEEN_MFP_PRICE_ONLY_CAROUSEL'
  | 'HAS_SEEN_PB_PRODUCTS_TABLE_V2'
  | 'HAS_SEEN_SELLER_VERIFICATION_SUCCESS_MESSAGE'
  | 'PREFERS_NEW_NAV'
  | 'PREFERS_OLD_NAV'
  | 'STORE_TIME_SEEN_SELL_ON_WISH_BANNER';

export type UsersSortFieldType =
  | 'EMAIL'
  | 'ID'
  | 'USERNAME';

export type VacationSettings = {
  readonly __typename?: 'VacationSettings';
  readonly changeVacationSettings: ChangeVacationSettingsMutation;
  readonly clearVacationSettings: ClearVacationSettingsMutation;
};


export type VacationSettingsChangeVacationSettingsArgs = {
  input: ChangeVacationSettingsInput;
};

export type VacationSettingsSchema = {
  readonly __typename?: 'VacationSettingsSchema';
  readonly endDate: Datetime;
  readonly extensionDays: Scalars['Int'];
  readonly primaryWarehouseOnly: Scalars['Boolean'];
  readonly startDate: Datetime;
};

export type ValidationResultSchema = {
  readonly __typename?: 'ValidationResultSchema';
  readonly isEvent: Scalars['Boolean'];
  readonly payableId: Scalars['String'];
  readonly reason: ReadonlyArray<Reason>;
};

export type VariationDimensions = {
  readonly __typename?: 'VariationDimensions';
  readonly height: Length;
  readonly length: Length;
  readonly width: Length;
};

export type VariationDiscountDataInput = {
  readonly discountPercentage: Scalars['Float'];
  readonly maxQuantity?: InputMaybe<Scalars['Int']>;
  readonly productId: Scalars['ObjectIdType'];
  readonly variationId: Scalars['ObjectIdType'];
};

export type VariationInput = {
  readonly attributes?: InputMaybe<ReadonlyArray<AttributeInput>>;
  readonly color?: InputMaybe<Scalars['String']>;
  readonly consignmentSupplyCost?: InputMaybe<Scalars['Float']>;
  readonly cost?: InputMaybe<CurrencyInput>;
  readonly customsHsCode?: InputMaybe<Scalars['String']>;
  readonly declaredLocalName?: InputMaybe<Scalars['String']>;
  readonly declaredName?: InputMaybe<Scalars['String']>;
  readonly declaredValue?: InputMaybe<CurrencyInput>;
  readonly enabled?: InputMaybe<Scalars['Boolean']>;
  readonly gtin?: InputMaybe<Scalars['String']>;
  readonly hasBattery?: InputMaybe<Scalars['Boolean']>;
  readonly hasLiquid?: InputMaybe<Scalars['Boolean']>;
  readonly hasMetal?: InputMaybe<Scalars['Boolean']>;
  readonly hasPowder?: InputMaybe<Scalars['Boolean']>;
  readonly height?: InputMaybe<LengthInput>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly image?: InputMaybe<ImageInput>;
  readonly inventory?: InputMaybe<ReadonlyArray<InventoryInput>>;
  readonly length?: InputMaybe<LengthInput>;
  readonly options?: InputMaybe<ReadonlyArray<AttributeInput>>;
  readonly originCountry?: InputMaybe<CountryCode>;
  readonly pieces?: InputMaybe<Scalars['Int']>;
  readonly price?: InputMaybe<CurrencyInput>;
  readonly quantityArea?: InputMaybe<AreaInput>;
  readonly quantityLength?: InputMaybe<LengthInput>;
  readonly quantityUnit?: InputMaybe<CountInput>;
  readonly quantityVolume?: InputMaybe<VolumeInput>;
  readonly quantityWeight?: InputMaybe<WeightInput>;
  readonly size?: InputMaybe<Scalars['String']>;
  readonly sku?: InputMaybe<Scalars['String']>;
  readonly weight?: InputMaybe<WeightInput>;
  readonly width?: InputMaybe<LengthInput>;
};

export type VariationSchema = {
  readonly __typename?: 'VariationSchema';
  readonly attributes?: Maybe<ReadonlyArray<MerchantProvidedAttributeSchema>>;
  readonly color?: Maybe<Scalars['String']>;
  readonly consignmentSupplyCost?: Maybe<CurrencyValue>;
  readonly customsHsCode?: Maybe<Scalars['String']>;
  readonly declaredLocalName?: Maybe<Scalars['String']>;
  readonly declaredName?: Maybe<Scalars['String']>;
  readonly declaredValue?: Maybe<CurrencyValue>;
  readonly effectiveWeight?: Maybe<Weight>;
  readonly enabled?: Maybe<Scalars['Boolean']>;
  readonly fbwInventory: ReadonlyArray<FbwInventorySchema>;
  readonly gtin?: Maybe<Scalars['String']>;
  readonly hasBattery?: Maybe<Scalars['Boolean']>;
  readonly hasLiquid?: Maybe<Scalars['Boolean']>;
  readonly hasMetal?: Maybe<Scalars['Boolean']>;
  readonly hasPowder?: Maybe<Scalars['Boolean']>;
  readonly height?: Maybe<Length>;
  readonly id: Scalars['ObjectIdType'];
  readonly image?: Maybe<ImageSchema>;
  readonly inventory: ReadonlyArray<InventorySchema>;
  readonly length?: Maybe<Length>;
  readonly logisticsMetadata: LogisticsMetadataSchema;
  readonly msrp?: Maybe<CurrencyValue>;
  readonly options?: Maybe<ReadonlyArray<MerchantProvidedAttributeSchema>>;
  readonly originCountry?: Maybe<Country>;
  readonly pieces?: Maybe<Scalars['Int']>;
  readonly price: CurrencyValue;
  readonly productId: Scalars['String'];
  readonly productName: Scalars['String'];
  readonly quantityArea?: Maybe<Area>;
  readonly quantityLength?: Maybe<Length>;
  readonly quantityUnit?: Maybe<Count>;
  readonly quantityVolume?: Maybe<Volume>;
  readonly quantityWeight?: Maybe<Weight>;
  readonly size?: Maybe<Scalars['String']>;
  readonly sku: Scalars['String'];
  readonly totalInventory?: Maybe<Scalars['Int']>;
  readonly weight?: Maybe<Weight>;
  readonly width?: Maybe<Length>;
};


export type VariationSchemaTotalInventoryArgs = {
  shippingType?: InputMaybe<WarehouseShippingType>;
};

export type VariationSearchType =
  | 'PRODUCT_ID'
  | 'PRODUCT_NAME'
  | 'SKU';

export type VariationSort = {
  readonly field: VariationSortField;
  readonly order: SortOrderType;
};

export type VariationSortField =
  | 'ID'
  | 'INVENTORY'
  | 'SKU';

export type VerificationFlowTypes =
  | 'CN_FLOW'
  | 'DEFAULT_FLOW'
  | 'EEA_KYC'
  | 'SIGNUP_V3';

export type VideoCaptionSpec = {
  readonly location: ScreenCoordinates;
  readonly text: Scalars['String'];
};

export type VideoCategory =
  | 'ALL'
  | 'FASHION'
  | 'GADGETS'
  | 'HOBBIES'
  | 'HOME_DECOR'
  | 'KITCHEN'
  | 'MAKEUP_AND_BEAUTY'
  | 'OUTDOOR'
  | 'TOYS';

export type VideoLeaderboard = {
  readonly __typename?: 'VideoLeaderboard';
  readonly lastUpdated: Datetime;
  readonly videos: ReadonlyArray<ProductVideo>;
};

export type VideoMotion =
  | 'PAN_LEFT'
  | 'PAN_RIGHT'
  | 'SLOW_EXPAND'
  | 'UNKNOWN_ANIMATION';

export type VideoMutations = {
  readonly __typename?: 'VideoMutations';
  readonly generateVideo?: Maybe<GenerateVideoMutation>;
  readonly posts?: Maybe<ProductPostsMutations>;
};


export type VideoMutationsGenerateVideoArgs = {
  input: GenerateVideoInput;
};

export type VideoPerformance = {
  readonly __typename?: 'VideoPerformance';
  readonly addToCartPercentChange: Scalars['Float'];
  readonly avgWatchTimePercentChange: Scalars['Float'];
  readonly buyerIntentPercentChange: Scalars['Float'];
  readonly conversionsPercentChange: Scalars['Float'];
  readonly dailyStats: ReadonlyArray<ProductVideoDailyStats>;
  readonly engagedViewsPercentChange: Scalars['Float'];
  readonly totalGmvPercentChange: Scalars['Float'];
  readonly totalLikesPercentChange: Scalars['Float'];
  readonly totalViewsPercentChange: Scalars['Float'];
  readonly totalWatchTimePercentChange: Scalars['Float'];
};

export type VideoQualityLevel =
  | 'AVERAGE'
  | 'BAD'
  | 'GOOD'
  | 'UNKNOWN_LEVEL';

export type VideoSearchType =
  | 'ID'
  | 'NAME'
  | 'PRODUCT_ID';

export type VideoSlideSpec = {
  readonly caption: VideoCaptionSpec;
  readonly duration: Scalars['Int'];
  readonly imageMotion?: InputMaybe<VideoMotion>;
  readonly inputUrl: Scalars['String'];
  readonly isVideo: Scalars['Boolean'];
};

export type VideoSort = {
  readonly field: VideoSortField;
  readonly order: SortOrderType;
};

export type VideoSortField =
  | 'ID';

export type VideoUpsertInput = {
  readonly audioEndTime?: InputMaybe<Scalars['Float']>;
  readonly audioStartTime?: InputMaybe<Scalars['Float']>;
  readonly audioUrl?: InputMaybe<Scalars['String']>;
  readonly description?: InputMaybe<Scalars['String']>;
  readonly id?: InputMaybe<Scalars['ObjectIdType']>;
  readonly productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  readonly title?: InputMaybe<Scalars['String']>;
  readonly videoUrl?: InputMaybe<Scalars['String']>;
  readonly visibility?: InputMaybe<VideoVisibility>;
};

export type VideoVisibility =
  | 'LIVE'
  | 'UNLISTED';

export type ViewTermsOfService = {
  readonly __typename?: 'ViewTermsOfService';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ViewTermsOfServiceById = {
  readonly __typename?: 'ViewTermsOfServiceById';
  readonly message?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
};

export type ViewTermsOfServiceByIdInput = {
  readonly tosId: Scalars['ObjectIdType'];
};

export type Volume = {
  readonly __typename?: 'Volume';
  readonly unit: VolumeUnit;
  readonly value: Scalars['Float'];
};


export type VolumeValueArgs = {
  targetUnit?: InputMaybe<VolumeUnit>;
};

export type VolumeInput = {
  readonly unit: VolumeUnit;
  readonly value: Scalars['Float'];
};

export type VolumeUnit =
  | 'CENTILITER'
  | 'CUBICMETER'
  | 'FLUID_OUNCE'
  | 'GALLON'
  | 'LITER'
  | 'MILLILITER'
  | 'PINT'
  | 'QUART';

export type WfpMutations = {
  readonly __typename?: 'WFPMutations';
  readonly cancelWfpWithhold?: Maybe<CancelWfpWithholdMutation>;
};


export type WfpMutationsCancelWfpWithholdArgs = {
  input: CancelWfpWithholdMutationInput;
};

export type WfpOrderDeliveryState =
  | 'LATE'
  | 'NOT_DELIVERED'
  | 'ON_TIME'
  | 'SIGNIFICANTLY_LATE'
  | 'UNKNOWN';

export type WfpWithholdReasonSchema = {
  readonly __typename?: 'WFPWithholdReasonSchema';
  readonly lateDeliveryDetail?: Maybe<LateDeliverySchema>;
  readonly reason: Scalars['String'];
};

export type WpsAdditionalTrackingService = {
  readonly __typename?: 'WPSAdditionalTrackingService';
  readonly fee?: Maybe<CurrencyValue>;
  readonly name: Scalars['String'];
  readonly type: WpsAvailableServices;
};

export type WpsAvailableServices =
  | 'ADDITIONAL_HANDLING'
  | 'BASE_SERVICE'
  | 'SATURDAY_DELIVERY'
  | 'SIGNATURE_REQUIRED';

export type WpsFee = {
  readonly __typename?: 'WPSFee';
  readonly itemizedCharges: ReadonlyArray<WpsItemizedCharge>;
  readonly totalFee: CurrencyValue;
};

export type WpsFeeAdjustment = {
  readonly __typename?: 'WPSFeeAdjustment';
  readonly amount: CurrencyValue;
  readonly creationDate: Datetime;
  readonly paymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly paymentProcessedDate?: Maybe<Datetime>;
  readonly reason?: Maybe<Scalars['String']>;
};

export type WpsFulfillmentInfoSchema = {
  readonly __typename?: 'WPSFulfillmentInfoSchema';
  readonly feeAdjustments?: Maybe<ReadonlyArray<WpsFeeAdjustment>>;
  readonly paymentId?: Maybe<Scalars['ObjectIdType']>;
  readonly paymentProcessedDate?: Maybe<Datetime>;
  readonly purchaseDate?: Maybe<Datetime>;
  readonly shipmentFee: WpsFee;
  readonly shipmentState: WpsShipmentState;
  readonly shippingLabelDownloadLink?: Maybe<Scalars['String']>;
  readonly shippingOptionId?: Maybe<Scalars['ObjectIdType']>;
};

export type WpsGetShippingOptionsSchema = {
  readonly __typename?: 'WPSGetShippingOptionsSchema';
  readonly errorMessage?: Maybe<Scalars['String']>;
  readonly ok: Scalars['Boolean'];
  readonly shippingOptions?: Maybe<ReadonlyArray<WpsShippingOptionSchema>>;
};

export type WpsItemizedCharge = {
  readonly __typename?: 'WPSItemizedCharge';
  readonly fee: CurrencyValue;
  readonly name: Scalars['String'];
  readonly type: WpsAvailableServices;
};

export type WpsPackageType =
  | 'BOX'
  | 'ENVELOPE';

export type WpsShipmentState =
  | 'ADJUSTED'
  | 'ADJUSTMENT_PENDING'
  | 'CANCELLATION_PENDING'
  | 'CANCELLED'
  | 'COMPLETE'
  | 'CREATED'
  | 'EXPIRED'
  | 'FAILED'
  | 'ORDER_STATE_UPLOADED'
  | 'PAID'
  | 'PAYMENT_PENDING'
  | 'REFUNDED'
  | 'REFUND_PENDING';

export type WpsShippingOptionSchema = {
  readonly __typename?: 'WPSShippingOptionSchema';
  readonly availableAdditionalServiceOptions: ReadonlyArray<WpsAdditionalTrackingService>;
  readonly daysToDeliver: Scalars['Int'];
  readonly id: Scalars['ObjectIdType'];
  readonly includesTracking: Scalars['Boolean'];
  readonly isRegistered: Scalars['Boolean'];
  readonly maxDaysToDeliver: Scalars['Int'];
  readonly minDaysToDeliver: Scalars['Int'];
  readonly name: Scalars['String'];
  readonly price: CurrencyValue;
  readonly provider: WpsShippingProviderSchema;
};

export type WpsShippingProviderSchema = {
  readonly __typename?: 'WPSShippingProviderSchema';
  readonly id: Scalars['String'];
  readonly name: Scalars['String'];
  readonly wpsId: Scalars['ObjectIdType'];
};

export type WpsTermsTypeEnum =
  | 'UPS'
  | 'WPS';

export type WssDeepDivePageType =
  | 'FULFILLMENT_RATE'
  | 'FULFILLMENT_SPEED'
  | 'LOGISTICS_REFUND'
  | 'VALID_TRACKING_RATE';

export type WssImpactState =
  | 'EVALUATING'
  | 'NO'
  | 'YES';

export type WssLogisticsRefundReason =
  | 'EPC_LAST_MILE_CARRIERS_UNABLE_TO_SHIP'
  | 'EPC_OVERSIZE'
  | 'EPC_OVERVALUE'
  | 'EPC_OVERWEIGHT'
  | 'FBW_FAILED_TO_FULFILL_DUE_TO_CARRIER_RETURN'
  | 'ITEM_HELD_AT_CUSTOMS'
  | 'ITEM_MARKED_DELIVERED_BUT_DID_NOT_ARRIVE'
  | 'ITEM_MARKED_DELIVERED_NOT_ALL_ITEMS_ARRIVED'
  | 'ITEM_NEVER_ARRIVED'
  | 'ITEM_RETURNED_TO_SENDER'
  | 'MERCHANT_SENT_TO_WRONG_ADDRESS'
  | 'NOT_QUALIFIED_SHIPPING_PROVIDER'
  | 'REPLACEMENT_NEVER_RECEIVED'
  | 'SHIPPING_TAKING_TOO_LONG'
  | 'USER_ENTERED_INVALID_ADDRESS';

export type WssMerchantLevelType =
  | 'BAN'
  | 'BRONZE'
  | 'GOLD'
  | 'PLATINUM'
  | 'SILVER'
  | 'UNASSESSED';

export type WssMetricTrend =
  | 'DECREASING'
  | 'INCREASING'
  | 'SAME'
  | 'UNSPECIFIED';

export type WssMetricType =
  | 'AVERAGE_USER_RATING'
  | 'BAD_PRODUCT_RATE'
  | 'LATE_CONFIRMED_FULFILLMENT'
  | 'LOGISTICS_REFUND'
  | 'MISLEADING_LISTING'
  | 'MISLEADING_TRACKING'
  | 'ORDER_CANCELLATION'
  | 'ORDER_FULFILLMENT_RATE'
  | 'ORDER_FULFILLMENT_SPEED'
  | 'PRODUCT_QUALITY_REFUND'
  | 'PROHIBITED_PRODUCT'
  | 'UNFULFILLED_ORDER'
  | 'VALID_TRACKING_RATE';

export type WssOrderFulfillment = {
  readonly __typename?: 'WSSOrderFulfillment';
  readonly carrier?: Maybe<Scalars['String']>;
  readonly destination?: Maybe<Scalars['String']>;
  readonly fulfillmentSpeed?: Maybe<Timedelta>;
  readonly orderId?: Maybe<Scalars['ObjectIdType']>;
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
  readonly productImageUrl?: Maybe<Scalars['String']>;
  readonly productName?: Maybe<Scalars['String']>;
  readonly trackingId?: Maybe<Scalars['ObjectIdType']>;
  readonly transactionDate?: Maybe<Datetime>;
  readonly unfulfilledReason?: Maybe<WsssUnfulfilledReasons>;
};

export type WssOrderFulfillmentPage = {
  readonly __typename?: 'WSSOrderFulfillmentPage';
  readonly dataSlice: ReadonlyArray<WssOrderFulfillment>;
  readonly totalCount: Scalars['Int'];
};

export type WssOrderRefund = {
  readonly __typename?: 'WSSOrderRefund';
  readonly carrier?: Maybe<Scalars['String']>;
  readonly orderId?: Maybe<Scalars['ObjectIdType']>;
  readonly refundReason?: Maybe<ReturnRequestRefundReason>;
  readonly transactionDate?: Maybe<Datetime>;
};

export type WssOrderRefundPage = {
  readonly __typename?: 'WSSOrderRefundPage';
  readonly dataSlice: ReadonlyArray<WssOrderRefund>;
  readonly totalCount: Scalars['Int'];
};

export type WssPerformanceDeepDiveHub = {
  readonly __typename?: 'WSSPerformanceDeepDiveHub';
  readonly carriers?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly carriersInFulfillment?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly carriersInRefund?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly destinations?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly destinationsInFulfillment?: Maybe<ReadonlyArray<Scalars['String']>>;
  readonly fulfillmentRateDenominator?: Maybe<Scalars['Int']>;
  readonly hasFulfillmentSpeedOrderCount?: Maybe<Scalars['Int']>;
  readonly logisticsRefundReasons?: Maybe<ReadonlyArray<WssLogisticsRefundReason>>;
  readonly orderFulfillmentSpeed: WssOrderFulfillmentPage;
  readonly orderInvalidTracking: WssOrderFulfillmentPage;
  readonly orderLogisticsRefund: WssOrderRefundPage;
  readonly orderQualityRefund: WssOrderRefundPage;
  readonly orderUnfulfilled: WssOrderFulfillmentPage;
  readonly productQualityRefund: WssProductRefundPage;
  readonly productRating: WssProductRatingPage;
  readonly qualityRefundBreakdown: ReadonlyArray<WssRefundBreakdown>;
  readonly qualityRefundCount?: Maybe<Scalars['Int']>;
  readonly qualityRefundReasons?: Maybe<ReadonlyArray<WssQualityRefundReason>>;
  readonly refundRateDenominator?: Maybe<Scalars['Int']>;
  readonly totalRatingsReceived?: Maybe<Scalars['Int']>;
  readonly unfulfilledReasons?: Maybe<ReadonlyArray<WsssUnfulfilledReasons>>;
  readonly validTrackingRateDenominator?: Maybe<Scalars['Int']>;
};


export type WssPerformanceDeepDiveHubCarriersArgs = {
  pageType: WssDeepDivePageType;
};


export type WssPerformanceDeepDiveHubDestinationsArgs = {
  pageType: WssDeepDivePageType;
};


export type WssPerformanceDeepDiveHubOrderFulfillmentSpeedArgs = {
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sortField?: InputMaybe<SortOrderFulfillmentSpeed>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubOrderInvalidTrackingArgs = {
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubOrderLogisticsRefundArgs = {
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  refundReasons?: InputMaybe<ReadonlyArray<WssLogisticsRefundReason>>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubOrderQualityRefundArgs = {
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  productId?: InputMaybe<Scalars['ObjectIdType']>;
  refundReasons?: InputMaybe<ReadonlyArray<WssQualityRefundReason>>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubOrderUnfulfilledArgs = {
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
  unfulfilledReasons?: InputMaybe<ReadonlyArray<WsssUnfulfilledReasons>>;
};


export type WssPerformanceDeepDiveHubProductQualityRefundArgs = {
  isBadByRefund?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sortField?: InputMaybe<SortProductQualityRefundField>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubProductRatingArgs = {
  isBadByRating?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']>>;
  sortField?: InputMaybe<SortProductRatingField>;
  sortOrder?: InputMaybe<SortByOrder>;
};


export type WssPerformanceDeepDiveHubQualityRefundBreakdownArgs = {
  productId?: InputMaybe<Scalars['ObjectIdType']>;
};


export type WssPerformanceDeepDiveHubQualityRefundReasonsArgs = {
  productId: Scalars['ObjectIdType'];
};

export type WssProductRating = {
  readonly __typename?: 'WSSProductRating';
  readonly averageRating: Scalars['Float'];
  readonly productId: Scalars['ObjectIdType'];
  readonly productImageUrl?: Maybe<Scalars['String']>;
  readonly productName?: Maybe<Scalars['String']>;
  readonly receivedRatings: Scalars['Int'];
};

export type WssProductRatingPage = {
  readonly __typename?: 'WSSProductRatingPage';
  readonly dataSlice: ReadonlyArray<WssProductRating>;
  readonly totalCount: Scalars['Int'];
};

export type WssProductRefund = {
  readonly __typename?: 'WSSProductRefund';
  readonly productId: Scalars['ObjectIdType'];
  readonly productImageUrl?: Maybe<Scalars['String']>;
  readonly productName?: Maybe<Scalars['String']>;
  readonly qualityRefundIssued: Scalars['Int'];
  readonly qualityRefundRate?: Maybe<Scalars['Float']>;
  readonly receivedOrders: Scalars['Int'];
};

export type WssProductRefundPage = {
  readonly __typename?: 'WSSProductRefundPage';
  readonly dataSlice: ReadonlyArray<WssProductRefund>;
  readonly totalCount: Scalars['Int'];
};

export type WssQualityRefundReason =
  | 'EMPTY_PACKAGE'
  | 'INCORRECT_QUANTITY_OF_ITEMS'
  | 'ITEM_DID_NOT_MEET_EXPECTATIONS'
  | 'ITEM_DOES_NOT_FIT'
  | 'ITEM_DOES_NOT_MATCH_LISTING'
  | 'ITEM_DOES_NOT_WORK_AS_DESCRIBED'
  | 'ITEM_IS_COUNTERFEIT'
  | 'ITEM_IS_DAMAGED'
  | 'ITEM_IS_DANGEROUS'
  | 'ITEM_IS_POOR_QUALITY'
  | 'MISLEADING_LISTING'
  | 'MISSING_ITEM_OR_PARTS'
  | 'OTHER'
  | 'PRODUCT_LISTING_MISSING_INFO'
  | 'PRODUCT_MALFUNCTION'
  | 'RECEIVED_NOTE_FROM_MERCHANT'
  | 'RECEIVED_WRONG_ITEM'
  | 'STORE_SENT_THE_WRONG_SIZE'
  | 'WRONG_COLOR';

export type WssRefundBreakdown = {
  readonly __typename?: 'WSSRefundBreakdown';
  readonly count?: Maybe<Scalars['Int']>;
  readonly productId?: Maybe<Scalars['ObjectIdType']>;
  readonly reason?: Maybe<ReturnRequestRefundReason>;
};

export type WsssUnfulfilledReasons =
  | 'ORDER_CANCELLED'
  | 'ORDER_EXPIRED'
  | 'ORDER_REFUNDED'
  | 'ORDER_TRACKING_CANCELLED';

export type WssThingsToWatch = {
  readonly __typename?: 'WSSThingsToWatch';
  readonly metricTrend?: Maybe<WssMetricTrend>;
  readonly metricType?: Maybe<WssMetricType>;
  readonly metricValue?: Maybe<Scalars['Float']>;
  readonly recordTime?: Maybe<Datetime>;
};

export type WssThingsToWatchBoard = {
  readonly __typename?: 'WSSThingsToWatchBoard';
  readonly dataSlice: ReadonlyArray<WssThingsToWatch>;
};

export type WarehouseCountryShippingInput = {
  readonly countryShipping?: InputMaybe<ReadonlyArray<CountryShippingInput>>;
  readonly shippingType: WarehouseShippingType;
};

export type WarehouseCountryShippingSchema = {
  readonly __typename?: 'WarehouseCountryShippingSchema';
  readonly countryShipping?: Maybe<ReadonlyArray<CountryShippingSchema>>;
  readonly shippingType: WarehouseShippingType;
};

export type WarehouseShippingType =
  | 'FBW_V1'
  | 'FBW_V1_WLC'
  | 'FBW_V2'
  | 'FBW_V2_CALCULATED'
  | 'FBW_V2_EXPRESS'
  | 'FBW_V2_REGULAR'
  | 'MERCHANT_TTD_1_DAY'
  | 'MERCHANT_TTD_2_DAY'
  | 'MERCHANT_TTD_3_DAY'
  | 'MERCHANT_TTD_4_DAY'
  | 'MERCHANT_TTD_5_DAY'
  | 'MERCHANT_TTD_6_DAY'
  | 'MERCHANT_TTD_7_DAY'
  | 'MERCHANT_TTD_8_DAY'
  | 'MERCHANT_TTD_9_DAY'
  | 'MERCHANT_TTD_10_DAY'
  | 'MERCHANT_TTD_11_DAY'
  | 'MERCHANT_TTD_12_DAY'
  | 'MERCHANT_TTD_13_DAY'
  | 'MERCHANT_TTD_14_DAY'
  | 'MERCHANT_TTD_15_DAY'
  | 'MERCHANT_TTD_16_DAY'
  | 'MERCHANT_TTD_17_DAY'
  | 'MERCHANT_TTD_18_DAY'
  | 'MERCHANT_TTD_19_DAY'
  | 'MERCHANT_TTD_20_DAY'
  | 'MERCHANT_TTD_21_DAY'
  | 'MERCHANT_TTD_22_DAY'
  | 'MERCHANT_TTD_23_DAY'
  | 'MERCHANT_TTD_24_DAY'
  | 'MERCHANT_TTD_25_DAY'
  | 'MERCHANT_TTD_26_DAY'
  | 'MERCHANT_TTD_27_DAY'
  | 'MERCHANT_TTD_28_DAY'
  | 'MERCHANT_TTD_29_DAY'
  | 'MERCHANT_TTD_30_DAY'
  | 'MERCHANT_TTD_31_DAY'
  | 'MERCHANT_TTD_32_DAY'
  | 'MERCHANT_TTD_33_DAY'
  | 'MERCHANT_TTD_34_DAY'
  | 'MERCHANT_TTD_35_DAY'
  | 'MERCHANT_TTD_36_DAY'
  | 'MERCHANT_TTD_37_DAY'
  | 'MERCHANT_TTD_38_DAY'
  | 'MERCHANT_TTD_39_DAY'
  | 'MERCHANT_TTD_40_DAY'
  | 'MERCHANT_TTD_41_DAY'
  | 'MERCHANT_TTD_42_DAY'
  | 'MERCHANT_TTD_43_DAY'
  | 'MERCHANT_TTD_44_DAY'
  | 'MERCHANT_TTD_45_DAY'
  | 'REGULAR'
  | 'WAIT_AND_SAVE'
  | 'WISH_BLUE'
  | 'WISH_EXPRESS'
  | 'WISH_EXPRESS_2_DAY'
  | 'WISH_EXPRESS_7_DAY';

export type WarehouseVerificationRequestSchema = {
  readonly __typename?: 'WarehouseVerificationRequestSchema';
  readonly documentUrls: ReadonlyArray<Scalars['String']>;
  readonly id: Scalars['ObjectIdType'];
  readonly reviewTime?: Maybe<Datetime>;
  readonly reviewerComment?: Maybe<Scalars['String']>;
  readonly submitTime: Datetime;
};

export type WarehouseVerificationState =
  | 'INELIGIBLE'
  | 'PENDING_VERIFICATION'
  | 'REJECTED'
  | 'UNSET'
  | 'UNVERIFIED'
  | 'VERIFIED';

export type WebhookApiVersion =
  | 'V3';

export type WebhookMutations = {
  readonly __typename?: 'WebhookMutations';
  readonly deleteSubscription?: Maybe<DeleteWebhookSubscription>;
  readonly sendTestMessage?: Maybe<SendTestMessage>;
  readonly upsertSubscription?: Maybe<UpsertWebhookSubscription>;
};


export type WebhookMutationsDeleteSubscriptionArgs = {
  input: DeleteWebhookSubscriptionInput;
};


export type WebhookMutationsSendTestMessageArgs = {
  input: SendTestMessageInput;
};


export type WebhookMutationsUpsertSubscriptionArgs = {
  input: UpsertWebhookSubscriptionInput;
};

export type WebhookSchema = {
  readonly __typename?: 'WebhookSchema';
  readonly allowWebhookUi: Scalars['Boolean'];
  readonly subscriptions?: Maybe<ReadonlyArray<WebhookSubscriptionSchema>>;
  readonly topics: ReadonlyArray<WebhookTopicSchema>;
};


export type WebhookSchemaTopicsArgs = {
  apiVersion?: InputMaybe<WebhookApiVersion>;
};

export type WebhookSubscriptionInput = {
  readonly endpoint: Scalars['String'];
  readonly endpointType: SubscriptionEndpointType;
  readonly id: Scalars['ObjectIdType'];
  readonly topic: WebhookTopicInput;
};

export type WebhookSubscriptionSchema = {
  readonly __typename?: 'WebhookSubscriptionSchema';
  readonly deactivateReasonBrief?: Maybe<Scalars['String']>;
  readonly deactivateReasonDetail?: Maybe<Scalars['String']>;
  readonly deactivated: Scalars['Boolean'];
  readonly endpoint: Scalars['String'];
  readonly id: Scalars['ObjectIdType'];
  readonly topic: WebhookTopicSchema;
};

export type WebhookTopicInput = {
  readonly apiVersion: WebhookApiVersion;
  readonly id: Scalars['ObjectIdType'];
  readonly name: WebhookTopicName;
};

export type WebhookTopicName =
  | 'ORDER_ADDRESS_CHANGE'
  | 'ORDER_ALL'
  | 'ORDER_FULFILLMENT_DEADLINE'
  | 'ORDER_PENALTY'
  | 'ORDER_REFUND'
  | 'ORDER_RELEASE'
  | 'ORDER_TAX'
  | 'ORDER_TRACKING_UPDATE'
  | 'POLICY_PENALTY_CANCEL'
  | 'POLICY_PENALTY_ISSUE'
  | 'POLICY_PENALTY_REVERSE'
  | 'PRODUCT_BOOST_ACCOUNT_BALANCE_UPDATE'
  | 'PRODUCT_BOOST_CAMPAIGN_ATTRIBUTE_UPDATE'
  | 'PRODUCT_BOOST_CAMPAIGN_CREATION'
  | 'PRODUCT_BOOST_CAMPAIGN_PRODUCT_LOW_PERFORMANCE'
  | 'PRODUCT_BOOST_CAMPAIGN_PRODUCT_STATS_UPDATE'
  | 'PRODUCT_BOOST_CAMPAIGN_STATS_UPDATE'
  | 'PRODUCT_BOOST_TRENDING_CATEGORIES'
  | 'PRODUCT_IMAGE_JOB_STATUS_UPDATE'
  | 'PRODUCT_INVENTORY_CHANGE_MERCHANT'
  | 'PRODUCT_INVENTORY_CHANGE_WISH_USER'
  | 'PRODUCT_TAGGING_UPDATE'
  | 'PRODUCT_UPDATE_MERCHANT'
  | 'TICKET_AWAITING_MERCHANT';

export type WebhookTopicSchema = {
  readonly __typename?: 'WebhookTopicSchema';
  readonly apiVersion: WebhookApiVersion;
  readonly id: Scalars['ObjectIdType'];
  readonly name: WebhookTopicName;
};

export type WechatCheckScanInput = {
  readonly qrTicket: Scalars['String'];
};

export type WechatCheckScanMutation = {
  readonly __typename?: 'WechatCheckScanMutation';
  readonly error?: Maybe<Scalars['String']>;
  readonly expireIn?: Maybe<Scalars['Int']>;
  readonly ok: Scalars['Boolean'];
  readonly scanned?: Maybe<Scalars['Boolean']>;
};

export type Weight = {
  readonly __typename?: 'Weight';
  readonly unit: WeightUnit;
  readonly value: Scalars['Float'];
};


export type WeightValueArgs = {
  targetUnit?: InputMaybe<WeightUnit>;
};

export type WeightInput = {
  readonly unit: WeightUnit;
  readonly value: Scalars['Float'];
};

export type WeightUnit =
  | 'GRAM'
  | 'KILOGRAM'
  | 'MILLIGRAM'
  | 'OUNCE'
  | 'POUND';

export type WhitelistProductInfo = {
  readonly __typename?: 'WhitelistProductInfo';
  readonly endTime: Datetime;
  readonly product: ProductSchema;
  readonly startTime: Datetime;
  readonly variations: ReadonlyArray<VariationSchema>;
};

export type WhitelistProductSort = {
  readonly field: MfpWhitelistProductSortBy;
  readonly order: SortOrderType;
};

export type WishCompanyInfo = {
  readonly __typename?: 'WishCompanyInfo';
  readonly companyOperatorName: Scalars['String'];
  readonly hqAddress: AddressSchema;
};

export type WishEuvatPayerInfo = {
  readonly __typename?: 'WishEUVATPayerInfo';
  readonly address: AddressSchema;
  readonly iossNumber: Scalars['String'];
};

export type WishExpressCountryDetails = {
  readonly __typename?: 'WishExpressCountryDetails';
  readonly expectedTimeToDoor?: Maybe<Scalars['Int']>;
  readonly supportsWishExpress: Scalars['Boolean'];
};

export type WishExpressInfoSchema = {
  readonly __typename?: 'WishExpressInfoSchema';
  readonly fulfillmentDeadline: Timedelta;
};

export type WishPostShippingSchema = {
  readonly __typename?: 'WishPostShippingSchema';
  readonly country: Country;
  readonly maxPrice?: Maybe<CurrencyValue>;
  readonly minPrice?: Maybe<CurrencyValue>;
};

export type WishPostShippingUpdatesSchema = {
  readonly __typename?: 'WishPostShippingUpdatesSchema';
  readonly amount: CurrencyValue;
  readonly date: Datetime;
  readonly orderId: Scalars['ObjectIdType'];
  readonly paymentDate?: Maybe<Datetime>;
  readonly reason: Scalars['String'];
};

export type WishSellerStandardStats = {
  readonly __typename?: 'WishSellerStandardStats';
  readonly badProductCount?: Maybe<Scalars['Int']>;
  readonly badProductRate?: Maybe<Scalars['Float']>;
  readonly date: Datetime;
  readonly fulfillmentSpeed?: Maybe<Timedelta>;
  readonly ipViolationProductCount: Scalars['Int'];
  readonly lateConfirmedFulfillmentCount: Scalars['Int'];
  readonly levelPreview?: Maybe<WssMerchantLevelType>;
  readonly materialListingChangeCount: Scalars['Int'];
  readonly maturedOrderCount: Scalars['Int'];
  readonly misleadingListingCount: Scalars['Int'];
  readonly misleadingTrackingCount: Scalars['Int'];
  readonly ninetyDayOrderCount: Scalars['Int'];
  readonly orderCancellationCount: Scalars['Int'];
  readonly orderFultillmentRate?: Maybe<Scalars['Float']>;
  readonly productLogisticsRefundRate?: Maybe<Scalars['Float']>;
  readonly productQualityRefundRate?: Maybe<Scalars['Float']>;
  readonly productWithOrdersCount?: Maybe<Scalars['Int']>;
  readonly prohibitedProductCount: Scalars['Int'];
  readonly repeatIpInfractionCount: Scalars['Int'];
  readonly unfulfilledOrderCount: Scalars['Int'];
  readonly userRating?: Maybe<Scalars['Float']>;
  readonly validTrackingRate?: Maybe<Scalars['Float']>;
};

export type WishUserSchema = {
  readonly __typename?: 'WishUserSchema';
  readonly email?: Maybe<Scalars['String']>;
  readonly emailBouncedReason?: Maybe<Scalars['String']>;
  readonly id: Scalars['ObjectIdType'];
  readonly isVerified?: Maybe<Scalars['Boolean']>;
  readonly name?: Maybe<Scalars['String']>;
  readonly signupMethod?: Maybe<WishUserSignupMethod>;
};

export type WishUserSignupMethod =
  | 'APPLE'
  | 'EMAIL'
  | 'FACEBOOK'
  | 'GOOGLE_PLUS'
  | 'PHONE_NUMBER';

export type WorkDayOverride = {
  readonly __typename?: 'WorkDayOverride';
  readonly date: Scalars['String'];
  readonly value: Scalars['Boolean'];
};

export type WorkDayOverrideInput = {
  readonly date: Scalars['String'];
  readonly value: Scalars['Boolean'];
};

export type WorkdayCalender = {
  readonly __typename?: 'WorkdayCalender';
  readonly friday: Scalars['Boolean'];
  readonly monday: Scalars['Boolean'];
  readonly saturday: Scalars['Boolean'];
  readonly sunday: Scalars['Boolean'];
  readonly thursday: Scalars['Boolean'];
  readonly tuesday: Scalars['Boolean'];
  readonly wednesday: Scalars['Boolean'];
};

export type WorkdayCalenderInput = {
  readonly friday: Scalars['Boolean'];
  readonly monday: Scalars['Boolean'];
  readonly saturday: Scalars['Boolean'];
  readonly sunday: Scalars['Boolean'];
  readonly thursday: Scalars['Boolean'];
  readonly tuesday: Scalars['Boolean'];
  readonly wednesday: Scalars['Boolean'];
};

export type WssTier =
  | 'BAN'
  | 'BRONZE'
  | 'GOLD'
  | 'PLATINUM'
  | 'SILVER'
  | 'UNASSESSED';

export type ProductEditState_EditOrCreateProductMutationVariables = Exact<{
  input: ProductUpsertInput;
}>;


export type ProductEditState_EditOrCreateProductMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly upsertProduct?: { readonly __typename?: 'UpsertProduct', readonly ok: boolean, readonly message?: string | null, readonly productId?: string | null } | null } };

export type ProductEditState_RemoveProductMutationVariables = Exact<{
  input: RemoveProductInput;
}>;


export type ProductEditState_RemoveProductMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly removeProduct?: { readonly __typename?: 'RemoveProduct', readonly ok: boolean, readonly message?: string | null } | null } };

export type Existing_Compliance_DocumentsQueryVariables = Exact<{
  id: Scalars['String'];
}>;


export type Existing_Compliance_DocumentsQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly product?: { readonly __typename?: 'ProductSchema', readonly productComplianceDocuments?: ReadonlyArray<{ readonly __typename?: 'ProductComplianceDocumentSchema', readonly fileName: string, readonly fileUrl: string, readonly documentLabel: string }> | null } | null } | null };

export type Update_Compliance_DocumentsMutationVariables = Exact<{
  input: ReadonlyArray<ProductComplianceDocumentInput> | ProductComplianceDocumentInput;
}>;


export type Update_Compliance_DocumentsMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly uploadProductComplianceDocument?: { readonly __typename?: 'UploadProductComplianceDocuments', readonly ok: boolean, readonly failure?: string | null, readonly fileUrls?: ReadonlyArray<string> | null } | null } };

export type BrandSearch_GetTrueBrandsQueryVariables = Exact<{
  count: Scalars['Int'];
  offset: Scalars['Int'];
  queryString: Scalars['String'];
  sort: BrandSort;
}>;


export type BrandSearch_GetTrueBrandsQuery = { readonly __typename?: 'RootQuery', readonly brand?: { readonly __typename?: 'BrandServiceSchema', readonly trueBrands: ReadonlyArray<{ readonly __typename?: 'BrandSchema', readonly id: string, readonly displayName: string, readonly logoUrl?: string | null }> } | null };

export type AddEdit_GetGtinProductQueryQueryVariables = Exact<{
  gtins: ReadonlyArray<Scalars['String']> | Scalars['String'];
  currency: PaymentCurrencyCode;
}>;


export type AddEdit_GetGtinProductQueryQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly gtinProductService: { readonly __typename?: 'GtinProductServiceSchema', readonly product?: { readonly __typename?: 'GtinProductSchema', readonly title?: string | null, readonly description?: string | null, readonly imageUrls?: ReadonlyArray<string> | null, readonly wishBrand?: { readonly __typename?: 'BrandSchema', readonly displayName: string } | null, readonly variations?: ReadonlyArray<{ readonly __typename?: 'GtinVariationSchema', readonly gtin: string, readonly color?: string | null, readonly size?: string | null, readonly imageUrls?: ReadonlyArray<string> | null, readonly length?: { readonly __typename?: 'Length', readonly value: number, readonly unit: LengthUnit } | null, readonly width?: { readonly __typename?: 'Length', readonly value: number, readonly unit: LengthUnit } | null, readonly height?: { readonly __typename?: 'Length', readonly value: number, readonly unit: LengthUnit } | null, readonly weight?: { readonly __typename?: 'Weight', readonly value: number, readonly unit: WeightUnit } | null, readonly price?: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } } | null }> | null } | null } } | null };

export type GetBrandMatchQueryVariables = Exact<{
  brandName: Scalars['String'];
}>;


export type GetBrandMatchQuery = { readonly __typename?: 'RootQuery', readonly brand?: { readonly __typename?: 'BrandServiceSchema', readonly trueBrands: ReadonlyArray<{ readonly __typename?: 'BrandSchema', readonly id: string, readonly displayName: string, readonly logoUrl?: string | null }> } | null };

export type AddProduct_GetInitialDataQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type AddProduct_GetInitialDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly standardWarehouseId: string, readonly primaryCurrency: PaymentCurrencyCode, readonly canManageShipping: boolean, readonly isCnForFulfillment: boolean, readonly isStoreMerchant: boolean, readonly shippingSettings?: ReadonlyArray<{ readonly __typename?: 'ShippingSettingsSchema', readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode, readonly gmvRank?: number | null, readonly regions?: ReadonlyArray<{ readonly __typename?: 'Region', readonly code: string, readonly name: string }> | null, readonly wishExpress: { readonly __typename?: 'WishExpressCountryDetails', readonly expectedTimeToDoor?: number | null } } }> | null, readonly countryOfDomicile?: { readonly __typename?: 'Country', readonly code: CountryCode } | null } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly gating: { readonly __typename?: 'UserGateSchema', readonly useCalculatedShipping: boolean, readonly showVariationGroupingMUG: boolean } } | null, readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly product: { readonly __typename?: 'ProductConstantsSchema', readonly prop65Chemicals: ReadonlyArray<string> }, readonly deciderKey?: { readonly __typename?: 'DeciderKeySchema', readonly showVariationGroupingDkey: boolean, readonly showRevampedAddEditProductUI: boolean, readonly showInventoryOnHand: boolean } | null } | null, readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCount: number } | null };

export type EditProduct_GetInitialDataQueryQueryVariables = Exact<{
  productId?: InputMaybe<Scalars['String']>;
}>;


export type EditProduct_GetInitialDataQueryQuery = { readonly __typename?: 'RootQuery', readonly su?: { readonly __typename?: 'UserSchema', readonly isBd?: boolean | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly isConsignmentMode?: boolean | null, readonly standardWarehouseId: string, readonly primaryCurrency: PaymentCurrencyCode, readonly canManageShipping: boolean, readonly isCnForFulfillment: boolean, readonly shippingSettings?: ReadonlyArray<{ readonly __typename?: 'ShippingSettingsSchema', readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode, readonly gmvRank?: number | null, readonly regions?: ReadonlyArray<{ readonly __typename?: 'Region', readonly code: string, readonly name: string }> | null, readonly wishExpress: { readonly __typename?: 'WishExpressCountryDetails', readonly expectedTimeToDoor?: number | null } } }> | null, readonly countryOfDomicile?: { readonly __typename?: 'Country', readonly code: CountryCode } | null } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly gating: { readonly __typename?: 'UserGateSchema', readonly useCalculatedShipping: boolean, readonly showVariationGroupingMUG: boolean } } | null, readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly product: { readonly __typename?: 'ProductConstantsSchema', readonly prop65Chemicals: ReadonlyArray<string> }, readonly deciderKey?: { readonly __typename?: 'DeciderKeySchema', readonly showVariationGroupingDkey: boolean, readonly showRevampedAddEditProductUI: boolean, readonly showInventoryOnHand: boolean, readonly showConsignmentOverwrite: boolean } | null } | null, readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCategoryDispute?: { readonly __typename?: 'ProductCategoryDisputeHub', readonly disputes?: ReadonlyArray<{ readonly __typename?: 'ProductCategoryDisputeSchema', readonly id: string }> | null } | null } | null, readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly product?: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sku?: string | null, readonly description: string, readonly enabled: boolean, readonly reviewStatus: CommerceProductReviewStatus, readonly condition?: CommerceProductCondition | null, readonly maxQuantity?: number | null, readonly eligibleForCategoryDispute?: ProductCategoryDisputeEligibility | null, readonly warningType?: ContestWarningType | null, readonly chemicalNames?: ReadonlyArray<string> | null, readonly isConsignmentEligible?: boolean | null, readonly consignmentOriginalPid?: string | null, readonly tags: ReadonlyArray<string>, readonly upc?: string | null, readonly isRemovedByWish: boolean, readonly subcategory?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string, readonly categoryChildren?: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }> | null, readonly categoriesAlongPath: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }> } | null, readonly createTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly lastUpdateTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly referenceWeight?: { readonly __typename?: 'Weight', readonly unit: WeightUnit, readonly value: number } | null, readonly referenceLength?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly referenceVolume?: { readonly __typename?: 'Volume', readonly unit: VolumeUnit, readonly value: number } | null, readonly referenceArea?: { readonly __typename?: 'Area', readonly unit: AreaUnit, readonly value: number } | null, readonly referenceUnit?: { readonly __typename?: 'Count', readonly unit: CountUnit, readonly value: number } | null, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly sku: string, readonly color?: string | null, readonly size?: string | null, readonly gtin?: string | null, readonly enabled?: boolean | null, readonly declaredName?: string | null, readonly declaredLocalName?: string | null, readonly pieces?: number | null, readonly hasPowder?: boolean | null, readonly hasLiquid?: boolean | null, readonly hasBattery?: boolean | null, readonly hasMetal?: boolean | null, readonly customsHsCode?: string | null, readonly declaredValue?: { readonly __typename?: 'CurrencyValue', readonly amount: number } | null, readonly originCountry?: { readonly __typename?: 'Country', readonly code: CountryCode } | null, readonly weight?: { readonly __typename?: 'Weight', readonly value: number } | null, readonly effectiveWeight?: { readonly __typename?: 'Weight', readonly value: number } | null, readonly height?: { readonly __typename?: 'Length', readonly value: number } | null, readonly width?: { readonly __typename?: 'Length', readonly value: number } | null, readonly length?: { readonly __typename?: 'Length', readonly value: number } | null, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string }, readonly consignmentSupplyCost?: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } | null, readonly image?: { readonly __typename?: 'ImageSchema', readonly id: number, readonly wishUrl: string, readonly isCleanImage: boolean } | null, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number, readonly shippingType: WarehouseShippingType, readonly warehouseId: string }>, readonly quantityWeight?: { readonly __typename?: 'Weight', readonly value: number } | null, readonly quantityLength?: { readonly __typename?: 'Length', readonly value: number } | null, readonly quantityVolume?: { readonly __typename?: 'Volume', readonly value: number } | null, readonly quantityArea?: { readonly __typename?: 'Area', readonly value: number } | null, readonly quantityUnit?: { readonly __typename?: 'Count', readonly value: number } | null, readonly attributes?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null, readonly options?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null }>, readonly mainImage: { readonly __typename?: 'ImageSchema', readonly id: number, readonly wishUrl: string, readonly isCleanImage: boolean }, readonly extraImages?: ReadonlyArray<{ readonly __typename?: 'ImageSchema', readonly id: number, readonly wishUrl: string, readonly isCleanImage: boolean }> | null, readonly requestedBrand?: { readonly __typename?: 'BrandSchema', readonly id: string, readonly displayName: string, readonly logoUrl?: string | null } | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly warehouseId: string, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly shippingType: WarehouseShippingType, readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly enabled: boolean, readonly timeToDoor?: number | null, readonly wishExpressTtdRequirement?: number | null, readonly regionShipping?: ReadonlyArray<{ readonly __typename?: 'RegionShippingSchema', readonly enabled?: boolean | null, readonly timeToDoor?: number | null, readonly region: { readonly __typename?: 'Region', readonly name: string, readonly code: string }, readonly price?: { readonly __typename?: 'CurrencyValue', readonly amount: number } | null }> | null, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode, readonly name: string, readonly gmvRank?: number | null, readonly regions?: ReadonlyArray<{ readonly __typename?: 'Region', readonly code: string, readonly name: string }> | null }, readonly price?: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } | null }> | null }> | null }, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly name: string }> | null, readonly attributes?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null } | null } | null };

export type GetListingQualityInsightsUrlQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type GetListingQualityInsightsUrlQueryQuery = { readonly __typename?: 'RootQuery', readonly listingQualityInsights?: { readonly __typename?: 'ListingQualityInsightsSchema', readonly report?: { readonly __typename?: 'ListingQualityInsightsReportSchema', readonly presignedS3Url?: string | null } | null } | null };

export type AllProducts_ProductsContainerInitialDataQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type AllProducts_ProductsContainerInitialDataQueryQuery = { readonly __typename?: 'RootQuery', readonly su?: { readonly __typename?: 'UserSchema', readonly isBd?: boolean | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly isConsignmentMode?: boolean | null, readonly state: CommerceMerchantState, readonly canAccessPaidPlacement: boolean, readonly warehouses?: ReadonlyArray<{ readonly __typename?: 'MerchantWarehouseSchema', readonly id: string, readonly unitId: string, readonly address?: { readonly __typename?: 'AddressSchema', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } } | null }> | null } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly gating: { readonly __typename?: 'UserGateSchema', readonly showVariationGroupingMUG: boolean } } | null, readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly deciderKey?: { readonly __typename?: 'DeciderKeySchema', readonly showVariationGroupingDkey: boolean, readonly showConsignmentOverwrite: boolean } | null } | null };

export type AllProducts_GetProductCountQueryVariables = Exact<{
  query?: InputMaybe<Scalars['String']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  searchType?: InputMaybe<ProductSearchType>;
  isEnabled?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<ProductListingState>;
  fpReviewStatus?: InputMaybe<ProductFpReviewStatus>;
  isWishExpress?: InputMaybe<Scalars['Boolean']>;
  hasBrand?: InputMaybe<Scalars['Boolean']>;
  isPromoted?: InputMaybe<Scalars['Boolean']>;
  isCleanImage?: InputMaybe<Scalars['Boolean']>;
  isReturnEnrolled?: InputMaybe<Scalars['Boolean']>;
}>;


export type AllProducts_GetProductCountQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCountV2: number } | null };

export type AllProducts_GetProductsQueryVariables = Exact<{
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ProductSort>;
  isEnabled?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<ProductListingState>;
  fpReviewStatus?: InputMaybe<ProductFpReviewStatus>;
  isWishExpress?: InputMaybe<Scalars['Boolean']>;
  hasBrand?: InputMaybe<Scalars['Boolean']>;
  isPromoted?: InputMaybe<Scalars['Boolean']>;
  isCleanImage?: InputMaybe<Scalars['Boolean']>;
  isReturnEnrolled?: InputMaybe<Scalars['Boolean']>;
  warehouseId?: InputMaybe<Scalars['String']>;
}>;


export type AllProducts_GetProductsQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sku?: string | null, readonly enabled: boolean, readonly isRemovedByWish: boolean, readonly isRemovedByMerchant: boolean, readonly isRemoved: boolean, readonly isPromoted: boolean, readonly sales: number, readonly wishes: number, readonly isLtl?: boolean | null, readonly isReturnsEnabled?: boolean | null, readonly isWishExpress: boolean, readonly categoryExperienceEligibility?: boolean | null, readonly subcategoryId?: number | null, readonly variationOptions?: ReadonlyArray<string> | null, readonly hasBrand?: boolean | null, readonly variationCount: number, readonly subcategory?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string, readonly categoriesAlongPath: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }> } | null, readonly listingState: { readonly __typename?: 'ListingStateSchema', readonly state: CommerceProductListingState, readonly reason?: CommerceProductListingStateReason | null }, readonly mainImage: { readonly __typename?: 'ImageSchema', readonly wishUrl: string, readonly isCleanImage: boolean }, readonly extraImages?: ReadonlyArray<{ readonly __typename?: 'ImageSchema', readonly isCleanImage: boolean }> | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly shippingType: WarehouseShippingType, readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } }> | null }> | null }, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly name: string }> | null, readonly lastUpdateTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly createTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly productId: string, readonly size?: string | null, readonly color?: string | null, readonly enabled?: boolean | null, readonly sku: string, readonly image?: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } | null, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly warehouseId: string, readonly count: number }>, readonly options?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null }> }> } | null };

export type AllProducts_GetProductVariationsQueryVariables = Exact<{
  query?: InputMaybe<Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type AllProducts_GetProductVariationsQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly productId: string, readonly size?: string | null, readonly color?: string | null, readonly enabled?: boolean | null, readonly sku: string, readonly image?: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } | null, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly warehouseId: string, readonly count: number }>, readonly options?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null }> }> } | null };

export type AllProducts_UpsertProductsMutationMutationVariables = Exact<{
  input: ReadonlyArray<ProductUpsertInput> | ProductUpsertInput;
}>;


export type AllProducts_UpsertProductsMutationMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly upsertProducts?: { readonly __typename?: 'UpsertProducts', readonly ok: boolean, readonly failures?: ReadonlyArray<{ readonly __typename?: 'UpsertProductsErrorItem', readonly message: string, readonly productId?: string | null }> | null } | null } };

export type AllProducts_RemoveProductMutationMutationVariables = Exact<{
  input: RemoveProductInput;
}>;


export type AllProducts_RemoveProductMutationMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly removeProduct?: { readonly __typename?: 'RemoveProduct', readonly ok: boolean, readonly message?: string | null } | null } };

export type AllProducts_DownloadProductsMutationMutationVariables = Exact<{
  input: DownloadAllProductsInput;
}>;


export type AllProducts_DownloadProductsMutationMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly downloadAllProducts?: { readonly __typename?: 'DownloadAllProducts', readonly ok: boolean, readonly errorMessage?: string | null } | null } };

export type AllProducts_DeleteWarehouseMutationVariables = Exact<{
  input: DeleteMerchantWarehouseInput;
}>;


export type AllProducts_DeleteWarehouseMutation = { readonly __typename?: 'RootMutation', readonly currentMerchant?: { readonly __typename?: 'MerchantMutation', readonly warehouseSettings?: { readonly __typename?: 'MerchantWarehouseMutations', readonly deleteWarehouse?: { readonly __typename?: 'DeleteMerchantWarehouseMutation', readonly ok: boolean, readonly message?: string | null } | null } | null } | null };

export type AllProducts_GetProductsForExportQueryVariables = Exact<{
  query?: InputMaybe<Scalars['String']>;
  searchType?: InputMaybe<ProductSearchType>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ProductSort>;
  isEnabled?: InputMaybe<Scalars['Boolean']>;
  state?: InputMaybe<ProductListingState>;
  fpReviewStatus?: InputMaybe<ProductFpReviewStatus>;
  isWishExpress?: InputMaybe<Scalars['Boolean']>;
  hasBrand?: InputMaybe<Scalars['Boolean']>;
  isPromoted?: InputMaybe<Scalars['Boolean']>;
  isCleanImage?: InputMaybe<Scalars['Boolean']>;
  isReturnEnrolled?: InputMaybe<Scalars['Boolean']>;
  warehouseId?: InputMaybe<Scalars['String']>;
}>;


export type AllProducts_GetProductsForExportQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode } | null, readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvProductColumnEnums: ReadonlyArray<ProductCsvColumnName>, readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly description: string, readonly wishes: number, readonly sales: number, readonly sku?: string | null, readonly upc?: string | null, readonly fpReviewStatus: CommerceProductFpReviewStatus, readonly isPromoted: boolean, readonly isLtl?: boolean | null, readonly condition?: CommerceProductCondition | null, readonly maxQuantity?: number | null, readonly chemicalNames?: ReadonlyArray<string> | null, readonly warningType?: ContestWarningType | null, readonly categoryExperienceEligibility?: boolean | null, readonly subcategoryId?: number | null, readonly variationOptions?: ReadonlyArray<string> | null, readonly lastUpdateTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly createTime: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly msrp?: { readonly __typename?: 'CurrencyValue', readonly display: string } | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly warehouseId: string, readonly timeToDoor?: number | null, readonly price: { readonly __typename?: 'CurrencyValue', readonly display: string } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly shippingType: WarehouseShippingType, readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly timeToDoor?: number | null, readonly enabled: boolean, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode }, readonly price?: { readonly __typename?: 'CurrencyValue', readonly display: string } | null }> | null }> | null }, readonly listingState: { readonly __typename?: 'ListingStateSchema', readonly state: CommerceProductListingState }, readonly mainImage: { readonly __typename?: 'ImageSchema', readonly wishUrl: string, readonly isCleanImage: boolean }, readonly extraImages?: ReadonlyArray<{ readonly __typename?: 'ImageSchema', readonly wishUrl: string, readonly isCleanImage: boolean }> | null, readonly trueTags?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly name: string, readonly id: string }> | null, readonly referenceArea?: { readonly __typename?: 'Area', readonly unit: AreaUnit, readonly value: number } | null, readonly referenceUnit?: { readonly __typename?: 'Count', readonly unit: CountUnit, readonly value: number } | null, readonly referenceWeight?: { readonly __typename?: 'Weight', readonly unit: WeightUnit, readonly value: number } | null, readonly referenceLength?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly referenceVolume?: { readonly __typename?: 'Volume', readonly unit: VolumeUnit, readonly value: number } | null, readonly requestedBrand?: { readonly __typename?: 'BrandSchema', readonly id: string, readonly name: string } | null, readonly subcategory?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string } | null, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly sku: string, readonly size?: string | null, readonly color?: string | null, readonly gtin?: string | null, readonly customsHsCode?: string | null, readonly declaredLocalName?: string | null, readonly declaredName?: string | null, readonly hasLiquid?: boolean | null, readonly hasMetal?: boolean | null, readonly hasPowder?: boolean | null, readonly hasBattery?: boolean | null, readonly pieces?: number | null, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly warehouseId: string, readonly count: number }>, readonly price: { readonly __typename?: 'CurrencyValue', readonly display: string }, readonly image?: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } | null, readonly length?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly width?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly height?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly weight?: { readonly __typename?: 'Weight', readonly unit: WeightUnit, readonly value: number } | null, readonly declaredValue?: { readonly __typename?: 'CurrencyValue', readonly display: string } | null, readonly originCountry?: { readonly __typename?: 'Country', readonly name: string } | null, readonly quantityArea?: { readonly __typename?: 'Area', readonly unit: AreaUnit, readonly value: number } | null, readonly quantityUnit?: { readonly __typename?: 'Count', readonly unit: CountUnit, readonly value: number } | null, readonly quantityWeight?: { readonly __typename?: 'Weight', readonly unit: WeightUnit, readonly value: number } | null, readonly quantityLength?: { readonly __typename?: 'Length', readonly unit: LengthUnit, readonly value: number } | null, readonly quantityVolume?: { readonly __typename?: 'Volume', readonly unit: VolumeUnit, readonly value: number } | null, readonly options?: ReadonlyArray<{ readonly __typename?: 'MerchantProvidedAttributeSchema', readonly name: string, readonly value: ReadonlyArray<string> }> | null }> }> } | null };

export type AdminUsersTable_GetInternalUsersQueryQueryVariables = Exact<{
  offset: Scalars['Int'];
  limit: Scalars['Int'];
  query?: InputMaybe<Scalars['String']>;
  sortField: UsersSortFieldType;
  sortOrder: SortOrderType;
  includeDisabledUsers: Scalars['Boolean'];
  roles: ReadonlyArray<RoleType> | RoleType;
}>;


export type AdminUsersTable_GetInternalUsersQueryQuery = { readonly __typename?: 'RootQuery', readonly identity?: { readonly __typename?: 'IdentityServiceSchema', readonly usersCount?: number | null, readonly users?: ReadonlyArray<{ readonly __typename?: 'UserSchema', readonly username: string, readonly name?: string | null, readonly email: string, readonly id: string, readonly bdMerchantCountry?: BdMerchantCountryCodeType | null, readonly serviceTypes?: ReadonlyArray<UserServiceType> | null, readonly isEnabled: boolean, readonly isSalesRep: boolean, readonly canBeAssignedToLogicalQueue: boolean, readonly roles?: ReadonlyArray<{ readonly __typename?: 'RoleSchema', readonly name: string }> | null, readonly manager?: { readonly __typename?: 'UserSchema', readonly name?: string | null } | null }> | null } | null };

export type AdminUsersTable_LoginAsUserMutationMutationVariables = Exact<{
  input: ByUserIdInput;
}>;


export type AdminUsersTable_LoginAsUserMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly loginAs?: { readonly __typename?: 'LoginAsMutations', readonly user?: { readonly __typename?: 'ByUserIdMutation', readonly ok: boolean, readonly error?: string | null } | null } | null } | null };

export type MerchantSupportConfigQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type MerchantSupportConfigQueryQuery = { readonly __typename?: 'RootQuery', readonly currentUser?: { readonly __typename?: 'UserSchema', readonly displayName?: string | null, readonly email: string, readonly supportConfig?: { readonly __typename?: 'MerchantSupportConfigSchema', readonly isEnBd: boolean, readonly isNonEnBd: boolean } | null, readonly accountManager?: { readonly __typename?: 'UserSchema', readonly email: string } | null } | null };

export type AppLocalSelector_ChangeLocaleMutationMutationVariables = Exact<{
  input: ChangeLocaleInput;
}>;


export type AppLocalSelector_ChangeLocaleMutationMutation = { readonly __typename?: 'RootMutation', readonly locale?: { readonly __typename?: 'LocaleMutations', readonly changeLocale: { readonly __typename?: 'ChangeLocale', readonly ok: boolean, readonly message?: string | null } } | null };

export type SearchStore_ObjectSearchQueryQueryVariables = Exact<{
  objectId: Scalars['ObjectIdType'];
  currentPath?: InputMaybe<Scalars['String']>;
}>;


export type SearchStore_ObjectSearchQueryQuery = { readonly __typename?: 'RootQuery', readonly chrome?: { readonly __typename?: 'ChromeSchema', readonly objectSearch?: { readonly __typename?: 'NavigationResultSchema', readonly type: NavigationResultType, readonly title: string, readonly description?: string | null, readonly imageUrl?: string | null, readonly url: string, readonly nuggets?: ReadonlyArray<string> | null } | null } | null };

export type Chrome_GetSideMenuCountsQueryVariables = Exact<{ [key: string]: never; }>;


export type Chrome_GetSideMenuCountsQuery = { readonly __typename?: 'RootQuery', readonly cs?: { readonly __typename?: 'CustomerSupportServiceSchema', readonly ticketCount: number } | null, readonly fulfillment?: { readonly __typename?: 'FulfillmentSchema', readonly actionRequiredOrderCount?: number | null } | null, readonly logistics?: { readonly __typename?: 'LogisticsSchema', readonly fbw: { readonly __typename?: 'FulfilledByWishSchema', readonly lowInventoryCount?: number | null, readonly actionRequiredShippingPlans?: number | null, readonly totalActionRequired?: number | null } } | null, readonly marketing?: { readonly __typename?: 'MarketingServiceSchema', readonly pendingCampaignCount: number, readonly lowBudgetCampaignCount: number, readonly actionRequiredCampaignCount: number } | null, readonly policy?: { readonly __typename?: 'PolicySchema', readonly merchantIpWarningCount?: number | null, readonly merchantActionRequiredCount?: number | null, readonly dispute?: { readonly __typename?: 'DisputeSchema', readonly trackingDispute?: { readonly __typename?: 'TrackingDisputeHub', readonly disputeCount?: number | null } | null, readonly refundDispute?: { readonly __typename?: 'RefundDisputeHub', readonly returnDisputeCount?: number | null, readonly refundDisputeCount?: number | null } | null } | null } | null };

export type Chrome_GetAppTopbarDataQueryVariables = Exact<{ [key: string]: never; }>;


export type Chrome_GetAppTopbarDataQuery = { readonly __typename?: 'RootQuery', readonly su?: { readonly __typename?: 'UserSchema', readonly hasPermission: boolean } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly id: string, readonly isStoreMerchant: boolean, readonly canAccessHome: boolean } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly firstName?: string | null } | null };

export type Chrome_NotificationButtonDataQueryVariables = Exact<{ [key: string]: never; }>;


export type Chrome_NotificationButtonDataQuery = { readonly __typename?: 'RootQuery', readonly notifications?: { readonly __typename?: 'NotificationsServiceSchema', readonly notificationCount: number } | null };

export type Chrome_GetAlertsQueryVariables = Exact<{ [key: string]: never; }>;


export type Chrome_GetAlertsQuery = { readonly __typename?: 'RootQuery', readonly currentUser?: { readonly __typename?: 'UserSchema', readonly alerts?: ReadonlyArray<{ readonly __typename?: 'AlertSchema', readonly link?: string | null, readonly description: string, readonly sentiment?: AlertSentiment | null, readonly date?: { readonly __typename?: 'Datetime', readonly formatted: string } | null }> | null } | null };

export type PasswordInput_CheckPasswordStrengthQueryVariables = Exact<{
  password: Scalars['String'];
}>;


export type PasswordInput_CheckPasswordStrengthQuery = { readonly __typename?: 'RootQuery', readonly authentication: { readonly __typename?: 'AuthenticationServiceSchema', readonly passwordEvaluation: { readonly __typename?: 'PasswordEvaluation', readonly valid: boolean, readonly errorMessage?: string | null } } };

export type ProductDetailModal_GetProductQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
}>;


export type ProductDetailModal_GetProductQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly product?: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly description: string, readonly isRemoved: boolean, readonly mainImage: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } } | null } | null };

export type ProductImage_GetProductImageQueryVariables = Exact<{
  productId: Scalars['String'];
}>;


export type ProductImage_GetProductImageQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly product?: { readonly __typename?: 'ProductSchema', readonly mainImage: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } } | null } | null };

export type ChromeStore_InitialQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type ChromeStore_InitialQueryQuery = { readonly __typename?: 'RootQuery', readonly chrome?: { readonly __typename?: 'ChromeSchema', readonly merchantGraph?: { readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly children?: ReadonlyArray<{ readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly children?: ReadonlyArray<{ readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly children?: ReadonlyArray<{ readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly children?: ReadonlyArray<{ readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null }> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null }> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null }> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null }> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null } | null } | null };

export type NodeElementsFragment = { readonly __typename?: 'ChromeNodeSchema', readonly url?: string | null, readonly path?: string | null, readonly label?: string | null, readonly overviewLabel?: string | null, readonly nodeid?: string | null, readonly keywords?: ReadonlyArray<string> | null, readonly description?: string | null, readonly searchPhrase?: string | null, readonly showInSideMenu?: boolean | null, readonly openInNewTab?: boolean | null, readonly totalHits?: number | null, readonly countSelectors?: ReadonlyArray<string> | null, readonly badge?: { readonly __typename?: 'ChromeBadgeSchema', readonly badgeType?: ChromeBadgeType | null, readonly expiryDate?: { readonly __typename?: 'Datetime', readonly unix: number, readonly datetime: string } | null } | null, readonly mostRecentHit?: { readonly __typename?: 'Datetime', readonly unix: number, readonly mmddyyyy: string } | null };

export type ExperimentStore_GetBucketForExperimentQueryVariables = Exact<{
  name: Scalars['String'];
}>;


export type ExperimentStore_GetBucketForExperimentQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly exp: { readonly __typename?: 'ExpSchema', readonly bucket: string } } | null };

export type ExperimentStore_GetDeciderKeyQueryVariables = Exact<{
  name: Scalars['String'];
}>;


export type ExperimentStore_GetDeciderKeyQuery = { readonly __typename?: 'RootQuery', readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly deciderKey?: { readonly __typename?: 'DeciderKeySchema', readonly decideForName: boolean } | null } | null };

export type LocalizationStore_InitialQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type LocalizationStore_InitialQueryQuery = { readonly __typename?: 'RootQuery', readonly currentLocale: Locale, readonly currentProperLocale: string, readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly availableLocales?: ReadonlyArray<Locale> | null } | null };

export type UserStore_InitialQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UserStore_InitialQueryQuery = { readonly __typename?: 'RootQuery', readonly currentCountry?: { readonly __typename?: 'Country', readonly code: CountryCode } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly id: string, readonly isStoreMerchant: boolean, readonly primaryCurrency: PaymentCurrencyCode, readonly state: CommerceMerchantState } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly id: string, readonly merchantId?: string | null, readonly firstName?: string | null, readonly lastName?: string | null, readonly displayName?: string | null, readonly email: string, readonly phoneNumber?: string | null, readonly companyName?: string | null, readonly entityType?: UserEntityType | null, readonly isStoreOrMerchantUser: boolean, readonly isApiUser: boolean, readonly isAdmin: boolean, readonly roles?: ReadonlyArray<{ readonly __typename?: 'RoleSchema', readonly name: string }> | null, readonly businessAddress?: { readonly __typename?: 'AddressSchema', readonly streetAddress1: string, readonly streetAddress2?: string | null, readonly city: string, readonly state?: string | null, readonly zipcode?: string | null, readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode } } | null } | null, readonly su?: { readonly __typename?: 'UserSchema', readonly id: string, readonly isAdmin: boolean } | null, readonly recentUsers?: ReadonlyArray<{ readonly __typename?: 'UserSchema', readonly id: string, readonly displayName?: string | null, readonly name?: string | null, readonly isStoreOrMerchantUser: boolean }> | null };

export type Fashion_GetLeafCategoriesQueryVariables = Exact<{
  l1CategoryId: Scalars['Int'];
}>;


export type Fashion_GetLeafCategoriesQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly leafCategories?: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string, readonly categoriesAlongPath: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }>, readonly categoryChildren?: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }> | null }> | null } | null };

export type Fashion_GetCategoryAttributesQueryVariables = Exact<{
  categoryId: Scalars['Int'];
}>;


export type Fashion_GetCategoryAttributesQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly attributes?: ReadonlyArray<{ readonly __typename?: 'TaxonomyAttributeSchema', readonly id: number, readonly name: string, readonly description: string, readonly dataType: AttributeDataType, readonly dataTypeFormat: AttributeDataTypeFormat, readonly level: AttributeLevel, readonly usage: AttributeUsage, readonly isVariationAttribute: boolean, readonly mode: AttributeMode, readonly maxMultiSelect: number, readonly enabledForVariations: boolean, readonly values?: ReadonlyArray<{ readonly __typename?: 'TaxonomyAttributeValueSchema', readonly id: number, readonly value: string }> | null }> | null } | null };

export type Fashion_TaxonomyCategoriesQueryQueryVariables = Exact<{
  categoryId: Scalars['Int'];
}>;


export type Fashion_TaxonomyCategoriesQueryQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly category?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string, readonly categoriesAlongPath: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }>, readonly categoryChildren?: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string, readonly categoriesAlongPath: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }>, readonly categoryChildren?: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }> | null }> | null } | null } | null };

export type CategoryCsvHeadersQueryQueryVariables = Exact<{
  categoryId: Scalars['Int'];
  treeVersion: Scalars['String'];
}>;


export type CategoryCsvHeadersQueryQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvProductTemplateWithTaxonomyColumnNames?: ReadonlyArray<string> | null } | null };

export type CategoryAttributesCsvQueryQueryVariables = Exact<{
  categoryId: Scalars['Int'];
}>;


export type CategoryAttributesCsvQueryQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly categoryAttributesCsv?: ReadonlyArray<ReadonlyArray<string>> | null } | null };

export type CategoryTreeJsonQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type CategoryTreeJsonQueryQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCategoryTaxonomyTreeJson: string } | null };

export type VariationGrouping_GetTaxonomyVariationOptionsQueryQueryVariables = Exact<{
  categoryId: Scalars['Int'];
  treeVersion?: InputMaybe<Scalars['String']>;
}>;


export type VariationGrouping_GetTaxonomyVariationOptionsQueryQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly variationOptions?: ReadonlyArray<{ readonly __typename?: 'TaxonomyAttributeSchema', readonly id: number, readonly name: string, readonly values?: ReadonlyArray<{ readonly __typename?: 'TaxonomyAttributeValueSchema', readonly id: number, readonly value: string }> | null }> | null } | null };

export type Logger_WriteLogMutationVariables = Exact<{
  input: LogToTreasureDataInput;
}>;


export type Logger_WriteLogMutation = { readonly __typename?: 'RootMutation', readonly analytics?: { readonly __typename?: 'AnalyticsServiceMutations', readonly log?: { readonly __typename?: 'LogToTreasureData', readonly ok?: boolean | null } | null } | null };

export type Toolkit_InitialUploadMutationVariables = Exact<{
  input: InitiateUploadInput;
}>;


export type Toolkit_InitialUploadMutation = { readonly __typename?: 'RootMutation', readonly uploads?: { readonly __typename?: 'UploadMutations', readonly initiateUpload?: { readonly __typename?: 'InitiateUploadMutation', readonly ok: boolean, readonly message?: string | null, readonly uploadUrl?: string | null, readonly uploadHeaders?: string | null, readonly downloadUrl?: string | null } | null } | null };

export type GetUserAnnouncementsV2_ListQueryVariables = Exact<{
  offset: Scalars['Int'];
  limit: Scalars['Int'];
  announcementType: AnnouncementType;
}>;


export type GetUserAnnouncementsV2_ListQuery = { readonly __typename?: 'RootQuery', readonly announcements: { readonly __typename?: 'AnnouncementsService', readonly forUsersV2?: { readonly __typename?: 'AnnouncementsForUsersV2Schema', readonly list?: ReadonlyArray<{ readonly __typename?: 'MerchantAnnouncementV2Schema', readonly id: string, readonly title?: string | null, readonly important?: boolean | null, readonly program?: { readonly __typename?: 'AnnouncementProgramSchemaV2', readonly text: string, readonly type: AnnouncementProgram } | null, readonly publishDate: { readonly __typename?: 'Datetime', readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly categories: ReadonlyArray<{ readonly __typename?: 'AnnouncementCategorySchemaV2', readonly text: string, readonly type: AnnouncementCategory }> }> | null } | null } };

export type GetUserAnnouncementsV2_ModalQueryVariables = Exact<{
  offset: Scalars['Int'];
  limit: Scalars['Int'];
  announcementType: AnnouncementType;
}>;


export type GetUserAnnouncementsV2_ModalQuery = { readonly __typename?: 'RootQuery', readonly announcements: { readonly __typename?: 'AnnouncementsService', readonly forUsersV2?: { readonly __typename?: 'AnnouncementsForUsersV2Schema', readonly list?: ReadonlyArray<{ readonly __typename?: 'MerchantAnnouncementV2Schema', readonly id: string, readonly title?: string | null, readonly message?: string | null }> | null } | null } };

export type FlatRateShippingSettings_GetOptInStatusQueryVariables = Exact<{ [key: string]: never; }>;


export type FlatRateShippingSettings_GetOptInStatusQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly isFlatRateShippingOptedIn?: boolean | null, readonly canAccessFlatRateShippingOptInOptOut?: boolean | null } | null };

export type Home_GetInitialDataQueryVariables = Exact<{ [key: string]: never; }>;


export type Home_GetInitialDataQuery = { readonly __typename?: 'RootQuery', readonly announcements: { readonly __typename?: 'AnnouncementsService', readonly forUsers?: ReadonlyArray<{ readonly __typename?: 'MerchantAnnouncementSchema', readonly id: string, readonly ctaText?: string | null, readonly ctaLink?: string | null, readonly title?: string | null, readonly important?: boolean | null, readonly program?: { readonly __typename?: 'AnnouncementProgramSchema', readonly text: string, readonly type: MerchantAnnouncementProgram } | null, readonly createdAt?: { readonly __typename?: 'Datetime', readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } | null, readonly categories?: ReadonlyArray<{ readonly __typename?: 'AnnouncementCategorySchema', readonly text: string, readonly type: MerchantAnnouncementCategory }> | null }> | null }, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly onboarding?: { readonly __typename?: 'OnboardingSchema', readonly numStepsLeft: number, readonly numSteps: number, readonly steps?: ReadonlyArray<{ readonly __typename?: 'OnboardingStep', readonly title: string, readonly description: string, readonly illustration?: string | null, readonly ctaText: string, readonly ctaLink?: string | null, readonly name: MerchantOnboardingStep }> | null } | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly isStoreMerchant: boolean, readonly isFactory: boolean, readonly primaryCurrency: PaymentCurrencyCode, readonly sellerVerification: { readonly __typename?: 'SellerVerificationSchema', readonly status?: SellerProfileVerificationStatus | null, readonly isKycVerification: boolean, readonly gmvCapReached: boolean, readonly impressionsPaused: boolean, readonly paymentsBlocked: boolean, readonly numSalesCap?: number | null, readonly actionRequired: boolean, readonly kycVerification: { readonly __typename?: 'KycVerificationSchema', readonly status?: KycProfileVerificationStatus | null }, readonly gmvCap?: { readonly __typename?: 'CurrencyValue', readonly display: string, readonly amount: number } | null, readonly gmvCapGracePeriodEndDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null }, readonly storeStats: { readonly __typename?: 'MerchantStats', readonly rating?: { readonly __typename?: 'RatingPerformanceStats', readonly averageProductRating?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly formatted: string } } | null }, readonly accountManager?: { readonly __typename?: 'UserSchema', readonly name?: string | null, readonly email: string, readonly qqGroupNumber?: string | null } | null } | null };

export type HomeBanner_GetInitialDataQueryVariables = Exact<{ [key: string]: never; }>;


export type HomeBanner_GetInitialDataQuery = { readonly __typename?: 'RootQuery', readonly currentUser?: { readonly __typename?: 'UserSchema', readonly utmSource?: string | null, readonly backToOnboardingReason?: UserBackToOnboardingReason | null, readonly onboarding?: { readonly __typename?: 'OnboardingSchema', readonly completed: boolean } | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly id: string, readonly state: CommerceMerchantState, readonly isCnMerchant: boolean, readonly allowMfp: boolean } | null, readonly payments?: { readonly __typename?: 'MerchantPaymentsService', readonly currentMerchant?: { readonly __typename?: 'MerchantPaymentDetail', readonly paymentCycle: MerchantPaymentCycle, readonly fullyEnrolledInPaymentCycle: boolean } | null } | null };

export type PlusPayments_GetAccountBalanceQueryVariables = Exact<{
  currency: PaymentCurrencyCode;
}>;


export type PlusPayments_GetAccountBalanceQuery = { readonly __typename?: 'RootQuery', readonly payments?: { readonly __typename?: 'MerchantPaymentsService', readonly paymentInfo?: { readonly __typename?: 'MerchantPaymentDetail', readonly showLedgerUi: boolean, readonly ledgerAccountBalances?: ReadonlyArray<{ readonly __typename?: 'LedgerAccountBalance', readonly amount: number, readonly currency: PaymentCurrencyCode, readonly balanceType: LedgerAccountBalanceType }> | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantPaymentDetail', readonly confirmedAccountBalance?: { readonly __typename?: 'CurrencyValue', readonly display: string } | null, readonly pendingAccountBalance?: { readonly __typename?: 'CurrencyValue', readonly display: string, readonly amount: number } | null } | null } | null };

export type MerchantHome_GetOrdersAndAnnouncementsQueryVariables = Exact<{ [key: string]: never; }>;


export type MerchantHome_GetOrdersAndAnnouncementsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly totalGmv: { readonly __typename?: 'CurrencyValue', readonly amount: number } } } | null, readonly announcements: { readonly __typename?: 'AnnouncementsService', readonly forUsers?: ReadonlyArray<{ readonly __typename?: 'MerchantAnnouncementSchema', readonly message?: string | null, readonly ctaText?: string | null, readonly ctaLink?: string | null, readonly title?: string | null }> | null } };

export type MerchantOnboarding_GetSellerVerificationStatusQueryVariables = Exact<{ [key: string]: never; }>;


export type MerchantOnboarding_GetSellerVerificationStatusQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly sellerVerification: { readonly __typename?: 'SellerVerificationSchema', readonly status?: SellerProfileVerificationStatus | null } } | null };

export type InfractionQueryQueryVariables = Exact<{
  infractionId?: InputMaybe<Scalars['ObjectIdType']>;
  merchantId?: InputMaybe<Scalars['ObjectIdType']>;
}>;


export type InfractionQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly merchantWarning?: { readonly __typename?: 'MerchantWarningSchema', readonly state: MerchantWarningState, readonly resolved: boolean, readonly wssImpact: WssImpactState, readonly merchantActions?: ReadonlyArray<MerchantWarningFixAction> | null, readonly outstandingMerchantActions?: ReadonlyArray<MerchantWarningFixAction> | null, readonly merchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode } | null, readonly reason: { readonly __typename?: 'MerchantWarningReasonSchema', readonly reason: MerchantWarningReason }, readonly productTrueTagInfo?: { readonly __typename?: 'ProductTrueTagInfoSchema', readonly counterfeitViolation: { readonly __typename?: 'CounterfeitViolationSchema', readonly reason?: CounterfeitReasonCode | null }, readonly inappropriateViolation: { readonly __typename?: 'InappropriateViolationSchema', readonly reason?: CounterfeitReasonCode | null }, readonly subreason?: { readonly __typename?: 'TaggingViolationSubcategory', readonly subcategory?: TaggingViolationSubReasonCode | null } | null } | null, readonly createdTime: { readonly __typename?: 'Datetime', readonly datetime: string }, readonly effectiveDisputeDeadlineDate: { readonly __typename?: 'Datetime', readonly datetime: string, readonly unix: number }, readonly products?: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly name: string, readonly id: string, readonly sku?: string | null, readonly description: string, readonly mainImage: { readonly __typename?: 'ImageSchema', readonly wishUrl: string } }> | null, readonly proofs: ReadonlyArray<{ readonly __typename?: 'MerchantWarningProofSchema', readonly type: MerchantWarningProofType, readonly id: string, readonly note?: string | null, readonly disputeStatus: MerchantWarningProofDisputeStatus, readonly warningId?: string | null }>, readonly impacts?: ReadonlyArray<{ readonly __typename?: 'MerchantWarningImpactSchema', readonly type: MerchantWarningImpactType, readonly startDate?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly endDate?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly countries?: ReadonlyArray<{ readonly __typename?: 'Country', readonly name: string }> | null }> | null, readonly order?: { readonly __typename?: 'OrderSchema', readonly id: string, readonly state: CommerceTransactionState, readonly merchantTotal: { readonly __typename?: 'CurrencyValue', readonly display: string }, readonly releasedTime?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly refundedTime?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly tracking?: { readonly __typename?: 'OrderTrackingInfoSchema', readonly confirmedFulfillmentDate?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly deliveredDate?: { readonly __typename?: 'Datetime', readonly datetime: string } | null, readonly checkpoints?: ReadonlyArray<{ readonly __typename?: 'TrackingCheckpointSchema', readonly date: { readonly __typename?: 'Datetime', readonly unix: number }, readonly resultingTracking: { readonly __typename?: 'TrackingCheckpointResultingStateSchema', readonly text?: string | null } }> | null } | null, readonly shippingDetails?: { readonly __typename?: 'ShippingDetailsSchema', readonly trackingId?: string | null, readonly provider?: { readonly __typename?: 'ShippingProviderSchema', readonly name: string } | null } | null, readonly refundItems?: ReadonlyArray<{ readonly __typename?: 'OrderRefundItemSchema', readonly reasonInfo: { readonly __typename?: 'OrderRefundReasonSchema', readonly text?: string | null } }> | null } | null, readonly trackingDispute?: { readonly __typename?: 'TrackingDisputeSchema', readonly id: string, readonly state: TrackingDisputeState, readonly messages: ReadonlyArray<{ readonly __typename?: 'TrackingDisputeMessageSchema', readonly senderType: TrackingDisputeMessageSenderType, readonly senderName: string, readonly message?: string | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number }, readonly files: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> }> } | null, readonly takedownRequest?: { readonly __typename?: 'TakedownRequestSchema', readonly name?: string | null, readonly contact?: string | null, readonly email?: string | null, readonly phoneNumber?: string | null } | null, readonly replies?: ReadonlyArray<{ readonly __typename?: 'MerchantWarningReplySchema', readonly senderType?: MerchantWarningReplySenderType | null, readonly senderName?: string | null, readonly message?: string | null, readonly translatedMessage?: string | null, readonly images?: ReadonlyArray<string> | null, readonly date?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly files?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null, readonly idFiles?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null }> | null } | null } | null, readonly brand?: { readonly __typename?: 'BrandServiceSchema', readonly brandAuthorizations?: ReadonlyArray<{ readonly __typename?: 'BrandAuthorizationSchema', readonly id: string, readonly brand: { readonly __typename?: 'BrandSchema', readonly name: string } }> | null } | null, readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly countriesWeShipTo: ReadonlyArray<{ readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode }> } | null };

export type ReplyFieldsFragment = { readonly __typename?: 'MerchantWarningReplySchema', readonly senderType?: MerchantWarningReplySenderType | null, readonly senderName?: string | null, readonly message?: string | null, readonly translatedMessage?: string | null, readonly images?: ReadonlyArray<string> | null, readonly date?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly files?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null, readonly idFiles?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null };

export type TrackingMessageFieldsFragment = { readonly __typename?: 'TrackingDisputeMessageSchema', readonly senderType: TrackingDisputeMessageSenderType, readonly senderName: string, readonly message?: string | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number }, readonly files: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> };

export type MessagesQueryQueryVariables = Exact<{
  infractionId?: InputMaybe<Scalars['ObjectIdType']>;
}>;


export type MessagesQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly merchantWarning?: { readonly __typename?: 'MerchantWarningSchema', readonly trackingDispute?: { readonly __typename?: 'TrackingDisputeSchema', readonly messages: ReadonlyArray<{ readonly __typename?: 'TrackingDisputeMessageSchema', readonly senderType: TrackingDisputeMessageSenderType, readonly senderName: string, readonly message?: string | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number }, readonly files: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> }> } | null, readonly replies?: ReadonlyArray<{ readonly __typename?: 'MerchantWarningReplySchema', readonly senderType?: MerchantWarningReplySenderType | null, readonly senderName?: string | null, readonly message?: string | null, readonly translatedMessage?: string | null, readonly images?: ReadonlyArray<string> | null, readonly date?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly files?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null, readonly idFiles?: ReadonlyArray<{ readonly __typename?: 'MerchantFileSchema', readonly displayFilename: string, readonly fileUrl: string, readonly isImageFile: boolean }> | null }> | null } | null } | null };

export type RequestPaymentReleaseMutationMutationVariables = Exact<{
  infractionId?: InputMaybe<Scalars['ObjectIdType']>;
  idFiles?: InputMaybe<ReadonlyArray<FileInput> | FileInput>;
  agreementFiles?: InputMaybe<ReadonlyArray<FileInput> | FileInput>;
}>;


export type RequestPaymentReleaseMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly merchantWarning?: { readonly __typename?: 'MerchantWarningMutations', readonly upsertMerchantWarning?: { readonly __typename?: 'UpsertMerchantWarning', readonly ok: boolean, readonly message?: string | null } | null } | null } | null };

export type SendMessageMutationMutationVariables = Exact<{
  infractionId?: InputMaybe<Scalars['ObjectIdType']>;
  messageInput: ReplyInfractionInput;
}>;


export type SendMessageMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly merchantWarning?: { readonly __typename?: 'MerchantWarningMutations', readonly upsertMerchantWarning?: { readonly __typename?: 'UpsertMerchantWarning', readonly ok: boolean, readonly message?: string | null } | null } | null } | null };

export type SubmitDisputeMutationMutationVariables = Exact<{
  action: MerchantWarningAction;
  infractionId?: InputMaybe<Scalars['ObjectIdType']>;
  disputeInput: DisputeInfractionInput;
}>;


export type SubmitDisputeMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly merchantWarning?: { readonly __typename?: 'MerchantWarningMutations', readonly upsertMerchantWarning?: { readonly __typename?: 'UpsertMerchantWarning', readonly ok: boolean, readonly message?: string | null } | null } | null } | null };

export type TagsQueryVariables = Exact<{ [key: string]: never; }>;


export type TagsQuery = { readonly __typename?: 'RootQuery', readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly topLevelTags?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly id: string, readonly name: string }> | null } | null };

export type InfractionDisputeState_OrderInfractionDisputeMutationMutationVariables = Exact<{
  input: UpsertOrderInfractionDisputeInput;
}>;


export type InfractionDisputeState_OrderInfractionDisputeMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly orderInfractionDispute?: { readonly __typename?: 'OrderInfractionDisputeMutations', readonly upsertOrderInfractionDispute?: { readonly __typename?: 'UpsertOrderInfractionDispute', readonly ok: boolean, readonly message?: string | null } | null } | null } | null };

export type OrderDetails_InfractionDetailsQueryVariables = Exact<{
  id: Scalars['String'];
}>;


export type OrderDetails_InfractionDetailsQuery = { readonly __typename?: 'RootQuery', readonly fulfillment?: { readonly __typename?: 'FulfillmentSchema', readonly order?: { readonly __typename?: 'OrderSchema', readonly id: string, readonly state: CommerceTransactionState, readonly isWishExpress: boolean, readonly isProcessing: boolean, readonly showAplusShippingAddressTooltip: boolean, readonly isAdvancedLogistics: boolean, readonly isBlueFusion: boolean, readonly merchantTotal: { readonly __typename?: 'CurrencyValue', readonly display: string }, readonly fbwDetails?: { readonly __typename?: 'OrderFBWDetailsSchema', readonly isFbw: boolean } | null, readonly releasedTime?: { readonly __typename?: 'Datetime', readonly formatted: string, readonly timeUntil: { readonly __typename?: 'Timedelta', readonly hours: number } } | null, readonly orderTime?: { readonly __typename?: 'Datetime', readonly formatted: string } | null, readonly shippedDate?: { readonly __typename?: 'Datetime', readonly formatted: string } | null, readonly refundedTime?: { readonly __typename?: 'Datetime', readonly formatted: string } | null, readonly refundItems?: ReadonlyArray<{ readonly __typename?: 'OrderRefundItemSchema', readonly reasonInfo: { readonly __typename?: 'OrderRefundReasonSchema', readonly reason: RefundReasonCategory, readonly text?: string | null } }> | null, readonly shippingDetails?: { readonly __typename?: 'ShippingDetailsSchema', readonly trackingId?: string | null, readonly name: string, readonly streetAddress1: string, readonly streetAddress2?: string | null, readonly city: string, readonly state?: string | null, readonly zipcode?: string | null, readonly phoneNumber?: string | null, readonly provider?: { readonly __typename?: 'ShippingProviderSchema', readonly name: string, readonly trackingUrl: string, readonly providerUrl: string } | null, readonly country?: { readonly __typename?: 'Country', readonly name: string } | null } | null, readonly warehouse?: { readonly __typename?: 'MerchantWarehouseSchema', readonly address?: { readonly __typename?: 'AddressSchema', readonly name: string, readonly streetAddress1: string, readonly streetAddress2?: string | null, readonly city: string, readonly state?: string | null, readonly zipcode?: string | null, readonly phoneNumber?: string | null, readonly country: { readonly __typename?: 'Country', readonly name: string } } | null } | null, readonly tracking?: { readonly __typename?: 'OrderTrackingInfoSchema', readonly confirmedFulfillmentDate?: { readonly __typename?: 'Datetime', readonly formatted: string } | null, readonly checkpoints?: ReadonlyArray<{ readonly __typename?: 'TrackingCheckpointSchema', readonly date: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly resultingTracking: { readonly __typename?: 'TrackingCheckpointResultingStateSchema', readonly state: CheckpointAfterActionState, readonly text?: string | null } }> | null, readonly deliveredDate?: { readonly __typename?: 'Datetime', readonly formatted: string } | null } | null, readonly product?: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly smallPictureUrl: string } | null, readonly pastTracking?: { readonly __typename?: 'PastOrderTrackingInfoSchema', readonly trackingId?: string | null, readonly tracking?: { readonly __typename?: 'OrderTrackingInfoSchema', readonly checkpoints?: ReadonlyArray<{ readonly __typename?: 'TrackingCheckpointSchema', readonly date: { readonly __typename?: 'Datetime', readonly formatted: string }, readonly resultingTracking: { readonly __typename?: 'TrackingCheckpointResultingStateSchema', readonly state: CheckpointAfterActionState, readonly text?: string | null } }> | null } | null, readonly provider?: { readonly __typename?: 'ShippingProviderSchema', readonly trackingUrl: string, readonly providerUrl: string, readonly name: string } | null, readonly lastUpdatedDate?: { readonly __typename?: 'Datetime', readonly formatted: string } | null } | null } | null } | null };

export type OrderShippingProviders_InfractionDisputeFormQueryVariables = Exact<{
  id: Scalars['String'];
  originCountryCode: CountryCode;
}>;


export type OrderShippingProviders_InfractionDisputeFormQuery = { readonly __typename?: 'RootQuery', readonly fulfillment?: { readonly __typename?: 'FulfillmentSchema', readonly order?: { readonly __typename?: 'OrderSchema', readonly availableShippingProviders: ReadonlyArray<{ readonly __typename?: 'ShippingProviderSchema', readonly name: string, readonly id: number }> } | null } | null };

export type Authentication_TwoFactorGenTokenMutationMutationVariables = Exact<{
  input: TwoFactorGenTokenInput;
}>;


export type Authentication_TwoFactorGenTokenMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly gen2faCode?: { readonly __typename?: 'TwoFactorGenTokenMutation', readonly obfuscatedPhoneNumber?: string | null, readonly allowTfaPhone?: boolean | null, readonly isMerchant?: boolean | null, readonly bdEmail?: string | null, readonly isInternalEmployee?: boolean | null, readonly ok: boolean, readonly error?: string | null } | null } | null };

export type Authentication_GenWechatQrMutationMutationVariables = Exact<{
  input: GenWechatQrInput;
}>;


export type Authentication_GenWechatQrMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly genWechatQr?: { readonly __typename?: 'GenWechatQrMutation', readonly ticket?: string | null } | null } | null };

export type Authentication_LoginMutationMutationVariables = Exact<{
  input: LoginMutationInput;
}>;


export type Authentication_LoginMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly login?: { readonly __typename?: 'LoginMutation', readonly loginOk: boolean, readonly error?: string | null, readonly errorState?: LoginErrorState | null, readonly obfuscatedPhoneNumber?: string | null, readonly sessionKey?: string | null, readonly preferQr?: boolean | null, readonly wechatBound?: boolean | null } | null } | null };

export type Authentication_Okta_Url_QueryQueryVariables = Exact<{ [key: string]: never; }>;


export type Authentication_Okta_Url_QueryQuery = { readonly __typename?: 'RootQuery', readonly platformConstants?: { readonly __typename?: 'PlatformConstants', readonly oktaOauthUri?: string | null } | null };

export type Authentication_WechatCheckScanMutationMutationVariables = Exact<{
  input: WechatCheckScanInput;
}>;


export type Authentication_WechatCheckScanMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly checkWechatScan?: { readonly __typename?: 'WechatCheckScanMutation', readonly expireIn?: number | null, readonly scanned?: boolean | null, readonly ok: boolean, readonly error?: string | null } | null } | null };

export type Questionnaire_MerchantLeadSubmitMutationVariables = Exact<{
  input: MerchantLeadSubmissionInput;
}>;


export type Questionnaire_MerchantLeadSubmitMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly merchantLeadSubmission?: { readonly __typename?: 'MerchantLeadSubmissionMutation', readonly ok: boolean, readonly message?: string | null } | null } | null };

export type MmsWelcome_SubmitMmsMerchantLeadMutationMutationVariables = Exact<{
  input: MmsLeadSubmissionInput;
}>;


export type MmsWelcome_SubmitMmsMerchantLeadMutationMutation = { readonly __typename?: 'RootMutation', readonly authentication?: { readonly __typename?: 'AuthenticationMutations', readonly mmsLeadSubmission?: { readonly __typename?: 'MMSLeadSubmissionMutation', readonly ok: boolean, readonly message?: string | null } | null } | null };

export type Refund_PerformanceAggregateDataQueryQueryVariables = Exact<{
  weeks: Scalars['Int'];
}>;


export type Refund_PerformanceAggregateDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly refund: { readonly __typename?: 'RefundPerformanceStats', readonly refunds?: number | null, readonly refundRate?: number | null, readonly refundRatePercentile?: number | null, readonly itemNotMatchingListingPercentage?: number | null, readonly itemNotFitPercentage?: number | null, readonly shippingTakeTooLongPercentage?: number | null, readonly itemDamagedPercentage?: number | null, readonly receivedWrongItemPercentage?: number | null, readonly itemReturnedPercentage?: number | null, readonly itemNotWorkPercentage?: number | null, readonly failToFulfillPercentage?: number | null, readonly deliverWrongAddressPercentage?: number | null, readonly incompleteOrderPercentage?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } } }> } } | null };

export type Refund_PerformanceBreakdownDataQueryQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ProductSort>;
  weeks_from_the_latest?: InputMaybe<Scalars['Int']>;
}>;


export type Refund_PerformanceBreakdownDataQueryQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCountV2: number, readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly id: string, readonly isReturnsEnabled?: boolean | null, readonly stats: { readonly __typename?: 'ProductStats', readonly weekly?: { readonly __typename?: 'ProductWeeklyStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly refund: { readonly __typename?: 'RefundPerformanceStats', readonly refunds?: number | null, readonly itemNotMatchingListingPercentage?: number | null, readonly itemNotFitPercentage?: number | null, readonly shippingTakeTooLongPercentage?: number | null, readonly itemDamagedPercentage?: number | null, readonly receivedWrongItemPercentage?: number | null, readonly itemReturnedPercentage?: number | null, readonly itemNotWorkPercentage?: number | null, readonly failToFulfillPercentage?: number | null, readonly deliverWrongAddressPercentage?: number | null, readonly incompleteOrderPercentage?: number | null } } | null } }> } | null };

export type Ceg_AverageFulfillmentTime_DataQueryQueryVariables = Exact<{
  days: Scalars['Int'];
  offsetDays: Scalars['Int'];
}>;


export type Ceg_AverageFulfillmentTime_DataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly averageFulfillmentTime?: { readonly __typename?: 'Timedelta', readonly days: number } | null }> } } | null };

export type Ceg_AverageRating_DataQueryQueryVariables = Exact<{
  days: Scalars['Int'];
  offsetDays: Scalars['Int'];
}>;


export type Ceg_AverageRating_DataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly averageRating30d?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } }> } } | null };

export type Ceg_AverageShippingDelay_DataQueryQueryVariables = Exact<{
  days: Scalars['Int'];
  offsetDays: Scalars['Int'];
}>;


export type Ceg_AverageShippingDelay_DataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly averageShippingDelay?: { readonly __typename?: 'Timedelta', readonly days: number } | null }> } } | null };

export type Ceg_AverageShippingTime_DataQueryQueryVariables = Exact<{
  days: Scalars['Int'];
  offsetDays: Scalars['Int'];
}>;


export type Ceg_AverageShippingTime_DataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly averageShippingTime?: { readonly __typename?: 'Timedelta', readonly days: number } | null }> } } | null };

export type Ceg_RefundRate_DataQueryQueryVariables = Exact<{
  days: Scalars['Int'];
  offsetDays: Scalars['Int'];
}>;


export type Ceg_RefundRate_DataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly refundRate30d?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } }> } } | null };

export type ShippingPerformanceShippingDataQueryQueryVariables = Exact<{
  weeks: Scalars['Int'];
}>;


export type ShippingPerformanceShippingDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly tracking: { readonly __typename?: 'TrackingPerformanceStats', readonly ordersFulfilled?: number | null, readonly ordersWithValidTracking?: number | null, readonly validTrackingRate?: number | null, readonly preFulfillmentCancellations?: number | null, readonly preFulfillmentCancellationRate?: number | null, readonly lateConfirmedFulfillment?: number | null, readonly lateConfirmedFulfillmentRate?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly averageClaimedFulfillmentTime?: { readonly __typename?: 'Timedelta', readonly hours: number } | null, readonly averageFulfillmentTime?: { readonly __typename?: 'Timedelta', readonly hours: number } | null }, readonly delivery: { readonly __typename?: 'DeliveryPerformanceStats', readonly ordersConfirmedDelivered?: number | null, readonly ordersConfirmedDeliveredRate?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly shippingTime?: { readonly __typename?: 'Timedelta', readonly days: number } | null, readonly timeToDoor?: { readonly __typename?: 'Timedelta', readonly days: number } | null } }> } } | null };

export type CustomerService_PerformanceAggregateDataQueryQueryVariables = Exact<{
  weeks: Scalars['Int'];
}>;


export type CustomerService_PerformanceAggregateDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode, readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly cs: { readonly __typename?: 'CSPerformanceStats', readonly orders?: number | null, readonly orders30d?: number | null, readonly refund30d?: number | null, readonly refundRatio30d?: number | null, readonly orders93d?: number | null, readonly refund93d?: number | null, readonly refundRatio93d?: number | null, readonly chargeback?: number | null, readonly chargebackRatio?: number | null, readonly chargebackAmountRatio?: number | null, readonly tickets?: number | null, readonly ticketRatio?: number | null, readonly lateResponseRate30d?: number | null, readonly customerSatisfaction?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string }, readonly chargebackAmount: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string }, readonly averageTicketResponseTime?: { readonly __typename?: 'Timedelta', readonly hours: number } | null } }> } } | null };

export type CustomerService_PerformanceBreakdownDataQueryQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ProductSort>;
  weeks_from_the_latest?: InputMaybe<Scalars['Int']>;
}>;


export type CustomerService_PerformanceBreakdownDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode } | null, readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCountV2: number, readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly id: string, readonly stats: { readonly __typename?: 'ProductStats', readonly weekly?: { readonly __typename?: 'ProductWeeklyStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly cs: { readonly __typename?: 'CSPerformanceStats', readonly orders?: number | null, readonly orders30d?: number | null, readonly refund30d?: number | null, readonly refundRatio30d?: number | null, readonly orders93d?: number | null, readonly refund93d?: number | null, readonly refundRatio93d?: number | null, readonly averageRating30d?: number | null, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } } } | null } }> } | null };

export type Product_PerformanceProductDataQueryQueryVariables = Exact<{
  weeks: Scalars['Int'];
}>;


export type Product_PerformanceProductDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode, readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly product: { readonly __typename?: 'ProductPerformanceStats', readonly activeProducts?: number | null, readonly activeSkus?: number | null, readonly skusPerProduct?: number | null, readonly priceToShippingRatio?: number | null, readonly averageAdditonalImagesPerProduct?: number | null, readonly productImpressions?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly averagePrice?: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } | null, readonly averageShippingPrice?: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } | null, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } } }> } } | null };

export type Rating_PerformanceAggregateDataQueryQueryVariables = Exact<{
  weeks?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_PerformanceAggregateDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly rating: { readonly __typename?: 'RatingPerformanceStats', readonly storeRatings?: number | null, readonly averageStoreRating?: number | null, readonly averageProductRating?: number | null, readonly lowStoreRatingPercentage?: number | null, readonly productRatings?: number | null, readonly lowProductRatingPercentage?: number | null, readonly average30dStoreRating?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } } }> } } | null };

export type Rating_PerformanceWeeklyStoreRatingDataQueryQueryVariables = Exact<{
  weeks?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_PerformanceWeeklyStoreRatingDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly rating: { readonly __typename?: 'RatingPerformanceStats', readonly averageStoreRating?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } } }> } } | null };

export type Rating_PerformanceWeeklyProductRatingDataQueryQueryVariables = Exact<{
  weeks?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_PerformanceWeeklyProductRatingDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly rating: { readonly __typename?: 'RatingPerformanceStats', readonly averageProductRating?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } } }> } } | null };

export type Rating_PerformanceStoreRatingBreakdownDataQueryQueryVariables = Exact<{
  weeks?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_PerformanceStoreRatingBreakdownDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly rating: { readonly __typename?: 'RatingPerformanceStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly storeRatingsBreakdown?: { readonly __typename?: 'RatingBreakdown', readonly oneStarRatings?: number | null, readonly twoStarRatings?: number | null, readonly threeStarRatings?: number | null, readonly fourStarRatings?: number | null, readonly fiveStarRatings?: number | null } | null } }> } } | null };

export type Rating_PerformanceProductRatingnBreakdownDataQueryQueryVariables = Exact<{
  weeks?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_PerformanceProductRatingnBreakdownDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly rating: { readonly __typename?: 'RatingPerformanceStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly productRatingsBreakdown?: { readonly __typename?: 'RatingBreakdown', readonly oneStarRatings?: number | null, readonly twoStarRatings?: number | null, readonly threeStarRatings?: number | null, readonly fourStarRatings?: number | null, readonly fiveStarRatings?: number | null } | null } }> } } | null };

export type Rating_ProductRatingListingDataQueryQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  listingTab?: InputMaybe<ProductRatingListingTab>;
}>;


export type Rating_ProductRatingListingDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly productRatingsCount: number, readonly productRatings: ReadonlyArray<{ readonly __typename?: 'ProductRating', readonly productId?: string | null, readonly average30dRating?: number | null, readonly ratings?: number | null, readonly sales?: number | null }> } } | null };

export type Rating_StoreRatingListingDataQueryQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  filterByStars?: InputMaybe<Scalars['Int']>;
}>;


export type Rating_StoreRatingListingDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly storeRatingsCount: number, readonly storeRatings: ReadonlyArray<{ readonly __typename?: 'StoreRating', readonly orderIds: ReadonlyArray<string>, readonly date?: string | null, readonly rating?: number | null, readonly comment?: string | null, readonly refundReason?: string | null }> } } | null };

export type Sales_PerformanceAggregateDataQueryQueryVariables = Exact<{
  weeks: Scalars['Int'];
}>;


export type Sales_PerformanceAggregateDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode, readonly storeStats: { readonly __typename?: 'MerchantStats', readonly weekly: ReadonlyArray<{ readonly __typename?: 'MerchantWeeklyStats', readonly sales: { readonly __typename?: 'SalesPerformanceStats', readonly productImpressions?: number | null, readonly addToCart?: number | null, readonly addToCartConversion?: number | null, readonly orders?: number | null, readonly checkoutConversion?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } } }> } } | null };

export type Sales_PerformanceBreakdownDataQueryQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<ProductSort>;
  weeks_from_the_latest?: InputMaybe<Scalars['Int']>;
}>;


export type Sales_PerformanceBreakdownDataQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly primaryCurrency: PaymentCurrencyCode } | null, readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCountV2: number, readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly id: string, readonly stats: { readonly __typename?: 'ProductStats', readonly weekly?: { readonly __typename?: 'ProductWeeklyStats', readonly startDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly endDate: { readonly __typename?: 'Datetime', readonly mmddyyyy: string }, readonly sales: { readonly __typename?: 'SalesPerformanceStats', readonly productImpressions?: number | null, readonly addToCart?: number | null, readonly addToCartConversion?: number | null, readonly orders?: number | null, readonly checkoutConversion?: number | null, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string } } } | null } }> } | null };

export type PerformanceOverviewPageInitialDataQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type PerformanceOverviewPageInitialDataQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly misleadingProducts?: number | null, readonly ipInfringementProducts?: number | null, readonly prohibitedProducts?: number | null } | null, readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly id: string, readonly state: CommerceMerchantState, readonly storeStats: { readonly __typename?: 'MerchantStats', readonly updateTime?: { readonly __typename?: 'Datetime', readonly formatted: string, readonly timezone: string } | null, readonly tracking?: { readonly __typename?: 'TrackingPerformanceStats', readonly validTrackingRate?: number | null, readonly lateConfirmedFulfillmentRate?: number | null, readonly averageFulfillmentTime?: { readonly __typename?: 'Timedelta', readonly hours: number } | null, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly endDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } } | null, readonly delivery?: { readonly __typename?: 'DeliveryPerformanceStats', readonly timeToDoor?: { readonly __typename?: 'Timedelta', readonly days: number } | null, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly endDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } } | null, readonly refunds?: { readonly __typename?: 'RefundPerformanceStats', readonly refundRate?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly endDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } } | null, readonly rating?: { readonly __typename?: 'RatingPerformanceStats', readonly averageProductRating?: number | null, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly endDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } } | null, readonly cs?: { readonly __typename?: 'CSPerformanceStats', readonly lateResponseRate30d?: number | null, readonly customerSatisfactionScore?: number | null, readonly averageTicketResponseTime?: { readonly __typename?: 'Timedelta', readonly hours: number } | null, readonly startDate: { readonly __typename?: 'Datetime', readonly iso8061: string, readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } }, readonly endDate: { readonly __typename?: 'Datetime', readonly iso8061: string, readonly formatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string } } } | null } } | null };

export type ProductsMetricsTableComponentQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type ProductsMetricsTableComponentQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly state: CommerceMerchantState } | null };

export type ProductsMetricsTableTableQueryQueryVariables = Exact<{
  offset: Scalars['Int'];
  limit: Scalars['Int'];
  days: Scalars['Int'];
  searchType?: InputMaybe<ProductSearchType>;
  query?: InputMaybe<Scalars['String']>;
}>;


export type ProductsMetricsTableTableQueryQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly productCountV2: number, readonly productsV2: ReadonlyArray<{ readonly __typename?: 'ProductSchema', readonly sku?: string | null, readonly name: string, readonly id: string, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly display: string } }>, readonly stats: { readonly __typename?: 'ProductStats', readonly totals: { readonly __typename?: 'ProductTotalStats', readonly orders: number, readonly impressions: number, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly display: string } } } }> } | null };

export type TierPreviewBannerQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type TierPreviewBannerQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly level?: WssMerchantLevelType | null, readonly stats?: { readonly __typename?: 'WishSellerStandardStats', readonly levelPreview?: WssMerchantLevelType | null } | null } } | null };

export type UnderperformingProductsHeaderQueryQueryVariables = Exact<{
  days?: InputMaybe<Scalars['Int']>;
}>;


export type UnderperformingProductsHeaderQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly stats?: { readonly __typename?: 'WishSellerStandardStats', readonly badProductRate?: number | null, readonly badProductCount?: number | null, readonly productWithOrdersCount?: number | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } } | null, readonly recentStats?: ReadonlyArray<{ readonly __typename?: 'WishSellerStandardStats', readonly badProductRate?: number | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } }> | null, readonly monthlyUpdateStats?: { readonly __typename?: 'WishSellerStandardStats', readonly badProductRate?: number | null } | null } } | null };

export type UnderperformingProductsPerformanceScaleQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnderperformingProductsPerformanceScaleQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly stats?: { readonly __typename?: 'WishSellerStandardStats', readonly badProductRate?: number | null } | null } } | null };

export type UnderperformingProductsTableQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnderperformingProductsTableQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly productQualityRefund: { readonly __typename?: 'WSSProductRefundPage', readonly totalCount: number }, readonly productRating: { readonly __typename?: 'WSSProductRatingPage', readonly totalCount: number } } | null } } | null };

export type ProductCatalogProductStats_ProductChartQueryVariables = Exact<{
  id: Scalars['String'];
  days: Scalars['Int'];
}>;


export type ProductCatalogProductStats_ProductChartQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly product?: { readonly __typename?: 'ProductSchema', readonly stats: { readonly __typename?: 'ProductStats', readonly daily: ReadonlyArray<{ readonly __typename?: 'ProductTotalStats', readonly orders: number, readonly impressions: number, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly fullDateFormatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string, readonly fullDateFormatted: string } } }> } } | null } | null };

export type StoreSalesStats_StoreSalesChartsQueryVariables = Exact<{
  days: Scalars['Int'];
}>;


export type StoreSalesStats_StoreSalesChartsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly storeStats: { readonly __typename?: 'MerchantStats', readonly totals: { readonly __typename?: 'MerchantTotalStats', readonly impressions: number, readonly pageViews: number, readonly addToCarts: number, readonly orders: number, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly display: string, readonly currencyCode: string } }, readonly daily: ReadonlyArray<{ readonly __typename?: 'MerchantTotalStats', readonly impressions: number, readonly orders: number, readonly startDate: { readonly __typename?: 'Datetime', readonly formatted: string, readonly fullDateFormatted: string, readonly inTimezone: { readonly __typename?: 'Datetime', readonly formatted: string, readonly fullDateFormatted: string } }, readonly gmv: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly display: string, readonly currencyCode: string } }> } } | null };

export type WssInsight_InfractionWindowQueryVariables = Exact<{ [key: string]: never; }>;


export type WssInsight_InfractionWindowQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly policyInfractionWindowStartDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly policyInfractionWindowEndDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly fulfillmentInfractionWindowStartDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly fulfillmentInfractionWindowEndDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null } } | null };

export type WssOrdersDeepDiveQueryVariables = Exact<{
  days?: InputMaybe<Scalars['Int']>;
}>;


export type WssOrdersDeepDiveQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly totalRatingsReceived?: number | null, readonly fulfillmentRateDenominator?: number | null, readonly refundRateDenominator?: number | null, readonly hasFulfillmentSpeedOrderCount?: number | null, readonly validTrackingRateDenominator?: number | null, readonly qualityRefundCount?: number | null, readonly orderUnfulfilled: { readonly __typename?: 'WSSOrderFulfillmentPage', readonly totalCount: number }, readonly orderInvalidTracking: { readonly __typename?: 'WSSOrderFulfillmentPage', readonly totalCount: number }, readonly orderLogisticsRefund: { readonly __typename?: 'WSSOrderRefundPage', readonly totalCount: number } } | null, readonly stats?: { readonly __typename?: 'WishSellerStandardStats', readonly userRating?: number | null, readonly orderFultillmentRate?: number | null, readonly productQualityRefundRate?: number | null, readonly validTrackingRate?: number | null, readonly productLogisticsRefundRate?: number | null, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly seconds: number, readonly minutes: number, readonly hours: number, readonly days: number } | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } } | null, readonly monthlyUpdateStats?: { readonly __typename?: 'WishSellerStandardStats', readonly userRating?: number | null, readonly orderFultillmentRate?: number | null, readonly productQualityRefundRate?: number | null, readonly validTrackingRate?: number | null, readonly productLogisticsRefundRate?: number | null, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly seconds: number, readonly minutes: number, readonly hours: number, readonly days: number } | null } | null, readonly recentStats?: ReadonlyArray<{ readonly __typename?: 'WishSellerStandardStats', readonly userRating?: number | null, readonly orderFultillmentRate?: number | null, readonly productQualityRefundRate?: number | null, readonly validTrackingRate?: number | null, readonly productLogisticsRefundRate?: number | null, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly seconds: number, readonly minutes: number, readonly hours: number, readonly days: number } | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } }> | null } } | null };

export type OrderMetricsDeepDive_UserRatingQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortProductRatingField>;
  sortOrder?: InputMaybe<SortByOrder>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  isBadByRating?: InputMaybe<Scalars['Boolean']>;
}>;


export type OrderMetricsDeepDive_UserRatingQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly productRating: { readonly __typename?: 'WSSProductRatingPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSProductRating', readonly productId: string, readonly productName?: string | null, readonly productImageUrl?: string | null, readonly receivedRatings: number, readonly averageRating: number }> } } | null } } | null };

export type OrderMetricsDeepDive_OrderFulfillmentRateQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  unfulfilledReasons?: InputMaybe<ReadonlyArray<WsssUnfulfilledReasons> | WsssUnfulfilledReasons>;
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
}>;


export type OrderMetricsDeepDive_OrderFulfillmentRateQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly orderUnfulfilled: { readonly __typename?: 'WSSOrderFulfillmentPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSOrderFulfillment', readonly productId?: string | null, readonly productName?: string | null, readonly productImageUrl?: string | null, readonly orderId?: string | null, readonly unfulfilledReason?: WsssUnfulfilledReasons | null, readonly destination?: string | null, readonly transactionDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null }> } } | null } } | null };

export type OrderMetricsDeepDive_WssDestinationOptionsQueryVariables = Exact<{
  pageType: WssDeepDivePageType;
}>;


export type OrderMetricsDeepDive_WssDestinationOptionsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly destinations?: ReadonlyArray<string> | null } | null } } | null };

export type OrderMetricsDeepDive_WssCarrierOptionsQueryVariables = Exact<{
  pageType: WssDeepDivePageType;
}>;


export type OrderMetricsDeepDive_WssCarrierOptionsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly carriers?: ReadonlyArray<string> | null } | null } } | null };

export type OrderMetricsDeepDive_WssUnfulfilledReasonOptionsQueryVariables = Exact<{ [key: string]: never; }>;


export type OrderMetricsDeepDive_WssUnfulfilledReasonOptionsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly unfulfilledReasons?: ReadonlyArray<WsssUnfulfilledReasons> | null } | null } } | null };

export type OrderMetricsDeepDive_WssLogisticsRefundReasonOptionsQueryVariables = Exact<{ [key: string]: never; }>;


export type OrderMetricsDeepDive_WssLogisticsRefundReasonOptionsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly logisticsRefundReasons?: ReadonlyArray<WssLogisticsRefundReason> | null } | null } } | null };

export type OrderMetricsDeepDive_WssQualityRefundReasonOptionsQueryVariables = Exact<{
  productId: Scalars['ObjectIdType'];
}>;


export type OrderMetricsDeepDive_WssQualityRefundReasonOptionsQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly qualityRefundReasons?: ReadonlyArray<WssQualityRefundReason> | null } | null } } | null };

export type OrderMetricsDeepDive_ProductQualityRefundQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortProductQualityRefundField>;
  sortOrder?: InputMaybe<SortByOrder>;
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  isBadByRefund?: InputMaybe<Scalars['Boolean']>;
}>;


export type OrderMetricsDeepDive_ProductQualityRefundQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly productQualityRefund: { readonly __typename?: 'WSSProductRefundPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSProductRefund', readonly productId: string, readonly productName?: string | null, readonly productImageUrl?: string | null, readonly receivedOrders: number, readonly qualityRefundIssued: number, readonly qualityRefundRate?: number | null }> } } | null } } | null };

export type OrderMetricsDeepDive_OrderQualityRefundQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
  productId?: InputMaybe<Scalars['ObjectIdType']>;
  refundReasons?: InputMaybe<ReadonlyArray<WssQualityRefundReason> | WssQualityRefundReason>;
}>;


export type OrderMetricsDeepDive_OrderQualityRefundQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly orderQualityRefund: { readonly __typename?: 'WSSOrderRefundPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSOrderRefund', readonly orderId?: string | null, readonly carrier?: string | null, readonly refundReason?: ReturnRequestRefundReason | null, readonly transactionDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null }> } } | null } } | null };

export type OrderMetricsDeepDive_QualityRefundBreakdownQueryVariables = Exact<{
  productId?: InputMaybe<Scalars['ObjectIdType']>;
}>;


export type OrderMetricsDeepDive_QualityRefundBreakdownQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly qualityRefundBreakdown: ReadonlyArray<{ readonly __typename?: 'WSSRefundBreakdown', readonly productId?: string | null, readonly reason?: ReturnRequestRefundReason | null, readonly count?: number | null }> } | null } } | null };

export type OrderMetricsDeepDive_ConfirmedFulfillmentSpeedQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortOrderFulfillmentSpeed>;
  sortOrder?: InputMaybe<SortByOrder>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
}>;


export type OrderMetricsDeepDive_ConfirmedFulfillmentSpeedQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly orderFulfillmentSpeed: { readonly __typename?: 'WSSOrderFulfillmentPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSOrderFulfillment', readonly orderId?: string | null, readonly trackingId?: string | null, readonly carrier?: string | null, readonly destination?: string | null, readonly transactionDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly days: number, readonly hours: number, readonly minutes: number, readonly seconds: number } | null }> } } | null } } | null };

export type OrderMetricsDeepDive_ValidTrackingRateQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  destinations?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
}>;


export type OrderMetricsDeepDive_ValidTrackingRateQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly destinationsInFulfillment?: ReadonlyArray<string> | null, readonly carriersInFulfillment?: ReadonlyArray<string> | null, readonly orderInvalidTracking: { readonly __typename?: 'WSSOrderFulfillmentPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSOrderFulfillment', readonly orderId?: string | null, readonly carrier?: string | null, readonly destination?: string | null, readonly transactionDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null }> } } | null } } | null };

export type OrderMetricsDeepDive_LogisticsRefundRateQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sortField?: InputMaybe<SortOrderTransactionDateField>;
  sortOrder?: InputMaybe<SortByOrder>;
  orderIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  carriers?: InputMaybe<ReadonlyArray<Scalars['String']> | Scalars['String']>;
  refundReasons?: InputMaybe<ReadonlyArray<WssLogisticsRefundReason> | WssLogisticsRefundReason>;
}>;


export type OrderMetricsDeepDive_LogisticsRefundRateQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly deepDive?: { readonly __typename?: 'WSSPerformanceDeepDiveHub', readonly orderLogisticsRefund: { readonly __typename?: 'WSSOrderRefundPage', readonly totalCount: number, readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSOrderRefund', readonly orderId?: string | null, readonly carrier?: string | null, readonly refundReason?: ReturnRequestRefundReason | null, readonly transactionDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null }> } } | null } } | null };

export type MerchantScore_ThingsToWatchQueryVariables = Exact<{ [key: string]: never; }>;


export type MerchantScore_ThingsToWatchQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly thingsToWatchBoard?: { readonly __typename?: 'WSSThingsToWatchBoard', readonly dataSlice: ReadonlyArray<{ readonly __typename?: 'WSSThingsToWatch', readonly metricType?: WssMetricType | null, readonly metricTrend?: WssMetricTrend | null, readonly metricValue?: number | null, readonly recordTime?: { readonly __typename?: 'Datetime', readonly unix: number } | null }> } | null } } | null };

export type MerchantScore_MerchantScoreSectionQueryVariables = Exact<{ [key: string]: never; }>;


export type MerchantScore_MerchantScoreSectionQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly id: string, readonly wishSellerStandard: { readonly __typename?: 'MerchantWishSellerStandardDetails', readonly prevLevel?: WssMerchantLevelType | null, readonly level?: WssMerchantLevelType | null, readonly rawLevel?: WssMerchantLevelType | null, readonly layer1Level?: WssMerchantLevelType | null, readonly isInactiveToBan?: boolean | null, readonly lastTierUpdateDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly nextMonthlyTierUpdateDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly endDateForLastMonthlyUpdateCalcWindow?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly policyInfractionWindowStartDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly policyInfractionWindowEndDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly fulfillmentInfractionWindowStartDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly fulfillmentInfractionWindowEndDate?: { readonly __typename?: 'Datetime', readonly unix: number } | null, readonly stats?: { readonly __typename?: 'WishSellerStandardStats', readonly userRating?: number | null, readonly orderFultillmentRate?: number | null, readonly validTrackingRate?: number | null, readonly productQualityRefundRate?: number | null, readonly productLogisticsRefundRate?: number | null, readonly badProductRate?: number | null, readonly maturedOrderCount: number, readonly ninetyDayOrderCount: number, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly days: number, readonly hours: number, readonly minutes: number, readonly seconds: number } | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } } | null, readonly lastUpdatedStats?: { readonly __typename?: 'Datetime', readonly mmddyyyy: string } | null, readonly monthlyUpdateStats?: { readonly __typename?: 'WishSellerStandardStats', readonly userRating?: number | null, readonly orderFultillmentRate?: number | null, readonly validTrackingRate?: number | null, readonly productQualityRefundRate?: number | null, readonly productLogisticsRefundRate?: number | null, readonly badProductRate?: number | null, readonly maturedOrderCount: number, readonly ninetyDayOrderCount: number, readonly fulfillmentSpeed?: { readonly __typename?: 'Timedelta', readonly days: number, readonly hours: number, readonly minutes: number, readonly seconds: number } | null, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } } | null, readonly complianceUpdateStats?: { readonly __typename?: 'WishSellerStandardStats', readonly misleadingTrackingCount: number, readonly prohibitedProductCount: number, readonly misleadingListingCount: number, readonly orderCancellationCount: number, readonly unfulfilledOrderCount: number, readonly lateConfirmedFulfillmentCount: number, readonly date: { readonly __typename?: 'Datetime', readonly unix: number } } | null } } | null };

export type AddEprMutationMutationVariables = Exact<{
  input: CreateUinInput;
}>;


export type AddEprMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly productCompliance?: { readonly __typename?: 'ProductComplianceMutations', readonly extendedProducerResponsibility?: { readonly __typename?: 'EPRMutations', readonly createUin?: { readonly __typename?: 'CreateUin', readonly ok: boolean, readonly message?: string | null } | null } | null } | null } | null };

export type EditEprMutationMutationVariables = Exact<{
  input: UpdateUinInput;
}>;


export type EditEprMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly productCompliance?: { readonly __typename?: 'ProductComplianceMutations', readonly extendedProducerResponsibility?: { readonly __typename?: 'EPRMutations', readonly updateUin?: { readonly __typename?: 'UpdateUin', readonly ok: boolean, readonly message?: string | null } | null } | null } | null } | null };

export type DeleteEprMutationMutationVariables = Exact<{
  input: DeleteUinInput;
}>;


export type DeleteEprMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly productCompliance?: { readonly __typename?: 'ProductComplianceMutations', readonly extendedProducerResponsibility?: { readonly __typename?: 'EPRMutations', readonly deleteUin?: { readonly __typename?: 'DeleteUin', readonly ok: boolean, readonly message?: string | null } | null } | null } | null } | null };

export type EprNonCompliantSummaryQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type EprNonCompliantSummaryQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly eprNonCompliantSummary: { readonly __typename?: 'EPRNonCompliantSummarySchema', readonly summaryRecords: ReadonlyArray<{ readonly __typename?: 'EPRNonCompliantSummaryRecordSchema', readonly eprCategoryName: string, readonly nonCompliantProductCount: number, readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode } }> } } } | null } | null };

export type EprNonCompliantCountriesAvailableQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type EprNonCompliantCountriesAvailableQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly eprNonCompliantSummary: { readonly __typename?: 'EPRNonCompliantSummarySchema', readonly summaryRecords: ReadonlyArray<{ readonly __typename?: 'EPRNonCompliantSummaryRecordSchema', readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode } }> } } } | null } | null };

export type EprNonCompliantProductsQueryQueryVariables = Exact<{
  countryCode: CountryCode;
  eprCategories?: InputMaybe<ReadonlyArray<Scalars['Int']> | Scalars['Int']>;
  productId?: InputMaybe<Scalars['String']>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;


export type EprNonCompliantProductsQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly eprNonCompliantSummary: { readonly __typename?: 'EPRNonCompliantSummarySchema', readonly productRecordTotal: number, readonly productRecords: ReadonlyArray<{ readonly __typename?: 'EPRProductRecordSchema', readonly productId: string, readonly taxonomyCategoryNames: ReadonlyArray<string>, readonly eprCategoryNames: ReadonlyArray<string>, readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode } }> } } } | null } | null };

export type ExtendedProducerResponsibilityPageQueryQueryVariables = Exact<{
  countryCode: CountryCode;
}>;


export type ExtendedProducerResponsibilityPageQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly country: { readonly __typename?: 'CountryEPRSchema', readonly hasAcceptedTos: boolean, readonly categories: ReadonlyArray<{ readonly __typename?: 'CategoryEprSchema', readonly category: number, readonly categoryName: string, readonly uin?: string | null, readonly responsibleEntityName?: string | null, readonly status?: EprStatus | null, readonly inScopePidCount: number, readonly eprId?: string | null }> } } } | null } | null };

export type ProductComplianceCenterQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type ProductComplianceCenterQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly euComplianceInScope: boolean, readonly productsWithEuResponsiblePerson?: number | null, readonly productsWithoutEuResponsiblePerson?: number | null, readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly countries: ReadonlyArray<{ readonly __typename?: 'CountryEPRSchema', readonly categoriesWithEpr: number, readonly categoriesWithoutEpr: number, readonly hasAcceptedTos: boolean, readonly country: { readonly __typename?: 'Country', readonly name: string, readonly code: CountryCode } }>, readonly eprNonCompliantSummary: { readonly __typename?: 'EPRNonCompliantSummarySchema', readonly summaryRecords: ReadonlyArray<{ readonly __typename?: 'EPRNonCompliantSummaryRecordSchema', readonly nonCompliantProductCount: number }> } } } | null } | null };

export type TosModalQueryQueryVariables = Exact<{
  countryCode: CountryCode;
}>;


export type TosModalQueryQuery = { readonly __typename?: 'RootQuery', readonly policy?: { readonly __typename?: 'PolicySchema', readonly productCompliance?: { readonly __typename?: 'ProductComplianceSchema', readonly extendedProducerResponsibility: { readonly __typename?: 'ExtendedProducerResponsibilitySchema', readonly country: { readonly __typename?: 'CountryEPRSchema', readonly tos: string } } } | null } | null };

export type AcceptTosMutationMutationVariables = Exact<{
  input: AcceptTosInput;
}>;


export type AcceptTosMutationMutation = { readonly __typename?: 'RootMutation', readonly policy?: { readonly __typename?: 'PolicyMutations', readonly productCompliance?: { readonly __typename?: 'ProductComplianceMutations', readonly extendedProducerResponsibility?: { readonly __typename?: 'EPRMutations', readonly acceptTos?: { readonly __typename?: 'AcceptTos', readonly ok: boolean, readonly message?: string | null } | null } | null } | null } | null };

export type Csv_GetTaxonomyTreeCsvRowsQueryVariables = Exact<{ [key: string]: never; }>;


export type Csv_GetTaxonomyTreeCsvRowsQuery = { readonly __typename?: 'RootQuery', readonly taxonomy?: { readonly __typename?: 'TaxonomySchema', readonly taxonomyTreeCsv?: ReadonlyArray<ReadonlyArray<string>> | null } | null };

export type Csv_UpsertProductCsvMutationMutationVariables = Exact<{
  input: UpsertProductsFromCsvFileInput;
}>;


export type Csv_UpsertProductCsvMutationMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly upsertProductCsvFile?: { readonly __typename?: 'UpsertProductsFromCSVFile', readonly ok: boolean, readonly message?: string | null, readonly jobId?: string | null } | null } };

export type DownloadProductCatalogMutationVariables = Exact<{
  input: DownloadAllProductsInput;
}>;


export type DownloadProductCatalogMutation = { readonly __typename?: 'RootMutation', readonly productCatalog: { readonly __typename?: 'ProductCatalogMutations', readonly downloadAllProducts?: { readonly __typename?: 'DownloadAllProducts', readonly errorMessage?: string | null, readonly ok: boolean } | null } };

export type DownloadAllHeadersQueryVariables = Exact<{
  subcategoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']> | Scalars['Int']>;
}>;


export type DownloadAllHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvAllHeaderNames: ReadonlyArray<string> } | null };

export type DownloadEditVariationHeadersQueryVariables = Exact<{
  subcategoryIds?: InputMaybe<ReadonlyArray<Scalars['Int']> | Scalars['Int']>;
}>;


export type DownloadEditVariationHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvEditVariationsHeaderNames: ReadonlyArray<string> } | null };

export type DownloadShippingHeadersQueryVariables = Exact<{ [key: string]: never; }>;


export type DownloadShippingHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvShippingHeaderNames: ReadonlyArray<string> } | null };

export type DownloadPriceInventoryHeadersQueryVariables = Exact<{ [key: string]: never; }>;


export type DownloadPriceInventoryHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvPriceInventoryHeaderNames: ReadonlyArray<string> } | null };

export type DownloadTitleImageDescHeadersQueryVariables = Exact<{ [key: string]: never; }>;


export type DownloadTitleImageDescHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvTitleImagesDescriptionHeaderNames: ReadonlyArray<string> } | null };

export type DownloadEnableDisableHeadersQueryVariables = Exact<{ [key: string]: never; }>;


export type DownloadEnableDisableHeadersQuery = { readonly __typename?: 'RootQuery', readonly productCatalog?: { readonly __typename?: 'ProductCatalogSchema', readonly csvEnableDisableHeaderNames: ReadonlyArray<string> } | null };

export type CreateProductDownloadsJobForMerchantPromotionsMutationMutationVariables = Exact<{
  input: CreateProductsDownloadJobInput;
}>;


export type CreateProductDownloadsJobForMerchantPromotionsMutationMutation = { readonly __typename?: 'RootMutation', readonly mfp?: { readonly __typename?: 'MFPServiceMutations', readonly createProductsDownloadJob: { readonly __typename?: 'CreateProductsDownloadJobMutation', readonly ok: boolean, readonly message?: string | null, readonly jobId?: string | null } } | null };

export type EligibleCountriesQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type EligibleCountriesQueryQuery = { readonly __typename?: 'RootQuery', readonly currentMerchant?: { readonly __typename?: 'MerchantSchema', readonly shippingSettings?: ReadonlyArray<{ readonly __typename?: 'ShippingSettingsSchema', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode, readonly name: string } }> | null } | null };

export type MfpTools_GetEligibleProductsGenericQueryVariables = Exact<{
  searchType?: InputMaybe<MfpProductSearchType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  promotionType: MfpCampaignPromotionType;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  merchantCurrency: PaymentCurrencyCode;
}>;


export type MfpTools_GetEligibleProductsGenericQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly eligibleProducts?: any | null } | null };

export type MfpTools_GetEligibleProductsQueryVariables = Exact<{
  searchType?: InputMaybe<MfpProductSearchType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  promotionType: MfpCampaignPromotionType;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
  merchantCurrency: PaymentCurrencyCode;
}>;


export type MfpTools_GetEligibleProductsQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly eligibleProducts?: ReadonlyArray<{ readonly __typename?: 'EligibleProductInfo', readonly product: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sales: number, readonly sku?: string | null, readonly flatRateShippingCountryCandidates?: ReadonlyArray<{ readonly __typename?: 'FlatRateShippingCountryCandidate', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode }, readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly price?: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } | null, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } }> | null }> | null }, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly id: string, readonly name: string }> | null, readonly l1Category?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string } | null }, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }>, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> }> | null } | null };

export type MfpTools_GetEligibleProductsCountQueryVariables = Exact<{
  searchType?: InputMaybe<MfpProductSearchType>;
  searchQuery?: InputMaybe<Scalars['String']>;
  promotionType: MfpCampaignPromotionType;
  eventId?: InputMaybe<Scalars['ObjectIdType']>;
}>;


export type MfpTools_GetEligibleProductsCountQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly eligibleProductsCount?: number | null } | null };

export type GetWhitelistProducts_ProductWhitelistingSectionQueryVariables = Exact<{
  productIds?: InputMaybe<ReadonlyArray<Scalars['ObjectIdType']> | Scalars['ObjectIdType']>;
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  merchantCurrency: PaymentCurrencyCode;
}>;


export type GetWhitelistProducts_ProductWhitelistingSectionQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly activeWhitelistProductsCount?: number | null, readonly activeWhitelistProducts?: ReadonlyArray<{ readonly __typename?: 'WhitelistProductInfo', readonly product: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sales: number, readonly sku?: string | null, readonly flatRateShippingCountryCandidates?: ReadonlyArray<{ readonly __typename?: 'FlatRateShippingCountryCandidate', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode }, readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly price?: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } | null, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } }> | null }> | null }, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly id: string, readonly name: string }> | null, readonly l1Category?: { readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string } | null }, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }>, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }>, readonly startTime: { readonly __typename?: 'Datetime', readonly formatted: string, readonly unix: number }, readonly endTime: { readonly __typename?: 'Datetime', readonly formatted: string, readonly unix: number } }> | null } | null };

export type MfpTools_GetPrefillCampaignQueryQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']>;
  merchantCurrency: PaymentCurrencyCode;
}>;


export type MfpTools_GetPrefillCampaignQueryQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly campaigns?: ReadonlyArray<{ readonly __typename?: 'MFPCampaignSchema', readonly name: string, readonly id: string, readonly state: MfpCampaignState, readonly promotionType: MfpCampaignPromotionType, readonly startTime: { readonly __typename?: 'Datetime', readonly unix: number }, readonly endTime: { readonly __typename?: 'Datetime', readonly unix: number }, readonly countries?: ReadonlyArray<{ readonly __typename?: 'Country', readonly code: CountryCode }> | null, readonly unqualifiedProductVariations?: ReadonlyArray<{ readonly __typename?: 'MFPUnqualifiedVariationData', readonly variation: { readonly __typename?: 'VariationSchema', readonly id: string, readonly productId: string } }> | null, readonly flashSaleDetails?: ReadonlyArray<{ readonly __typename?: 'MFPVariationDiscountData', readonly maxQuantity?: number | null, readonly discountPercentage: number, readonly product: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sales: number, readonly sku?: string | null, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly id: string, readonly name: string }> | null, readonly flatRateShippingCountryCandidates?: ReadonlyArray<{ readonly __typename?: 'FlatRateShippingCountryCandidate', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode }, readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly price?: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } | null, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } }> | null }> | null }, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly productId: string, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }> }> }, readonly variation: { readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly productId: string, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }> } }> | null, readonly discountDetails?: ReadonlyArray<{ readonly __typename?: 'MFPVariationDiscountData', readonly maxQuantity?: number | null, readonly discountPercentage: number, readonly product: { readonly __typename?: 'ProductSchema', readonly id: string, readonly name: string, readonly sales: number, readonly sku?: string | null, readonly flatRateShippingCountryCandidates?: ReadonlyArray<{ readonly __typename?: 'FlatRateShippingCountryCandidate', readonly country: { readonly __typename?: 'Country', readonly code: CountryCode }, readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly shipping: { readonly __typename?: 'ShippingSchema', readonly defaultShipping?: ReadonlyArray<{ readonly __typename?: 'DefaultShippingSchema', readonly price: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } }> | null, readonly warehouseCountryShipping?: ReadonlyArray<{ readonly __typename?: 'WarehouseCountryShippingSchema', readonly countryShipping?: ReadonlyArray<{ readonly __typename?: 'CountryShippingSchema', readonly price?: { readonly __typename?: 'CurrencyValue', readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } } | null, readonly country: { readonly __typename?: 'Country', readonly code: CountryCode } }> | null }> | null }, readonly categories?: ReadonlyArray<{ readonly __typename?: 'TrueTagSchema', readonly id: string, readonly name: string }> | null, readonly variations: ReadonlyArray<{ readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly productId: string, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }> }> }, readonly variation: { readonly __typename?: 'VariationSchema', readonly id: string, readonly color?: string | null, readonly size?: string | null, readonly productId: string, readonly price: { readonly __typename?: 'CurrencyValue', readonly amount: number, readonly currencyCode: string, readonly display: string, readonly convertedTo: { readonly __typename?: 'CurrencyValue', readonly amount: number } }, readonly inventory: ReadonlyArray<{ readonly __typename?: 'InventorySchema', readonly count: number }> } }> | null }> | null } | null };

export type MfpTools_GetCampaignEventsQueryVariables = Exact<{
  offset?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  sort?: InputMaybe<CampaignEventSort>;
  startAtMin?: InputMaybe<DatetimeInput>;
  submitAtMin?: InputMaybe<DatetimeInput>;
  promotionTypes?: InputMaybe<ReadonlyArray<MfpCampaignPromotionType> | MfpCampaignPromotionType>;
}>;


export type MfpTools_GetCampaignEventsQuery = { readonly __typename?: 'RootQuery', readonly mfp?: { readonly __typename?: 'MFPServiceSchema', readonly campaignEventsCount?: number | null, readonly campaignEvents?: ReadonlyArray<{ readonly __typename?: 'CampaignEventInfo', readonly id: string, readonly name: string, readonly description?: string | null, readonly minDiscountPercentage: number, readonly promotionType: MfpCampaignPromotionType, readonly startTime: { readonly __typename?: 'Datetime', readonly formatted: string, readonly unix: number }, readonly endTime: { readonly __typename?: 'Datetime', readonly formatted: string, readonly unix: number }, readonly submissionDeadline: { readonly __typename?: 'Datetime', readonly formatted: string, readonly unix: number }, readonly productCategoryRestrictions: ReadonlyArray<{ readonly __typename?: 'TaxonomyCategorySchema', readonly id: string, readonly name: string }>, readonly countries: ReadonlyArray<{ readonly __typename?: 'Country', readonly code: CountryCode }> }> | null } | null };

export type SellerIdentity_UploadBankDocumentsMutationVariables = Exact<{
  input: UploadBankAccountDocumentInput;
}>;


export type SellerIdentity_UploadBankDocumentsMutation = { readonly __typename?: 'RootMutation', readonly currentMerchant?: { readonly __typename?: 'MerchantMutation', readonly bankAccountVerification: { readonly __typename?: 'BankAccountVerificationMerchantMutations', readonly uploadDocument: { readonly __typename?: 'UploadBankAccountDocument', readonly ok: boolean, readonly message?: string | null } } } | null };

export type AdminCheckQueryVariables = Exact<{ [key: string]: never; }>;


export type AdminCheckQuery = { readonly __typename?: 'RootQuery', readonly su?: { readonly __typename?: 'UserSchema', readonly id: string } | null, readonly currentUser?: { readonly __typename?: 'UserSchema', readonly isAdmin: boolean } | null };

export const NodeElementsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NodeElements"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ChromeNodeSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"path"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"overviewLabel"}},{"kind":"Field","name":{"kind":"Name","value":"badge"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badgeType"}},{"kind":"Field","name":{"kind":"Name","value":"expiryDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}},{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"nodeid"}},{"kind":"Field","name":{"kind":"Name","value":"keywords"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"searchPhrase"}},{"kind":"Field","name":{"kind":"Name","value":"showInSideMenu"}},{"kind":"Field","name":{"kind":"Name","value":"openInNewTab"}},{"kind":"Field","name":{"kind":"Name","value":"totalHits"}},{"kind":"Field","name":{"kind":"Name","value":"mostRecentHit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}},{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"countSelectors"}}]}}]} as unknown as DocumentNode<NodeElementsFragment, unknown>;
export const ReplyFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReplyFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MerchantWarningReplySchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"translatedMessage"}},{"kind":"Field","name":{"kind":"Name","value":"images"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}},{"kind":"Field","name":{"kind":"Name","value":"idFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}}]} as unknown as DocumentNode<ReplyFieldsFragment, unknown>;
export const TrackingMessageFieldsFragmentDoc = {"kind":"Document","definitions":[{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TrackingMessageFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrackingDisputeMessageSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}}]} as unknown as DocumentNode<TrackingMessageFieldsFragment, unknown>;
export const ProductEditState_EditOrCreateProductDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ProductEditState_EditOrCreateProduct"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductUpsertInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}}]}}]}}]}}]} as unknown as DocumentNode<ProductEditState_EditOrCreateProductMutation, ProductEditState_EditOrCreateProductMutationVariables>;
export const ProductEditState_RemoveProductDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"ProductEditState_RemoveProduct"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RemoveProductInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"removeProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<ProductEditState_RemoveProductMutation, ProductEditState_RemoveProductMutationVariables>;
export const Existing_Compliance_DocumentsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EXISTING_COMPLIANCE_DOCUMENTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productComplianceDocuments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fileName"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"documentLabel"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Existing_Compliance_DocumentsQuery, Existing_Compliance_DocumentsQueryVariables>;
export const Update_Compliance_DocumentsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UPDATE_COMPLIANCE_DOCUMENTS"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductComplianceDocumentInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uploadProductComplianceDocument"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"failure"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrls"}}]}}]}}]}}]} as unknown as DocumentNode<Update_Compliance_DocumentsMutation, Update_Compliance_DocumentsMutationVariables>;
export const BrandSearch_GetTrueBrandsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"BrandSearch_GetTrueBrands"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"count"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"queryString"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"BrandSort"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trueBrands"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"count"},"value":{"kind":"Variable","name":{"kind":"Name","value":"count"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"queryString"},"value":{"kind":"Variable","name":{"kind":"Name","value":"queryString"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"logoUrl"}}]}}]}}]}}]} as unknown as DocumentNode<BrandSearch_GetTrueBrandsQuery, BrandSearch_GetTrueBrandsQueryVariables>;
export const AddEdit_GetGtinProductQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AddEdit_GetGtinProductQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"gtins"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"currency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gtinProductService"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"gtins"},"value":{"kind":"Variable","name":{"kind":"Name","value":"gtins"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrls"}},{"kind":"Field","name":{"kind":"Name","value":"wishBrand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gtin"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrls"}},{"kind":"Field","name":{"kind":"Name","value":"length"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]},{"kind":"Field","name":{"kind":"Name","value":"unit"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]},{"kind":"Field","name":{"kind":"Name","value":"unit"}}]}},{"kind":"Field","name":{"kind":"Name","value":"height"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]},{"kind":"Field","name":{"kind":"Name","value":"unit"}}]}},{"kind":"Field","name":{"kind":"Name","value":"weight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"GRAM"}}]},{"kind":"Field","name":{"kind":"Name","value":"unit"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"currency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"MKL_POLICY"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AddEdit_GetGtinProductQueryQuery, AddEdit_GetGtinProductQueryQueryVariables>;
export const GetBrandMatchDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetBrandMatch"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"brandName"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trueBrands"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"brandName"},"value":{"kind":"Variable","name":{"kind":"Name","value":"brandName"}}},{"kind":"Argument","name":{"kind":"Name","value":"count"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"logoUrl"}}]}}]}}]}}]} as unknown as DocumentNode<GetBrandMatchQuery, GetBrandMatchQueryVariables>;
export const AddProduct_GetInitialDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AddProduct_GetInitialDataQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"standardWarehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"canManageShipping"}},{"kind":"Field","name":{"kind":"Name","value":"isCnForFulfillment"}},{"kind":"Field","name":{"kind":"Name","value":"isStoreMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"shippingSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"enabled"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"gmvRank"}},{"kind":"Field","name":{"kind":"Name","value":"regions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"wishExpress"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"expectedTimeToDoor"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"countryOfDomicile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"useCalculatedShipping"},"name":{"kind":"Name","value":"isAllowed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"use_calculated_shipping","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingMUG"},"name":{"kind":"Name","value":"isAllowed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_options","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"prop65Chemicals"}}]}},{"kind":"Field","name":{"kind":"Name","value":"deciderKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingDkey"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_grouping_ui","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showRevampedAddEditProductUI"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"add_edit_product_ui_revamp","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showInventoryOnHand"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"show_inventory_on_hand","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCount"}}]}}]}}]} as unknown as DocumentNode<AddProduct_GetInitialDataQueryQuery, AddProduct_GetInitialDataQueryQueryVariables>;
export const EditProduct_GetInitialDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EditProduct_GetInitialDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"su"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isBd"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isConsignmentMode"}},{"kind":"Field","name":{"kind":"Name","value":"standardWarehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"canManageShipping"}},{"kind":"Field","name":{"kind":"Name","value":"isCnForFulfillment"}},{"kind":"Field","name":{"kind":"Name","value":"shippingSettings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"enabled"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"gmvRank"}},{"kind":"Field","name":{"kind":"Name","value":"regions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"wishExpress"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"expectedTimeToDoor"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"countryOfDomicile"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"useCalculatedShipping"},"name":{"kind":"Name","value":"isAllowed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"use_calculated_shipping","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingMUG"},"name":{"kind":"Name","value":"isAllowed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_options","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"prop65Chemicals"}}]}},{"kind":"Field","name":{"kind":"Name","value":"deciderKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingDkey"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_grouping_ui","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showRevampedAddEditProductUI"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"add_edit_product_ui_revamp","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showInventoryOnHand"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"show_inventory_on_hand","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showConsignmentOverwrite"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"show_consignment_overwrite","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCategoryDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"disputes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"EnumValue","value":"PRODUCT_ID"}},{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"PENDING_REVIEW"},{"kind":"EnumValue","value":"RESOLVED_UNCHANGED"},{"kind":"EnumValue","value":"RESOLVED_UPDATE"}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"reviewStatus"}},{"kind":"Field","name":{"kind":"Name","value":"condition"}},{"kind":"Field","name":{"kind":"Name","value":"maxQuantity"}},{"kind":"Field","name":{"kind":"Name","value":"eligibleForCategoryDispute"}},{"kind":"Field","name":{"kind":"Name","value":"warningType"}},{"kind":"Field","name":{"kind":"Name","value":"chemicalNames"}},{"kind":"Field","name":{"kind":"Name","value":"isConsignmentEligible"}},{"kind":"Field","name":{"kind":"Name","value":"consignmentOriginalPid"}},{"kind":"Field","name":{"kind":"Name","value":"subcategory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"categoryChildren"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoriesAlongPath"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"createTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%s","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"lastUpdateTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%s","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"}},{"kind":"Field","name":{"kind":"Name","value":"upc"}},{"kind":"Field","name":{"kind":"Name","value":"referenceWeight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceLength"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceVolume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceArea"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceUnit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"gtin"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"declaredValue"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"declaredName"}},{"kind":"Field","name":{"kind":"Name","value":"declaredLocalName"}},{"kind":"Field","name":{"kind":"Name","value":"pieces"}},{"kind":"Field","name":{"kind":"Name","value":"hasPowder"}},{"kind":"Field","name":{"kind":"Name","value":"hasLiquid"}},{"kind":"Field","name":{"kind":"Name","value":"hasBattery"}},{"kind":"Field","name":{"kind":"Name","value":"hasMetal"}},{"kind":"Field","name":{"kind":"Name","value":"originCountry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"weight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"GRAM"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"effectiveWeight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"GRAM"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"height"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"width"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"length"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"targetUnit"},"value":{"kind":"EnumValue","value":"CENTIMETER"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"customsHsCode"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"consignmentSupplyCost"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}},{"kind":"Field","name":{"kind":"Name","value":"shippingType"}},{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityWeight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityLength"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityVolume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityArea"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityUnit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"attributes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraImages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"requestedBrand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"logoUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shippingType"}},{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"}},{"kind":"Field","name":{"kind":"Name","value":"wishExpressTtdRequirement"}},{"kind":"Field","name":{"kind":"Name","value":"regionShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"}},{"kind":"Field","name":{"kind":"Name","value":"region"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"gmvRank"}},{"kind":"Field","name":{"kind":"Name","value":"regions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"isRemovedByWish"}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"attributes"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]} as unknown as DocumentNode<EditProduct_GetInitialDataQueryQuery, EditProduct_GetInitialDataQueryQueryVariables>;
export const GetListingQualityInsightsUrlQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetListingQualityInsightsUrlQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"listingQualityInsights"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"report"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"presignedS3Url"}}]}}]}}]}}]} as unknown as DocumentNode<GetListingQualityInsightsUrlQueryQuery, GetListingQualityInsightsUrlQueryQueryVariables>;
export const AllProducts_ProductsContainerInitialDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllProducts_ProductsContainerInitialDataQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"su"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isBd"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isConsignmentMode"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"canAccessPaidPlacement"}},{"kind":"Field","name":{"kind":"Name","value":"warehouses"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"unitId"}},{"kind":"Field","name":{"kind":"Name","value":"address"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingMUG"},"name":{"kind":"Name","value":"isAllowed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_options","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deciderKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"showVariationGroupingDkey"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"variation_grouping_ui","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"showConsignmentOverwrite"},"name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"StringValue","value":"show_consignment_overwrite","block":false}}]}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_ProductsContainerInitialDataQueryQuery, AllProducts_ProductsContainerInitialDataQueryQueryVariables>;
export const AllProducts_GetProductCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllProducts_GetProductCount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"state"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductListingState"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductFPReviewStatus"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCountV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"merchantId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"Variable","name":{"kind":"Name","value":"state"}}},{"kind":"Argument","name":{"kind":"Name","value":"fpReviewStatus"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}}},{"kind":"Argument","name":{"kind":"Name","value":"isWishExpress"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}}},{"kind":"Argument","name":{"kind":"Name","value":"hasBrand"},"value":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}}},{"kind":"Argument","name":{"kind":"Name","value":"isPromoted"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}}},{"kind":"Argument","name":{"kind":"Name","value":"isCleanImage"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}}},{"kind":"Argument","name":{"kind":"Name","value":"isReturnEnrolled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}}}]}]}}]}}]} as unknown as DocumentNode<AllProducts_GetProductCountQuery, AllProducts_GetProductCountQueryVariables>;
export const AllProducts_GetProductsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllProducts_GetProducts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"state"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductListingState"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductFPReviewStatus"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"warehouseId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"merchantId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"Variable","name":{"kind":"Name","value":"state"}}},{"kind":"Argument","name":{"kind":"Name","value":"fpReviewStatus"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}}},{"kind":"Argument","name":{"kind":"Name","value":"isWishExpress"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}}},{"kind":"Argument","name":{"kind":"Name","value":"hasBrand"},"value":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}}},{"kind":"Argument","name":{"kind":"Name","value":"isPromoted"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}}},{"kind":"Argument","name":{"kind":"Name","value":"isCleanImage"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}}},{"kind":"Argument","name":{"kind":"Name","value":"isReturnEnrolled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"isRemovedByWish"}},{"kind":"Field","name":{"kind":"Name","value":"isRemovedByMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"isRemoved"}},{"kind":"Field","name":{"kind":"Name","value":"isPromoted"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"wishes"}},{"kind":"Field","name":{"kind":"Name","value":"isLtl"}},{"kind":"Field","name":{"kind":"Name","value":"isReturnsEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isWishExpress"}},{"kind":"Field","name":{"kind":"Name","value":"categoryExperienceEligibility"}},{"kind":"Field","name":{"kind":"Name","value":"subcategoryId"}},{"kind":"Field","name":{"kind":"Name","value":"subcategory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"categoriesAlongPath"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variationOptions"}},{"kind":"Field","name":{"kind":"Name","value":"listingState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"TINY"}}]},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraImages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"hasBrand"}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"warehouseId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"warehouseId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shippingType"}},{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"lastUpdateTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MM-dd-YYYY z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"createTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MM-dd-YYYY z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"variationCount"}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"IntValue","value":"0"}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"TINY"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_GetProductsQuery, AllProducts_GetProductsQueryVariables>;
export const AllProducts_GetProductVariationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllProducts_GetProductVariations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}},{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"EnumValue","value":"ID"}},{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"variations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"IntValue","value":"0"}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_GetProductVariationsQuery, AllProducts_GetProductVariationsQueryVariables>;
export const AllProducts_UpsertProductsMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AllProducts_UpsertProductsMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductUpsertInput"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"failures"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_UpsertProductsMutationMutation, AllProducts_UpsertProductsMutationMutationVariables>;
export const AllProducts_RemoveProductMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AllProducts_RemoveProductMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RemoveProductInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"removeProduct"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_RemoveProductMutationMutation, AllProducts_RemoveProductMutationMutationVariables>;
export const AllProducts_DownloadProductsMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AllProducts_DownloadProductsMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DownloadAllProductsInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"downloadAllProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"errorMessage"}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_DownloadProductsMutationMutation, AllProducts_DownloadProductsMutationMutationVariables>;
export const AllProducts_DeleteWarehouseDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AllProducts_DeleteWarehouse"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DeleteMerchantWarehouseInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseSettings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteWarehouse"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_DeleteWarehouseMutation, AllProducts_DeleteWarehouseMutationVariables>;
export const AllProducts_GetProductsForExportDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AllProducts_GetProductsForExport"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"state"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductListingState"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductFPReviewStatus"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"warehouseId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvProductColumnEnums"}},{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"merchantId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isEnabled"}}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"Variable","name":{"kind":"Name","value":"state"}}},{"kind":"Argument","name":{"kind":"Name","value":"fpReviewStatus"},"value":{"kind":"Variable","name":{"kind":"Name","value":"fpReviewStatus"}}},{"kind":"Argument","name":{"kind":"Name","value":"isWishExpress"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isWishExpress"}}},{"kind":"Argument","name":{"kind":"Name","value":"hasBrand"},"value":{"kind":"Variable","name":{"kind":"Name","value":"hasBrand"}}},{"kind":"Argument","name":{"kind":"Name","value":"isPromoted"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isPromoted"}}},{"kind":"Argument","name":{"kind":"Name","value":"isCleanImage"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isCleanImage"}}},{"kind":"Argument","name":{"kind":"Name","value":"isReturnEnrolled"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isReturnEnrolled"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"wishes"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"upc"}},{"kind":"Field","name":{"kind":"Name","value":"lastUpdateTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY-MM-dd k:mm:ss z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"createTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY-MM-dd k:mm:ss z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"msrp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"warehouseId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"warehouseId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shippingType"}},{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"}},{"kind":"Field","name":{"kind":"Name","value":"enabled"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"fpReviewStatus"}},{"kind":"Field","name":{"kind":"Name","value":"listingState"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"state"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isPromoted"}},{"kind":"Field","name":{"kind":"Name","value":"isLtl"}},{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"TINY"}}]},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraImages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"TINY"}}]},{"kind":"Field","name":{"kind":"Name","value":"isCleanImage"}}]}},{"kind":"Field","name":{"kind":"Name","value":"trueTags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"condition"}},{"kind":"Field","name":{"kind":"Name","value":"maxQuantity"}},{"kind":"Field","name":{"kind":"Name","value":"referenceArea"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceUnit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceWeight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceLength"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"referenceVolume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"chemicalNames"}},{"kind":"Field","name":{"kind":"Name","value":"warningType"}},{"kind":"Field","name":{"kind":"Name","value":"requestedBrand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoryExperienceEligibility"}},{"kind":"Field","name":{"kind":"Name","value":"subcategoryId"}},{"kind":"Field","name":{"kind":"Name","value":"subcategory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"variationOptions"}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"gtin"}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"warehouseId"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"image"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"TINY"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"customsHsCode"}},{"kind":"Field","name":{"kind":"Name","value":"length"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"width"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"height"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"weight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"declaredValue"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"originCountry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"declaredLocalName"}},{"kind":"Field","name":{"kind":"Name","value":"declaredName"}},{"kind":"Field","name":{"kind":"Name","value":"hasLiquid"}},{"kind":"Field","name":{"kind":"Name","value":"hasMetal"}},{"kind":"Field","name":{"kind":"Name","value":"hasPowder"}},{"kind":"Field","name":{"kind":"Name","value":"hasBattery"}},{"kind":"Field","name":{"kind":"Name","value":"pieces"}},{"kind":"Field","name":{"kind":"Name","value":"quantityArea"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityUnit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityWeight"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityLength"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"quantityVolume"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unit"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"options"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AllProducts_GetProductsForExportQuery, AllProducts_GetProductsForExportQueryVariables>;
export const AdminUsersTable_GetInternalUsersQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminUsersTable_GetInternalUsersQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UsersSortFieldType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"includeDisabledUsers"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"roles"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"RoleType"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"identity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"users"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"includeDisabledUsers"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeDisabledUsers"}}},{"kind":"Argument","name":{"kind":"Name","value":"roles"},"value":{"kind":"Variable","name":{"kind":"Name","value":"roles"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"username"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"bdMerchantCountry"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"manager"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"serviceTypes"}},{"kind":"Field","name":{"kind":"Name","value":"isEnabled"}},{"kind":"Field","name":{"kind":"Name","value":"isSalesRep"}},{"kind":"Field","alias":{"kind":"Name","value":"canBeAssignedToLogicalQueue"},"name":{"kind":"Name","value":"hasPermission"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"permissions"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"HANDLE_CS_TICKETS"}]}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"usersCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"includeDisabledUsers"},"value":{"kind":"Variable","name":{"kind":"Name","value":"includeDisabledUsers"}}},{"kind":"Argument","name":{"kind":"Name","value":"roles"},"value":{"kind":"Variable","name":{"kind":"Name","value":"roles"}}}]}]}}]}}]} as unknown as DocumentNode<AdminUsersTable_GetInternalUsersQueryQuery, AdminUsersTable_GetInternalUsersQueryQueryVariables>;
export const AdminUsersTable_LoginAsUserMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AdminUsersTable_LoginAsUserMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ByUserIdInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"loginAs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]}}]}}]} as unknown as DocumentNode<AdminUsersTable_LoginAsUserMutationMutation, AdminUsersTable_LoginAsUserMutationMutationVariables>;
export const MerchantSupportConfigQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MerchantSupportConfigQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"supportConfig"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isEnBd"}},{"kind":"Field","name":{"kind":"Name","value":"isNonEnBd"}}]}},{"kind":"Field","name":{"kind":"Name","value":"accountManager"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"email"}}]}}]}}]}}]} as unknown as DocumentNode<MerchantSupportConfigQueryQuery, MerchantSupportConfigQueryQueryVariables>;
export const AppLocalSelector_ChangeLocaleMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AppLocalSelector_ChangeLocaleMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ChangeLocaleInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locale"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"changeLocale"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<AppLocalSelector_ChangeLocaleMutationMutation, AppLocalSelector_ChangeLocaleMutationMutationVariables>;
export const SearchStore_ObjectSearchQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"SearchStore_ObjectSearchQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"objectId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"currentPath"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chrome"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"objectSearch"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objectId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"objectId"}}},{"kind":"Argument","name":{"kind":"Name","value":"currentPath"},"value":{"kind":"Variable","name":{"kind":"Name","value":"currentPath"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"imageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"nuggets"}}]}}]}}]}}]} as unknown as DocumentNode<SearchStore_ObjectSearchQueryQuery, SearchStore_ObjectSearchQueryQueryVariables>;
export const Chrome_GetSideMenuCountsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Chrome_GetSideMenuCounts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ticketCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"}]}},{"kind":"Argument","name":{"kind":"Name","value":"types"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"ORDER"},{"kind":"EnumValue","value":"PRE_PURCHASE"},{"kind":"EnumValue","value":"POST_CUSTOMER_SUPPORT"}]}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"fulfillment"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"actionRequiredOrderCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"logistics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fbw"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lowInventoryCount"}},{"kind":"Field","name":{"kind":"Name","value":"actionRequiredShippingPlans"}},{"kind":"Field","name":{"kind":"Name","value":"totalActionRequired"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"marketing"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"pendingCampaignCount"}},{"kind":"Field","name":{"kind":"Name","value":"lowBudgetCampaignCount"}},{"kind":"Field","name":{"kind":"Name","value":"actionRequiredCampaignCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"merchantIpWarningCount"},"name":{"kind":"Name","value":"merchantWarningCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"},{"kind":"EnumValue","value":"NEW"}]}},{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"COUNTERFEIT_GOODS"},{"kind":"EnumValue","value":"FINE_FOR_COUNTERFEIT_GOODS"}]}}]},{"kind":"Field","alias":{"kind":"Name","value":"merchantActionRequiredCount"},"name":{"kind":"Name","value":"merchantWarningCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"},{"kind":"EnumValue","value":"NEW"}]}}]},{"kind":"Field","name":{"kind":"Name","value":"dispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"disputeCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"}]}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"refundDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"returnDisputeCount"},"name":{"kind":"Name","value":"disputeCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"}]}},{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"MERCHANT_REPORT_RETURN"}]}}]},{"kind":"Field","alias":{"kind":"Name","value":"refundDisputeCount"},"name":{"kind":"Name","value":"disputeCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"AWAITING_MERCHANT"}]}},{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"MISLEADING_PRODUCT_TAG"},{"kind":"EnumValue","value":"PRODUCT_HIGH_REFUND_RATIO"},{"kind":"EnumValue","value":"DELIVERED_TO_WRONG_ADDRESS"},{"kind":"EnumValue","value":"EPC_OVERWEIGHT"},{"kind":"EnumValue","value":"FRAUDULENT_BEHAVIOR"},{"kind":"EnumValue","value":"VALID_TRACKING"},{"kind":"EnumValue","value":"INCOMPLETE_ORDER"},{"kind":"EnumValue","value":"NOT_DELIVERED_ON_TIME"},{"kind":"EnumValue","value":"STORE_UPLOADED_INVENTORY_RETURN"},{"kind":"EnumValue","value":"PRODUCT_LOW_RATING"},{"kind":"EnumValue","value":"RIGHT_OF_WITHDRAWAL"},{"kind":"EnumValue","value":"FBS_ITEM_NOT_PICKUP"},{"kind":"EnumValue","value":"CORRECT_SIZE"},{"kind":"EnumValue","value":"ITEM_IS_DAMAGED"},{"kind":"EnumValue","value":"EPC_OVERVALUE"},{"kind":"EnumValue","value":"RETURNED_TO_SENDER"},{"kind":"EnumValue","value":"ITEM_NOT_MATCH_LISTING"},{"kind":"EnumValue","value":"WISHBLUE_EPC_LATE_FULFULLMENT"},{"kind":"EnumValue","value":"OUT_OF_STOCK"},{"kind":"EnumValue","value":"ITEM_MARKED_DELIVERED_BUT_DID_NOT_ARRIVE"},{"kind":"EnumValue","value":"FAKE_TRACKING"},{"kind":"EnumValue","value":"MERCHANT_HIGH_REFUND_EAT_COST"},{"kind":"EnumValue","value":"ITEM_IS_DANGEROUS"},{"kind":"EnumValue","value":"BANNED_MERCHANT"},{"kind":"EnumValue","value":"NOT_QUALIFIED_SHIPPING_PROVIDER"},{"kind":"EnumValue","value":"AUTHORIZED_TO_SELL"},{"kind":"EnumValue","value":"EPC_LAST_MILE_CARRIERS_UNABLE_TO_SHIP"},{"kind":"EnumValue","value":"EPC_OVERSIZE"},{"kind":"EnumValue","value":"COUNTERFEIT_ITEM"},{"kind":"EnumValue","value":"DID_NOT_ACCEPT_TOS_ON_TIME"},{"kind":"EnumValue","value":"LATE_CONFIRMED_FULFILLMENT"},{"kind":"EnumValue","value":"MERCHANT_REPORT_FRAUD"}]}}]}]}}]}}]}}]}}]} as unknown as DocumentNode<Chrome_GetSideMenuCountsQuery, Chrome_GetSideMenuCountsQueryVariables>;
export const Chrome_GetAppTopbarDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Chrome_GetAppTopbarData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"su"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasPermission"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"permissions"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"CAN_TOGGLE_ADMIN_EDIT_ON_STORE_USERS"},{"kind":"EnumValue","value":"CAN_TOGGLE_ADMIN_EDIT_ON_ALL_USERS"}]}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isStoreMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"canAccessHome"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"firstName"}}]}}]}}]} as unknown as DocumentNode<Chrome_GetAppTopbarDataQuery, Chrome_GetAppTopbarDataQueryVariables>;
export const Chrome_NotificationButtonDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Chrome_NotificationButtonData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"notifications"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"notificationCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"viewed"},"value":{"kind":"BooleanValue","value":false}}]}]}}]}}]} as unknown as DocumentNode<Chrome_NotificationButtonDataQuery, Chrome_NotificationButtonDataQueryVariables>;
export const Chrome_GetAlertsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Chrome_GetAlerts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"alerts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"link"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY/MM/dd","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"sentiment"}}]}}]}}]}}]} as unknown as DocumentNode<Chrome_GetAlertsQuery, Chrome_GetAlertsQueryVariables>;
export const PasswordInput_CheckPasswordStrengthDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PasswordInput_CheckPasswordStrength"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"password"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"passwordEvaluation"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"password"},"value":{"kind":"Variable","name":{"kind":"Name","value":"password"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"valid"}},{"kind":"Field","name":{"kind":"Name","value":"errorMessage"}}]}}]}}]}}]} as unknown as DocumentNode<PasswordInput_CheckPasswordStrengthQuery, PasswordInput_CheckPasswordStrengthQueryVariables>;
export const ProductDetailModal_GetProductDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductDetailModal_GetProduct"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sku"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"sku"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sku"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"isRemoved"}}]}}]}}]}}]} as unknown as DocumentNode<ProductDetailModal_GetProductQuery, ProductDetailModal_GetProductQueryVariables>;
export const ProductImage_GetProductImageDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductImage_GetProductImage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"}}]}}]}}]}}]}}]} as unknown as DocumentNode<ProductImage_GetProductImageQuery, ProductImage_GetProductImageQueryVariables>;
export const ChromeStore_InitialQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ChromeStore_InitialQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chrome"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantGraph"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NodeElements"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NodeElements"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NodeElements"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NodeElements"}},{"kind":"Field","name":{"kind":"Name","value":"children"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"NodeElements"}}]}}]}}]}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"NodeElements"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"ChromeNodeSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"url"}},{"kind":"Field","name":{"kind":"Name","value":"path"}},{"kind":"Field","name":{"kind":"Name","value":"label"}},{"kind":"Field","name":{"kind":"Name","value":"overviewLabel"}},{"kind":"Field","name":{"kind":"Name","value":"badge"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badgeType"}},{"kind":"Field","name":{"kind":"Name","value":"expiryDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}},{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"nodeid"}},{"kind":"Field","name":{"kind":"Name","value":"keywords"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"searchPhrase"}},{"kind":"Field","name":{"kind":"Name","value":"showInSideMenu"}},{"kind":"Field","name":{"kind":"Name","value":"openInNewTab"}},{"kind":"Field","name":{"kind":"Name","value":"totalHits"}},{"kind":"Field","name":{"kind":"Name","value":"mostRecentHit"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}},{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"countSelectors"}}]}}]} as unknown as DocumentNode<ChromeStore_InitialQueryQuery, ChromeStore_InitialQueryQueryVariables>;
export const ExperimentStore_GetBucketForExperimentDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ExperimentStore_GetBucketForExperiment"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"exp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bucket"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}]}]}}]}}]}}]} as unknown as DocumentNode<ExperimentStore_GetBucketForExperimentQuery, ExperimentStore_GetBucketForExperimentQueryVariables>;
export const ExperimentStore_GetDeciderKeyDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ExperimentStore_GetDeciderKey"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"name"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deciderKey"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"decideForName"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"name"},"value":{"kind":"Variable","name":{"kind":"Name","value":"name"}}}]}]}}]}}]}}]} as unknown as DocumentNode<ExperimentStore_GetDeciderKeyQuery, ExperimentStore_GetDeciderKeyQueryVariables>;
export const LocalizationStore_InitialQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"LocalizationStore_InitialQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentLocale"}},{"kind":"Field","name":{"kind":"Name","value":"currentProperLocale"}},{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availableLocales"}}]}}]}}]} as unknown as DocumentNode<LocalizationStore_InitialQueryQuery, LocalizationStore_InitialQueryQueryVariables>;
export const UserStore_InitialQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UserStore_InitialQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentCountry"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isStoreMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"state"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"merchantId"}},{"kind":"Field","name":{"kind":"Name","value":"firstName"}},{"kind":"Field","name":{"kind":"Name","value":"lastName"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"}},{"kind":"Field","name":{"kind":"Name","value":"companyName"}},{"kind":"Field","name":{"kind":"Name","value":"entityType"}},{"kind":"Field","name":{"kind":"Name","value":"isStoreOrMerchantUser"}},{"kind":"Field","name":{"kind":"Name","value":"isApiUser"}},{"kind":"Field","name":{"kind":"Name","value":"isAdmin"}},{"kind":"Field","name":{"kind":"Name","value":"roles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"businessAddress"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"streetAddress1"}},{"kind":"Field","name":{"kind":"Name","value":"streetAddress2"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zipcode"}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"su"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"isAdmin"}}]}},{"kind":"Field","name":{"kind":"Name","value":"recentUsers"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"isStoreOrMerchantUser"}}]}}]}}]} as unknown as DocumentNode<UserStore_InitialQueryQuery, UserStore_InitialQueryQueryVariables>;
export const Fashion_GetLeafCategoriesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Fashion_GetLeafCategories"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"l1CategoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"leafCategories"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"l1CategoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"l1CategoryId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"categoriesAlongPath"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoryChildren"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Fashion_GetLeafCategoriesQuery, Fashion_GetLeafCategoriesQueryVariables>;
export const Fashion_GetCategoryAttributesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Fashion_GetCategoryAttributes"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"attributes"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"values"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"dataType"}},{"kind":"Field","name":{"kind":"Name","value":"dataTypeFormat"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"usage"}},{"kind":"Field","name":{"kind":"Name","value":"isVariationAttribute"}},{"kind":"Field","name":{"kind":"Name","value":"mode"}},{"kind":"Field","name":{"kind":"Name","value":"maxMultiSelect"}},{"kind":"Field","name":{"kind":"Name","value":"enabledForVariations"}}]}}]}}]}}]} as unknown as DocumentNode<Fashion_GetCategoryAttributesQuery, Fashion_GetCategoryAttributesQueryVariables>;
export const Fashion_TaxonomyCategoriesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Fashion_TaxonomyCategoriesQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"category"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"categoriesAlongPath"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoryChildren"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"categoriesAlongPath"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoryChildren"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Fashion_TaxonomyCategoriesQueryQuery, Fashion_TaxonomyCategoriesQueryQueryVariables>;
export const CategoryCsvHeadersQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CategoryCSVHeadersQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"treeVersion"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvProductTemplateWithTaxonomyColumnNames"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}}},{"kind":"Argument","name":{"kind":"Name","value":"treeVersion"},"value":{"kind":"Variable","name":{"kind":"Name","value":"treeVersion"}}}]}]}}]}}]} as unknown as DocumentNode<CategoryCsvHeadersQueryQuery, CategoryCsvHeadersQueryQueryVariables>;
export const CategoryAttributesCsvQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CategoryAttributesCsvQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"categoryAttributesCsv"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}}}]}]}}]}}]} as unknown as DocumentNode<CategoryAttributesCsvQueryQuery, CategoryAttributesCsvQueryQueryVariables>;
export const CategoryTreeJsonQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CategoryTreeJsonQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCategoryTaxonomyTreeJson"}}]}}]}}]} as unknown as DocumentNode<CategoryTreeJsonQueryQuery, CategoryTreeJsonQueryQueryVariables>;
export const VariationGrouping_GetTaxonomyVariationOptionsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"VariationGrouping_GetTaxonomyVariationOptionsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"treeVersion"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"variationOptions"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categoryId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"categoryId"}}},{"kind":"Argument","name":{"kind":"Name","value":"treeVersion"},"value":{"kind":"Variable","name":{"kind":"Name","value":"treeVersion"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"values"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]}}]}}]} as unknown as DocumentNode<VariationGrouping_GetTaxonomyVariationOptionsQueryQuery, VariationGrouping_GetTaxonomyVariationOptionsQueryQueryVariables>;
export const Logger_WriteLogDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Logger_WriteLog"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LogToTreasureDataInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"analytics"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"log"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}}]}}]}}]}}]} as unknown as DocumentNode<Logger_WriteLogMutation, Logger_WriteLogMutationVariables>;
export const Toolkit_InitialUploadDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Toolkit_InitialUpload"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"InitiateUploadInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uploads"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"initiateUpload"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"uploadUrl"}},{"kind":"Field","name":{"kind":"Name","value":"uploadHeaders"}},{"kind":"Field","name":{"kind":"Name","value":"downloadUrl"}}]}}]}}]}}]} as unknown as DocumentNode<Toolkit_InitialUploadMutation, Toolkit_InitialUploadMutationVariables>;
export const GetUserAnnouncementsV2_ListDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetUserAnnouncementsV2_List"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"announcementType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AnnouncementType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"announcements"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forUsersV2"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"list"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"announcementType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"announcementType"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"important"}},{"kind":"Field","name":{"kind":"Name","value":"program"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}},{"kind":"Field","name":{"kind":"Name","value":"publishDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"UTC","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MMM d, y","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetUserAnnouncementsV2_ListQuery, GetUserAnnouncementsV2_ListQueryVariables>;
export const GetUserAnnouncementsV2_ModalDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetUserAnnouncementsV2_Modal"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"announcementType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AnnouncementType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"announcements"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forUsersV2"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"list"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"announcementType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"announcementType"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<GetUserAnnouncementsV2_ModalQuery, GetUserAnnouncementsV2_ModalQueryVariables>;
export const FlatRateShippingSettings_GetOptInStatusDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"FlatRateShippingSettings_GetOptInStatus"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isFlatRateShippingOptedIn"}},{"kind":"Field","name":{"kind":"Name","value":"canAccessFlatRateShippingOptInOptOut"}}]}}]}}]} as unknown as DocumentNode<FlatRateShippingSettings_GetOptInStatusQuery, FlatRateShippingSettings_GetOptInStatusQueryVariables>;
export const Home_GetInitialDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Home_GetInitialData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"announcements"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forUsers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"announcementType"},"value":{"kind":"EnumValue","value":"SYSTEM_UPDATE"}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"5"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"ctaText"}},{"kind":"Field","name":{"kind":"Name","value":"ctaLink"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"important"}},{"kind":"Field","name":{"kind":"Name","value":"program"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"UTC","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MMM d, y","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"onboarding"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"steps"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"completed"},"value":{"kind":"BooleanValue","value":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"illustration"}},{"kind":"Field","name":{"kind":"Name","value":"ctaText"}},{"kind":"Field","name":{"kind":"Name","value":"ctaLink"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"numStepsLeft"}},{"kind":"Field","name":{"kind":"Name","value":"numSteps"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sellerVerification"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"kycVerification"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"status"}}]}},{"kind":"Field","name":{"kind":"Name","value":"isKycVerification"}},{"kind":"Field","name":{"kind":"Name","value":"gmvCapReached"}},{"kind":"Field","name":{"kind":"Name","value":"impressionsPaused"}},{"kind":"Field","name":{"kind":"Name","value":"paymentsBlocked"}},{"kind":"Field","name":{"kind":"Name","value":"gmvCap"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"gmvCapGracePeriodEndDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"numSalesCap"}},{"kind":"Field","name":{"kind":"Name","value":"actionRequired"}}]}},{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"averageProductRating"}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"isStoreMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"isFactory"}},{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"accountManager"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"qqGroupNumber"}}]}}]}}]}}]} as unknown as DocumentNode<Home_GetInitialDataQuery, Home_GetInitialDataQueryVariables>;
export const HomeBanner_GetInitialDataDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"HomeBanner_GetInitialData"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"utmSource"}},{"kind":"Field","name":{"kind":"Name","value":"backToOnboardingReason"}},{"kind":"Field","name":{"kind":"Name","value":"onboarding"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"completed"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"isCnMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"allowMfp"}}]}},{"kind":"Field","name":{"kind":"Name","value":"payments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"paymentCycle"}},{"kind":"Field","name":{"kind":"Name","value":"fullyEnrolledInPaymentCycle"}}]}}]}}]}}]} as unknown as DocumentNode<HomeBanner_GetInitialDataQuery, HomeBanner_GetInitialDataQueryVariables>;
export const PlusPayments_GetAccountBalanceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PlusPayments_GetAccountBalance"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"currency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"payments"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"paymentInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"showLedgerUi"}},{"kind":"Field","name":{"kind":"Name","value":"ledgerAccountBalances"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currency"}},{"kind":"Field","name":{"kind":"Name","value":"balanceType"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"confirmedAccountBalance"},"name":{"kind":"Name","value":"accountBalance"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"currency"}}},{"kind":"Argument","name":{"kind":"Name","value":"balanceType"},"value":{"kind":"EnumValue","value":"CONFIRMED"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"pendingAccountBalance"},"name":{"kind":"Name","value":"accountBalance"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"currency"}}},{"kind":"Argument","name":{"kind":"Name","value":"balanceType"},"value":{"kind":"EnumValue","value":"PENDING"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]} as unknown as DocumentNode<PlusPayments_GetAccountBalanceQuery, PlusPayments_GetAccountBalanceQueryVariables>;
export const MerchantHome_GetOrdersAndAnnouncementsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MerchantHome_GetOrdersAndAnnouncements"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalGmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"announcements"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"forUsers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"announcementType"},"value":{"kind":"EnumValue","value":"BD_ANNOUNCEMENT"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"ctaText"}},{"kind":"Field","name":{"kind":"Name","value":"ctaLink"}},{"kind":"Field","name":{"kind":"Name","value":"title"}}]}}]}}]}}]} as unknown as DocumentNode<MerchantHome_GetOrdersAndAnnouncementsQuery, MerchantHome_GetOrdersAndAnnouncementsQueryVariables>;
export const MerchantOnboarding_GetSellerVerificationStatusDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MerchantOnboarding_GetSellerVerificationStatus"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sellerVerification"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"status"}}]}}]}}]}}]} as unknown as DocumentNode<MerchantOnboarding_GetSellerVerificationStatusQuery, MerchantOnboarding_GetSellerVerificationStatusQueryVariables>;
export const InfractionQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"InfractionQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantWarning"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}}]}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"resolved"}},{"kind":"Field","name":{"kind":"Name","value":"wssImpact"}},{"kind":"Field","name":{"kind":"Name","value":"merchantActions"}},{"kind":"Field","name":{"kind":"Name","value":"outstandingMerchantActions"}},{"kind":"Field","name":{"kind":"Name","value":"reason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productTrueTagInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"counterfeitViolation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"inappropriateViolation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reason"}}]}},{"kind":"Field","name":{"kind":"Name","value":"subreason"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"subcategory"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"effectiveDisputeDeadlineDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"products"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"mainImage"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishUrl"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"size"},"value":{"kind":"EnumValue","value":"SMALL"}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"proofs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"note"}},{"kind":"Field","name":{"kind":"Name","value":"disputeStatus"}},{"kind":"Field","name":{"kind":"Name","value":"warningId"}}]}},{"kind":"Field","name":{"kind":"Name","value":"impacts"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"countries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"order"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"merchantTotal"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"releasedTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"refundedTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"confirmedFulfillmentDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"deliveredDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"datetime"}}]}},{"kind":"Field","name":{"kind":"Name","value":"checkpoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"resultingTracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shippingDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingId"}},{"kind":"Field","name":{"kind":"Name","value":"provider"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"refundItems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reasonInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"trackingDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"messages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackingMessageFields"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"takedownRequest"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"contact"}},{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"}}]}},{"kind":"Field","name":{"kind":"Name","value":"replies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReplyFields"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"brand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"brandAuthorizations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"merchantId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"brand"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countriesWeShipTo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TrackingMessageFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrackingDisputeMessageSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReplyFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MerchantWarningReplySchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"translatedMessage"}},{"kind":"Field","name":{"kind":"Name","value":"images"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}},{"kind":"Field","name":{"kind":"Name","value":"idFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}}]} as unknown as DocumentNode<InfractionQueryQuery, InfractionQueryQueryVariables>;
export const MessagesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MessagesQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantWarning"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"messages"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"TrackingMessageFields"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"replies"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"FragmentSpread","name":{"kind":"Name","value":"ReplyFields"}}]}}]}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"TrackingMessageFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"TrackingDisputeMessageSchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}},{"kind":"FragmentDefinition","name":{"kind":"Name","value":"ReplyFields"},"typeCondition":{"kind":"NamedType","name":{"kind":"Name","value":"MerchantWarningReplySchema"}},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"senderType"}},{"kind":"Field","name":{"kind":"Name","value":"senderName"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"translatedMessage"}},{"kind":"Field","name":{"kind":"Name","value":"images"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"files"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}},{"kind":"Field","name":{"kind":"Name","value":"idFiles"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"displayFilename"}},{"kind":"Field","name":{"kind":"Name","value":"fileUrl"}},{"kind":"Field","name":{"kind":"Name","value":"isImageFile"}}]}}]}}]} as unknown as DocumentNode<MessagesQueryQuery, MessagesQueryQueryVariables>;
export const RequestPaymentReleaseMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"RequestPaymentReleaseMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"idFiles"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"FileInput"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"agreementFiles"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"FileInput"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantWarning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertMerchantWarning"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"action"},"value":{"kind":"EnumValue","value":"REQUEST_PAYMENT_RELEASE"}},{"kind":"ObjectField","name":{"kind":"Name","value":"warningId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"requestPaymentInput"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"idFiles"},"value":{"kind":"Variable","name":{"kind":"Name","value":"idFiles"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"agreementFiles"},"value":{"kind":"Variable","name":{"kind":"Name","value":"agreementFiles"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<RequestPaymentReleaseMutationMutation, RequestPaymentReleaseMutationMutationVariables>;
export const SendMessageMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SendMessageMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"messageInput"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ReplyInfractionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantWarning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertMerchantWarning"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"action"},"value":{"kind":"EnumValue","value":"REPLY"}},{"kind":"ObjectField","name":{"kind":"Name","value":"warningId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"messageInput"},"value":{"kind":"Variable","name":{"kind":"Name","value":"messageInput"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SendMessageMutationMutation, SendMessageMutationMutationVariables>;
export const SubmitDisputeMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SubmitDisputeMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"action"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MerchantWarningAction"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"disputeInput"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DisputeInfractionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantWarning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertMerchantWarning"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"action"},"value":{"kind":"Variable","name":{"kind":"Name","value":"action"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"warningId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"infractionId"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"disputeInput"},"value":{"kind":"Variable","name":{"kind":"Name","value":"disputeInput"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SubmitDisputeMutationMutation, SubmitDisputeMutationMutationVariables>;
export const TagsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Tags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"topLevelTags"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]} as unknown as DocumentNode<TagsQuery, TagsQueryVariables>;
export const InfractionDisputeState_OrderInfractionDisputeMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"InfractionDisputeState_OrderInfractionDisputeMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpsertOrderInfractionDisputeInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderInfractionDispute"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertOrderInfractionDispute"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<InfractionDisputeState_OrderInfractionDisputeMutationMutation, InfractionDisputeState_OrderInfractionDisputeMutationMutationVariables>;
export const OrderDetails_InfractionDetailsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderDetails_InfractionDetails"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fulfillment"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"order"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"merchantTotal"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"isWishExpress"}},{"kind":"Field","name":{"kind":"Name","value":"isProcessing"}},{"kind":"Field","name":{"kind":"Name","value":"showAplusShippingAddressTooltip"}},{"kind":"Field","name":{"kind":"Name","value":"isAdvancedLogistics"}},{"kind":"Field","name":{"kind":"Name","value":"isBlueFusion"}},{"kind":"Field","name":{"kind":"Name","value":"fbwDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isFbw"}}]}},{"kind":"Field","name":{"kind":"Name","value":"releasedTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"timeUntil"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"shippedDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"refundedTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"refundItems"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reasonInfo"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shippingDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingId"}},{"kind":"Field","name":{"kind":"Name","value":"provider"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"trackingUrl"}},{"kind":"Field","name":{"kind":"Name","value":"providerUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"streetAddress1"}},{"kind":"Field","name":{"kind":"Name","value":"streetAddress2"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zipcode"}},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouse"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"address"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"streetAddress1"}},{"kind":"Field","name":{"kind":"Name","value":"streetAddress2"}},{"kind":"Field","name":{"kind":"Name","value":"city"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"zipcode"}},{"kind":"Field","name":{"kind":"Name","value":"phoneNumber"}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"tracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"confirmedFulfillmentDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"checkpoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY/M/d","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"resultingTracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"deliveredDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"M/d/YYYY h:mm a z","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"smallPictureUrl"}}]}},{"kind":"Field","name":{"kind":"Name","value":"pastTracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingId"}},{"kind":"Field","name":{"kind":"Name","value":"tracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"checkpoints"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY/M/d","block":false}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"resultingTracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"text"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"provider"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"trackingUrl"}},{"kind":"Field","name":{"kind":"Name","value":"providerUrl"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"lastUpdatedDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY/d/M","block":false}}]}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderDetails_InfractionDetailsQuery, OrderDetails_InfractionDetailsQueryVariables>;
export const OrderShippingProviders_InfractionDisputeFormDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderShippingProviders_InfractionDisputeForm"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"originCountryCode"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CountryCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"fulfillment"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"order"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"availableShippingProviders"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"originCountryCode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"originCountryCode"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderShippingProviders_InfractionDisputeFormQuery, OrderShippingProviders_InfractionDisputeFormQueryVariables>;
export const Authentication_TwoFactorGenTokenMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authentication_TwoFactorGenTokenMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"TwoFactorGenTokenInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gen2faCode"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"obfuscatedPhoneNumber"}},{"kind":"Field","name":{"kind":"Name","value":"allowTfaPhone"}},{"kind":"Field","name":{"kind":"Name","value":"isMerchant"}},{"kind":"Field","name":{"kind":"Name","value":"bdEmail"}},{"kind":"Field","name":{"kind":"Name","value":"isInternalEmployee"}},{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]}}]} as unknown as DocumentNode<Authentication_TwoFactorGenTokenMutationMutation, Authentication_TwoFactorGenTokenMutationMutationVariables>;
export const Authentication_GenWechatQrMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authentication_GenWechatQrMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"GenWechatQrInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"genWechatQr"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ticket"}}]}}]}}]}}]} as unknown as DocumentNode<Authentication_GenWechatQrMutationMutation, Authentication_GenWechatQrMutationMutationVariables>;
export const Authentication_LoginMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authentication_LoginMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LoginMutationInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"login"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"loginOk"}},{"kind":"Field","name":{"kind":"Name","value":"error"}},{"kind":"Field","name":{"kind":"Name","value":"errorState"}},{"kind":"Field","name":{"kind":"Name","value":"obfuscatedPhoneNumber"}},{"kind":"Field","name":{"kind":"Name","value":"sessionKey"}},{"kind":"Field","name":{"kind":"Name","value":"preferQr"}},{"kind":"Field","name":{"kind":"Name","value":"wechatBound"}}]}}]}}]}}]} as unknown as DocumentNode<Authentication_LoginMutationMutation, Authentication_LoginMutationMutationVariables>;
export const Authentication_Okta_Url_QueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Authentication_Okta_Url_Query"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"platformConstants"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"oktaOauthUri"}}]}}]}}]} as unknown as DocumentNode<Authentication_Okta_Url_QueryQuery, Authentication_Okta_Url_QueryQueryVariables>;
export const Authentication_WechatCheckScanMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authentication_WechatCheckScanMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WechatCheckScanInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"checkWechatScan"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"expireIn"}},{"kind":"Field","name":{"kind":"Name","value":"scanned"}},{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"error"}}]}}]}}]}}]} as unknown as DocumentNode<Authentication_WechatCheckScanMutationMutation, Authentication_WechatCheckScanMutationMutationVariables>;
export const Questionnaire_MerchantLeadSubmitDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Questionnaire_MerchantLeadSubmit"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MerchantLeadSubmissionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"merchantLeadSubmission"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<Questionnaire_MerchantLeadSubmitMutation, Questionnaire_MerchantLeadSubmitMutationVariables>;
export const MmsWelcome_SubmitMmsMerchantLeadMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"MmsWelcome_SubmitMmsMerchantLeadMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MMSLeadSubmissionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"authentication"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmsLeadSubmission"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]} as unknown as DocumentNode<MmsWelcome_SubmitMmsMerchantLeadMutationMutation, MmsWelcome_SubmitMmsMerchantLeadMutationMutationVariables>;
export const Refund_PerformanceAggregateDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Refund_PerformanceAggregateDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"refund"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"refunds"}},{"kind":"Field","name":{"kind":"Name","value":"refundRate"}},{"kind":"Field","name":{"kind":"Name","value":"refundRatePercentile"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotMatchingListingPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotFitPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"shippingTakeTooLongPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemDamagedPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"receivedWrongItemPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemReturnedPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotWorkPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"failToFulfillPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"deliverWrongAddressPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"incompleteOrderPercentage"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Refund_PerformanceAggregateDataQueryQuery, Refund_PerformanceAggregateDataQueryQueryVariables>;
export const Refund_PerformanceBreakdownDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Refund_PerformanceBreakdownDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCountV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeksFromTheLatest"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"refund"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"refunds"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotMatchingListingPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotFitPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"shippingTakeTooLongPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemDamagedPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"receivedWrongItemPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemReturnedPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"itemNotWorkPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"failToFulfillPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"deliverWrongAddressPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"incompleteOrderPercentage"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"isReturnsEnabled"}}]}}]}}]}}]} as unknown as DocumentNode<Refund_PerformanceBreakdownDataQueryQuery, Refund_PerformanceBreakdownDataQueryQueryVariables>;
export const Ceg_AverageFulfillmentTime_DataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CEG_AverageFulfillmentTime_DataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}},{"kind":"Argument","name":{"kind":"Name","value":"offsetDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageFulfillmentTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Ceg_AverageFulfillmentTime_DataQueryQuery, Ceg_AverageFulfillmentTime_DataQueryQueryVariables>;
export const Ceg_AverageRating_DataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CEG_AverageRating_DataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}},{"kind":"Argument","name":{"kind":"Name","value":"offsetDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageRating30d"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Ceg_AverageRating_DataQueryQuery, Ceg_AverageRating_DataQueryQueryVariables>;
export const Ceg_AverageShippingDelay_DataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CEG_AverageShippingDelay_DataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}},{"kind":"Argument","name":{"kind":"Name","value":"offsetDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageShippingDelay"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Ceg_AverageShippingDelay_DataQueryQuery, Ceg_AverageShippingDelay_DataQueryQueryVariables>;
export const Ceg_AverageShippingTime_DataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CEG_AverageShippingTime_DataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}},{"kind":"Argument","name":{"kind":"Name","value":"offsetDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageShippingTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Ceg_AverageShippingTime_DataQueryQuery, Ceg_AverageShippingTime_DataQueryQueryVariables>;
export const Ceg_RefundRate_DataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CEG_RefundRate_DataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}},{"kind":"Argument","name":{"kind":"Name","value":"offsetDays"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offsetDays"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"refundRate30d"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Ceg_RefundRate_DataQueryQuery, Ceg_RefundRate_DataQueryQueryVariables>;
export const ShippingPerformanceShippingDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ShippingPerformanceShippingDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ordersFulfilled"}},{"kind":"Field","name":{"kind":"Name","value":"averageClaimedFulfillmentTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageFulfillmentTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ordersWithValidTracking"}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"preFulfillmentCancellations"}},{"kind":"Field","name":{"kind":"Name","value":"preFulfillmentCancellationRate"}},{"kind":"Field","name":{"kind":"Name","value":"lateConfirmedFulfillment"}},{"kind":"Field","name":{"kind":"Name","value":"lateConfirmedFulfillmentRate"}}]}},{"kind":"Field","name":{"kind":"Name","value":"delivery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"ordersConfirmedDelivered"}},{"kind":"Field","name":{"kind":"Name","value":"ordersConfirmedDeliveredRate"}},{"kind":"Field","name":{"kind":"Name","value":"shippingTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}},{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ShippingPerformanceShippingDataQueryQuery, ShippingPerformanceShippingDataQueryQueryVariables>;
export const CustomerService_PerformanceAggregateDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CustomerService_PerformanceAggregateDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"cs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"orders30d"}},{"kind":"Field","name":{"kind":"Name","value":"refund30d"}},{"kind":"Field","name":{"kind":"Name","value":"refundRatio30d"}},{"kind":"Field","name":{"kind":"Name","value":"orders93d"}},{"kind":"Field","name":{"kind":"Name","value":"refund93d"}},{"kind":"Field","name":{"kind":"Name","value":"refundRatio93d"}},{"kind":"Field","name":{"kind":"Name","value":"chargeback"}},{"kind":"Field","name":{"kind":"Name","value":"chargebackRatio"}},{"kind":"Field","name":{"kind":"Name","value":"chargebackAmount"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"chargebackAmountRatio"}},{"kind":"Field","name":{"kind":"Name","value":"tickets"}},{"kind":"Field","name":{"kind":"Name","value":"ticketRatio"}},{"kind":"Field","name":{"kind":"Name","value":"lateResponseRate30d"}},{"kind":"Field","name":{"kind":"Name","value":"averageTicketResponseTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}},{"kind":"Field","name":{"kind":"Name","value":"customerSatisfaction"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<CustomerService_PerformanceAggregateDataQueryQuery, CustomerService_PerformanceAggregateDataQueryQueryVariables>;
export const CustomerService_PerformanceBreakdownDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CustomerService_PerformanceBreakdownDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCountV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeksFromTheLatest"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"cs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"orders30d"}},{"kind":"Field","name":{"kind":"Name","value":"refund30d"}},{"kind":"Field","name":{"kind":"Name","value":"refundRatio30d"}},{"kind":"Field","name":{"kind":"Name","value":"orders93d"}},{"kind":"Field","name":{"kind":"Name","value":"refund93d"}},{"kind":"Field","name":{"kind":"Name","value":"refundRatio93d"}},{"kind":"Field","name":{"kind":"Name","value":"averageRating30d"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<CustomerService_PerformanceBreakdownDataQueryQuery, CustomerService_PerformanceBreakdownDataQueryQueryVariables>;
export const Product_PerformanceProductDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Product_PerformanceProductDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"activeProducts"}},{"kind":"Field","name":{"kind":"Name","value":"activeSkus"}},{"kind":"Field","name":{"kind":"Name","value":"skusPerProduct"}},{"kind":"Field","name":{"kind":"Name","value":"averagePrice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageShippingPrice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"priceToShippingRatio"}},{"kind":"Field","name":{"kind":"Name","value":"averageAdditonalImagesPerProduct"}},{"kind":"Field","name":{"kind":"Name","value":"productImpressions"}},{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Product_PerformanceProductDataQueryQuery, Product_PerformanceProductDataQueryQueryVariables>;
export const Rating_PerformanceAggregateDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_PerformanceAggregateDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"storeRatings"}},{"kind":"Field","name":{"kind":"Name","value":"averageStoreRating"}},{"kind":"Field","name":{"kind":"Name","value":"averageProductRating"}},{"kind":"Field","name":{"kind":"Name","value":"lowStoreRatingPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"productRatings"}},{"kind":"Field","name":{"kind":"Name","value":"lowProductRatingPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"average30dStoreRating"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_PerformanceAggregateDataQueryQuery, Rating_PerformanceAggregateDataQueryQueryVariables>;
export const Rating_PerformanceWeeklyStoreRatingDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_PerformanceWeeklyStoreRatingDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageStoreRating"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_PerformanceWeeklyStoreRatingDataQueryQuery, Rating_PerformanceWeeklyStoreRatingDataQueryQueryVariables>;
export const Rating_PerformanceWeeklyProductRatingDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_PerformanceWeeklyProductRatingDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"averageProductRating"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_PerformanceWeeklyProductRatingDataQueryQuery, Rating_PerformanceWeeklyProductRatingDataQueryQueryVariables>;
export const Rating_PerformanceStoreRatingBreakdownDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_PerformanceStoreRatingBreakdownDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"storeRatingsBreakdown"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"oneStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"twoStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"threeStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"fourStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"fiveStarRatings"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_PerformanceStoreRatingBreakdownDataQueryQuery, Rating_PerformanceStoreRatingBreakdownDataQueryQueryVariables>;
export const Rating_PerformanceProductRatingnBreakdownDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_PerformanceProductRatingnBreakdownDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productRatingsBreakdown"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"oneStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"twoStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"threeStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"fourStarRatings"}},{"kind":"Field","name":{"kind":"Name","value":"fiveStarRatings"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_PerformanceProductRatingnBreakdownDataQueryQuery, Rating_PerformanceProductRatingnBreakdownDataQueryQueryVariables>;
export const Rating_ProductRatingListingDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_ProductRatingListingDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"listingTab"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductRatingListingTab"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productRatingsCount"}},{"kind":"Field","name":{"kind":"Name","value":"productRatings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"listingTab"},"value":{"kind":"Variable","name":{"kind":"Name","value":"listingTab"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"average30dRating"}},{"kind":"Field","name":{"kind":"Name","value":"ratings"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_ProductRatingListingDataQueryQuery, Rating_ProductRatingListingDataQueryQueryVariables>;
export const Rating_StoreRatingListingDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Rating_StoreRatingListingDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"filterByStars"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeRatingsCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"filterByStars"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filterByStars"}}}]},{"kind":"Field","name":{"kind":"Name","value":"storeRatings"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"filterByStars"},"value":{"kind":"Variable","name":{"kind":"Name","value":"filterByStars"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderIds"}},{"kind":"Field","name":{"kind":"Name","value":"date"}},{"kind":"Field","name":{"kind":"Name","value":"rating"}},{"kind":"Field","name":{"kind":"Name","value":"comment"}},{"kind":"Field","name":{"kind":"Name","value":"refundReason"}}]}}]}}]}}]}}]} as unknown as DocumentNode<Rating_StoreRatingListingDataQueryQuery, Rating_StoreRatingListingDataQueryQueryVariables>;
export const Sales_PerformanceAggregateDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Sales_PerformanceAggregateDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}},{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeks"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sales"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productImpressions"}},{"kind":"Field","name":{"kind":"Name","value":"addToCart"}},{"kind":"Field","name":{"kind":"Name","value":"addToCartConversion"}},{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutConversion"}},{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Sales_PerformanceAggregateDataQueryQuery, Sales_PerformanceAggregateDataQueryQueryVariables>;
export const Sales_PerformanceBreakdownDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Sales_PerformanceBreakdownDataQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"primaryCurrency"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCountV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}]},{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"isEnabled"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"weekly"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"weeksFromTheLatest"},"value":{"kind":"Variable","name":{"kind":"Name","value":"weeks_from_the_latest"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"sales"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productImpressions"}},{"kind":"Field","name":{"kind":"Name","value":"addToCart"}},{"kind":"Field","name":{"kind":"Name","value":"addToCartConversion"}},{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"checkoutConversion"}},{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<Sales_PerformanceBreakdownDataQueryQuery, Sales_PerformanceBreakdownDataQueryQueryVariables>;
export const PerformanceOverviewPageInitialDataQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PerformanceOverviewPageInitialDataQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"misleadingProducts"},"name":{"kind":"Name","value":"merchantWarningCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"PRODUCT_IS_INAPPROPRIATE"}]}},{"kind":"Argument","name":{"kind":"Name","value":"isMisleading"},"value":{"kind":"BooleanValue","value":true}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"EnumValue","value":"AWAITING_MERCHANT"}}]},{"kind":"Field","alias":{"kind":"Name","value":"ipInfringementProducts"},"name":{"kind":"Name","value":"merchantWarningCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FINE_FOR_COUNTERFEIT_GOODS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"EnumValue","value":"AWAITING_MERCHANT"}}]},{"kind":"Field","alias":{"kind":"Name","value":"prohibitedProducts"},"name":{"kind":"Name","value":"merchantWarningCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"reasons"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"PRODUCT_IS_INAPPROPRIATE"},{"kind":"EnumValue","value":"CN_PROHIBITED_PRODUCTS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"EnumValue","value":"AWAITING_MERCHANT"}}]}]}},{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d/%Y","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"timezone"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"lateConfirmedFulfillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"averageFulfillmentTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"delivery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"timeToDoor"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"refunds"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"refundRate"}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"rating"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"averageProductRating"}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"cs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"lateResponseRate30d"}},{"kind":"Field","name":{"kind":"Name","value":"customerSatisfactionScore"}},{"kind":"Field","name":{"kind":"Name","value":"averageTicketResponseTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hours"}}]}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"iso8061"}},{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"iso8061"}},{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<PerformanceOverviewPageInitialDataQueryQuery, PerformanceOverviewPageInitialDataQueryQueryVariables>;
export const ProductsMetricsTableComponentQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductsMetricsTableComponentQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"state"}}]}}]}}]} as unknown as DocumentNode<ProductsMetricsTableComponentQueryQuery, ProductsMetricsTableComponentQueryQueryVariables>;
export const ProductsMetricsTableTableQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductsMetricsTableTableQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"query"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCountV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"EnumValue","value":"ACTIVE"}}]},{"kind":"Field","name":{"kind":"Name","value":"productsV2"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"query"},"value":{"kind":"Variable","name":{"kind":"Name","value":"query"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"order"},"value":{"kind":"EnumValue","value":"DESC"}},{"kind":"ObjectField","name":{"kind":"Name","value":"field"},"value":{"kind":"EnumValue","value":"SALES"}}]}},{"kind":"Argument","name":{"kind":"Name","value":"state"},"value":{"kind":"EnumValue","value":"ACTIVE"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"display"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totals"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"coreMetricsOnly"},"value":{"kind":"BooleanValue","value":true}},{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"display"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"impressions"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ProductsMetricsTableTableQueryQuery, ProductsMetricsTableTableQueryQueryVariables>;
export const TierPreviewBannerQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TierPreviewBannerQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"levelPreview"}}]}}]}}]}}]}}]} as unknown as DocumentNode<TierPreviewBannerQueryQuery, TierPreviewBannerQueryQueryVariables>;
export const UnderperformingProductsHeaderQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnderperformingProductsHeaderQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}},{"kind":"Field","name":{"kind":"Name","value":"badProductCount"}},{"kind":"Field","name":{"kind":"Name","value":"productWithOrdersCount"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"recentStats"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"monthlyUpdateStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}}]}}]}}]}}]}}]} as unknown as DocumentNode<UnderperformingProductsHeaderQueryQuery, UnderperformingProductsHeaderQueryQueryVariables>;
export const UnderperformingProductsPerformanceScaleQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnderperformingProductsPerformanceScaleQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}}]}}]}}]}}]}}]} as unknown as DocumentNode<UnderperformingProductsPerformanceScaleQueryQuery, UnderperformingProductsPerformanceScaleQueryQueryVariables>;
export const UnderperformingProductsTableQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UnderperformingProductsTableQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productQualityRefund"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"isBadByRefund"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productRating"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"isBadByRating"},"value":{"kind":"BooleanValue","value":true}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<UnderperformingProductsTableQueryQuery, UnderperformingProductsTableQueryQueryVariables>;
export const ProductCatalogProductStats_ProductChartDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductCatalogProductStats_ProductChart"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"coreMetricsOnly"},"value":{"kind":"BooleanValue","value":true}},{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orders"}},{"kind":"Field","name":{"kind":"Name","value":"impressions"}},{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"fullDateFormatted"},"name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%A %m/%d/%Y","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"fullDateFormatted"},"name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%A %m/%d/%Y","block":false}}]}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ProductCatalogProductStats_ProductChartQuery, ProductCatalogProductStats_ProductChartQueryVariables>;
export const StoreSalesStats_StoreSalesChartsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"StoreSalesStats_StoreSalesCharts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"storeStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totals"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"coreMetricsOnly"},"value":{"kind":"BooleanValue","value":true}},{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"impressions"}},{"kind":"Field","name":{"kind":"Name","value":"pageViews"}},{"kind":"Field","name":{"kind":"Name","value":"addToCarts"}},{"kind":"Field","name":{"kind":"Name","value":"orders"}}]}},{"kind":"Field","name":{"kind":"Name","value":"daily"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"coreMetricsOnly"},"value":{"kind":"BooleanValue","value":true}},{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"startDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"fullDateFormatted"},"name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%A %m/%d/%Y","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"inTimezone"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"identifier"},"value":{"kind":"StringValue","value":"America/Los_Angeles","block":false}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%m/%d","block":false}}]},{"kind":"Field","alias":{"kind":"Name","value":"fullDateFormatted"},"name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"%A %m/%d/%Y","block":false}}]}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"gmv"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}}]}},{"kind":"Field","name":{"kind":"Name","value":"impressions"}},{"kind":"Field","name":{"kind":"Name","value":"orders"}}]}}]}}]}}]}}]} as unknown as DocumentNode<StoreSalesStats_StoreSalesChartsQuery, StoreSalesStats_StoreSalesChartsQueryVariables>;
export const WssInsight_InfractionWindowDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WSSInsight_InfractionWindow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policyInfractionWindowStartDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"policyInfractionWindowEndDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentInfractionWindowStartDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentInfractionWindowEndDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}}]}}]}}]} as unknown as DocumentNode<WssInsight_InfractionWindowQuery, WssInsight_InfractionWindowQueryVariables>;
export const WssOrdersDeepDiveDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"WSSOrdersDeepDive"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"days"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalRatingsReceived"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentRateDenominator"}},{"kind":"Field","name":{"kind":"Name","value":"refundRateDenominator"}},{"kind":"Field","name":{"kind":"Name","value":"hasFulfillmentSpeedOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRateDenominator"}},{"kind":"Field","name":{"kind":"Name","value":"qualityRefundCount"}},{"kind":"Field","name":{"kind":"Name","value":"orderUnfulfilled"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderInvalidTracking"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}},{"kind":"Field","name":{"kind":"Name","value":"orderLogisticsRefund"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userRating"}},{"kind":"Field","name":{"kind":"Name","value":"orderFultillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"productQualityRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"seconds"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"days"}}]}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"productLogisticsRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"monthlyUpdateStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userRating"}},{"kind":"Field","name":{"kind":"Name","value":"orderFultillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"productQualityRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"seconds"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"days"}}]}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"productLogisticsRefundRate"}}]}},{"kind":"Field","name":{"kind":"Name","value":"recentStats"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"days"},"value":{"kind":"Variable","name":{"kind":"Name","value":"days"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userRating"}},{"kind":"Field","name":{"kind":"Name","value":"orderFultillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"productQualityRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"seconds"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"days"}}]}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"productLogisticsRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<WssOrdersDeepDiveQuery, WssOrdersDeepDiveQueryVariables>;
export const OrderMetricsDeepDive_UserRatingDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_UserRating"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortProductRatingField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isBadByRating"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productRating"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"productIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"isBadByRating"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isBadByRating"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"productName"}},{"kind":"Field","name":{"kind":"Name","value":"productImageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"receivedRatings"}},{"kind":"Field","name":{"kind":"Name","value":"averageRating"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_UserRatingQuery, OrderMetricsDeepDive_UserRatingQueryVariables>;
export const OrderMetricsDeepDive_OrderFulfillmentRateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_OrderFulfillmentRate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderTransactionDateField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"unfulfilledReasons"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WSSSUnfulfilledReasons"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderUnfulfilled"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"unfulfilledReasons"},"value":{"kind":"Variable","name":{"kind":"Name","value":"unfulfilledReasons"}}},{"kind":"Argument","name":{"kind":"Name","value":"destinations"},"value":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"productName"}},{"kind":"Field","name":{"kind":"Name","value":"productImageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"transactionDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"unfulfilledReason"}},{"kind":"Field","name":{"kind":"Name","value":"destination"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_OrderFulfillmentRateQuery, OrderMetricsDeepDive_OrderFulfillmentRateQueryVariables>;
export const OrderMetricsDeepDive_WssDestinationOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_WSSDestinationOptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pageType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WSSDeepDivePageType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"destinations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pageType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pageType"}}}]}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_WssDestinationOptionsQuery, OrderMetricsDeepDive_WssDestinationOptionsQueryVariables>;
export const OrderMetricsDeepDive_WssCarrierOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_WSSCarrierOptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"pageType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WSSDeepDivePageType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"carriers"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pageType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"pageType"}}}]}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_WssCarrierOptionsQuery, OrderMetricsDeepDive_WssCarrierOptionsQueryVariables>;
export const OrderMetricsDeepDive_WssUnfulfilledReasonOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_WSSUnfulfilledReasonOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unfulfilledReasons"}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_WssUnfulfilledReasonOptionsQuery, OrderMetricsDeepDive_WssUnfulfilledReasonOptionsQueryVariables>;
export const OrderMetricsDeepDive_WssLogisticsRefundReasonOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_WSSLogisticsRefundReasonOptions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"logisticsRefundReasons"}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_WssLogisticsRefundReasonOptionsQuery, OrderMetricsDeepDive_WssLogisticsRefundReasonOptionsQueryVariables>;
export const OrderMetricsDeepDive_WssQualityRefundReasonOptionsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_WSSQualityRefundReasonOptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"qualityRefundReasons"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"productId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}}]}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_WssQualityRefundReasonOptionsQuery, OrderMetricsDeepDive_WssQualityRefundReasonOptionsQueryVariables>;
export const OrderMetricsDeepDive_ProductQualityRefundDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_ProductQualityRefund"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortProductQualityRefundField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"isBadByRefund"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Boolean"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productQualityRefund"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"productIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"isBadByRefund"},"value":{"kind":"Variable","name":{"kind":"Name","value":"isBadByRefund"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"productName"}},{"kind":"Field","name":{"kind":"Name","value":"productImageUrl"}},{"kind":"Field","name":{"kind":"Name","value":"receivedOrders"}},{"kind":"Field","name":{"kind":"Name","value":"qualityRefundIssued"}},{"kind":"Field","name":{"kind":"Name","value":"qualityRefundRate"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_ProductQualityRefundQuery, OrderMetricsDeepDive_ProductQualityRefundQueryVariables>;
export const OrderMetricsDeepDive_OrderQualityRefundDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_OrderQualityRefund"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderTransactionDateField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refundReasons"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WSSQualityRefundReason"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderQualityRefund"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"productId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}},{"kind":"Argument","name":{"kind":"Name","value":"refundReasons"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refundReasons"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"transactionDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"carrier"}},{"kind":"Field","name":{"kind":"Name","value":"refundReason"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_OrderQualityRefundQuery, OrderMetricsDeepDive_OrderQualityRefundQueryVariables>;
export const OrderMetricsDeepDive_QualityRefundBreakdownDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_QualityRefundBreakdown"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"qualityRefundBreakdown"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"productId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"reason"}},{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_QualityRefundBreakdownQuery, OrderMetricsDeepDive_QualityRefundBreakdownQueryVariables>;
export const OrderMetricsDeepDive_ConfirmedFulfillmentSpeedDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_ConfirmedFulfillmentSpeed"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderFulfillmentSpeed"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderFulfillmentSpeed"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"destinations"},"value":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}}},{"kind":"Argument","name":{"kind":"Name","value":"carriers"},"value":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"transactionDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"trackingId"}},{"kind":"Field","name":{"kind":"Name","value":"carrier"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}},{"kind":"Field","name":{"kind":"Name","value":"destination"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_ConfirmedFulfillmentSpeedQuery, OrderMetricsDeepDive_ConfirmedFulfillmentSpeedQueryVariables>;
export const OrderMetricsDeepDive_ValidTrackingRateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_ValidTrackingRate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderTransactionDateField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"destinationsInFulfillment"}},{"kind":"Field","name":{"kind":"Name","value":"carriersInFulfillment"}},{"kind":"Field","name":{"kind":"Name","value":"orderInvalidTracking"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"destinations"},"value":{"kind":"Variable","name":{"kind":"Name","value":"destinations"}}},{"kind":"Argument","name":{"kind":"Name","value":"carriers"},"value":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"transactionDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"carrier"}},{"kind":"Field","name":{"kind":"Name","value":"destination"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_ValidTrackingRateQuery, OrderMetricsDeepDive_ValidTrackingRateQueryVariables>;
export const OrderMetricsDeepDive_LogisticsRefundRateDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"OrderMetricsDeepDive_LogisticsRefundRate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortOrderTransactionDateField"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"SortByOrder"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"refundReasons"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"WSSLogisticsRefundReason"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deepDive"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderLogisticsRefund"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortField"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortField"}}},{"kind":"Argument","name":{"kind":"Name","value":"sortOrder"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sortOrder"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"carriers"},"value":{"kind":"Variable","name":{"kind":"Name","value":"carriers"}}},{"kind":"Argument","name":{"kind":"Name","value":"refundReasons"},"value":{"kind":"Variable","name":{"kind":"Name","value":"refundReasons"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"totalCount"}},{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"orderId"}},{"kind":"Field","name":{"kind":"Name","value":"transactionDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"carrier"}},{"kind":"Field","name":{"kind":"Name","value":"refundReason"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<OrderMetricsDeepDive_LogisticsRefundRateQuery, OrderMetricsDeepDive_LogisticsRefundRateQueryVariables>;
export const MerchantScore_ThingsToWatchDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MerchantScore_ThingsToWatch"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"thingsToWatchBoard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"dataSlice"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"metricType"}},{"kind":"Field","name":{"kind":"Name","value":"metricTrend"}},{"kind":"Field","name":{"kind":"Name","value":"metricValue"}},{"kind":"Field","name":{"kind":"Name","value":"recordTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MerchantScore_ThingsToWatchQuery, MerchantScore_ThingsToWatchQueryVariables>;
export const MerchantScore_MerchantScoreSectionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MerchantScore_MerchantScoreSection"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"wishSellerStandard"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"prevLevel"}},{"kind":"Field","name":{"kind":"Name","value":"level"}},{"kind":"Field","name":{"kind":"Name","value":"rawLevel"}},{"kind":"Field","name":{"kind":"Name","value":"layer1Level"}},{"kind":"Field","name":{"kind":"Name","value":"isInactiveToBan"}},{"kind":"Field","name":{"kind":"Name","value":"lastTierUpdateDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"nextMonthlyTierUpdateDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endDateForLastMonthlyUpdateCalcWindow"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"policyInfractionWindowStartDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"policyInfractionWindowEndDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentInfractionWindowStartDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentInfractionWindowEndDate"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"stats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userRating"}},{"kind":"Field","name":{"kind":"Name","value":"orderFultillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"productQualityRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"productLogisticsRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}},{"kind":"Field","name":{"kind":"Name","value":"maturedOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"ninetyDayOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"lastUpdatedStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mmddyyyy"}}]}},{"kind":"Field","name":{"kind":"Name","value":"monthlyUpdateStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userRating"}},{"kind":"Field","name":{"kind":"Name","value":"orderFultillmentRate"}},{"kind":"Field","name":{"kind":"Name","value":"validTrackingRate"}},{"kind":"Field","name":{"kind":"Name","value":"productQualityRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"productLogisticsRefundRate"}},{"kind":"Field","name":{"kind":"Name","value":"badProductRate"}},{"kind":"Field","name":{"kind":"Name","value":"fulfillmentSpeed"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"days"}},{"kind":"Field","name":{"kind":"Name","value":"hours"}},{"kind":"Field","name":{"kind":"Name","value":"minutes"}},{"kind":"Field","name":{"kind":"Name","value":"seconds"}}]}},{"kind":"Field","name":{"kind":"Name","value":"maturedOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"ninetyDayOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"complianceUpdateStats"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"misleadingTrackingCount"}},{"kind":"Field","name":{"kind":"Name","value":"prohibitedProductCount"}},{"kind":"Field","name":{"kind":"Name","value":"misleadingListingCount"}},{"kind":"Field","name":{"kind":"Name","value":"orderCancellationCount"}},{"kind":"Field","name":{"kind":"Name","value":"unfulfilledOrderCount"}},{"kind":"Field","name":{"kind":"Name","value":"lateConfirmedFulfillmentCount"}},{"kind":"Field","name":{"kind":"Name","value":"date"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MerchantScore_MerchantScoreSectionQuery, MerchantScore_MerchantScoreSectionQueryVariables>;
export const AddEprMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AddEprMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateUinInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createUin"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AddEprMutationMutation, AddEprMutationMutationVariables>;
export const EditEprMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"EditEprMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpdateUinInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"updateUin"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<EditEprMutationMutation, EditEprMutationMutationVariables>;
export const DeleteEprMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteEprMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DeleteUinInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"deleteUin"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<DeleteEprMutationMutation, DeleteEprMutationMutationVariables>;
export const EprNonCompliantSummaryQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EprNonCompliantSummaryQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eprNonCompliantSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"summaryRecords"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"eprCategoryName"}},{"kind":"Field","name":{"kind":"Name","value":"nonCompliantProductCount"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<EprNonCompliantSummaryQueryQuery, EprNonCompliantSummaryQueryQueryVariables>;
export const EprNonCompliantCountriesAvailableQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EprNonCompliantCountriesAvailableQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eprNonCompliantSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"summaryRecords"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<EprNonCompliantCountriesAvailableQueryQuery, EprNonCompliantCountriesAvailableQueryQueryVariables>;
export const EprNonCompliantProductsQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EprNonCompliantProductsQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CountryCode"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eprCategories"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eprNonCompliantSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productRecordTotal"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"countryCode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}}},{"kind":"Argument","name":{"kind":"Name","value":"eprCategories"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eprCategories"}}},{"kind":"Argument","name":{"kind":"Name","value":"productId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}}]},{"kind":"Field","name":{"kind":"Name","value":"productRecords"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"countryCode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}}},{"kind":"Argument","name":{"kind":"Name","value":"eprCategories"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eprCategories"}}},{"kind":"Argument","name":{"kind":"Name","value":"productId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productId"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"taxonomyCategoryNames"}},{"kind":"Field","name":{"kind":"Name","value":"eprCategoryNames"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<EprNonCompliantProductsQueryQuery, EprNonCompliantProductsQueryQueryVariables>;
export const ExtendedProducerResponsibilityPageQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ExtendedProducerResponsibilityPageQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CountryCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"countryCode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"hasAcceptedTos"}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"eprId"},"name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"category"}},{"kind":"Field","name":{"kind":"Name","value":"categoryName"}},{"kind":"Field","name":{"kind":"Name","value":"uin"}},{"kind":"Field","name":{"kind":"Name","value":"responsibleEntityName"}},{"kind":"Field","name":{"kind":"Name","value":"status"}},{"kind":"Field","name":{"kind":"Name","value":"inScopePidCount"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<ExtendedProducerResponsibilityPageQueryQuery, ExtendedProducerResponsibilityPageQueryQueryVariables>;
export const ProductComplianceCenterQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ProductComplianceCenterQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"productsWithEuResponsiblePerson"},"name":{"kind":"Name","value":"linkCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categories"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"TOYS"},{"kind":"EnumValue","value":"ELECTRICAL_PRODUCTS"},{"kind":"EnumValue","value":"PPE"},{"kind":"EnumValue","value":"ELECTRONICS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"euComplianceCategories"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FOOD"},{"kind":"EnumValue","value":"EEE"},{"kind":"EnumValue","value":"ENVIRONMENT"},{"kind":"EnumValue","value":"OTHER"},{"kind":"EnumValue","value":"CHEMICAL"},{"kind":"EnumValue","value":"COSMETICS"},{"kind":"EnumValue","value":"TOYS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"HAS_RP"}]}},{"kind":"Argument","name":{"kind":"Name","value":"complianceTypes"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"EU_COMPLIANCE"}]}}]},{"kind":"Field","alias":{"kind":"Name","value":"productsWithoutEuResponsiblePerson"},"name":{"kind":"Name","value":"linkCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"categories"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"TOYS"},{"kind":"EnumValue","value":"ELECTRICAL_PRODUCTS"},{"kind":"EnumValue","value":"PPE"},{"kind":"EnumValue","value":"ELECTRONICS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"euComplianceCategories"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"FOOD"},{"kind":"EnumValue","value":"EEE"},{"kind":"EnumValue","value":"ENVIRONMENT"},{"kind":"EnumValue","value":"OTHER"},{"kind":"EnumValue","value":"CHEMICAL"},{"kind":"EnumValue","value":"COSMETICS"},{"kind":"EnumValue","value":"TOYS"}]}},{"kind":"Argument","name":{"kind":"Name","value":"states"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"NO_RP"}]}},{"kind":"Argument","name":{"kind":"Name","value":"complianceTypes"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"EU_COMPLIANCE"}]}}]},{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"categoriesWithEpr"}},{"kind":"Field","name":{"kind":"Name","value":"categoriesWithoutEpr"}},{"kind":"Field","name":{"kind":"Name","value":"hasAcceptedTos"}}]}},{"kind":"Field","name":{"kind":"Name","value":"eprNonCompliantSummary"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"summaryRecords"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"nonCompliantProductCount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"euComplianceInScope"}}]}}]}}]}}]} as unknown as DocumentNode<ProductComplianceCenterQueryQuery, ProductComplianceCenterQueryQueryVariables>;
export const TosModalQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"TosModalQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CountryCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"countryCode"},"value":{"kind":"Variable","name":{"kind":"Name","value":"countryCode"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tos"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<TosModalQueryQuery, TosModalQueryQueryVariables>;
export const AcceptTosMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"AcceptTosMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"AcceptTosInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"policy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCompliance"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extendedProducerResponsibility"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"acceptTos"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<AcceptTosMutationMutation, AcceptTosMutationMutationVariables>;
export const Csv_GetTaxonomyTreeCsvRowsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"CSV_GetTaxonomyTreeCsvRows"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomy"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"taxonomyTreeCsv"}}]}}]}}]} as unknown as DocumentNode<Csv_GetTaxonomyTreeCsvRowsQuery, Csv_GetTaxonomyTreeCsvRowsQueryVariables>;
export const Csv_UpsertProductCsvMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CSV_UpsertProductCsvMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UpsertProductsFromCSVFileInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"upsertProductCsvFile"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"jobId"}}]}}]}}]}}]} as unknown as DocumentNode<Csv_UpsertProductCsvMutationMutation, Csv_UpsertProductCsvMutationMutationVariables>;
export const DownloadProductCatalogDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"downloadProductCatalog"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"DownloadAllProductsInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"downloadAllProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"errorMessage"}},{"kind":"Field","name":{"kind":"Name","value":"ok"}}]}}]}}]}}]} as unknown as DocumentNode<DownloadProductCatalogMutation, DownloadProductCatalogMutationVariables>;
export const DownloadAllHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadAllHeaders"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"subcategoryIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvAllHeaderNames"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"subcategoryIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"subcategoryIds"}}}]}]}}]}}]} as unknown as DocumentNode<DownloadAllHeadersQuery, DownloadAllHeadersQueryVariables>;
export const DownloadEditVariationHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadEditVariationHeaders"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"subcategoryIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvEditVariationsHeaderNames"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"subcategoryIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"subcategoryIds"}}}]}]}}]}}]} as unknown as DocumentNode<DownloadEditVariationHeadersQuery, DownloadEditVariationHeadersQueryVariables>;
export const DownloadShippingHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadShippingHeaders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvShippingHeaderNames"}}]}}]}}]} as unknown as DocumentNode<DownloadShippingHeadersQuery, DownloadShippingHeadersQueryVariables>;
export const DownloadPriceInventoryHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadPriceInventoryHeaders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvPriceInventoryHeaderNames"}}]}}]}}]} as unknown as DocumentNode<DownloadPriceInventoryHeadersQuery, DownloadPriceInventoryHeadersQueryVariables>;
export const DownloadTitleImageDescHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadTitleImageDescHeaders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvTitleImagesDescriptionHeaderNames"}}]}}]}}]} as unknown as DocumentNode<DownloadTitleImageDescHeadersQuery, DownloadTitleImageDescHeadersQueryVariables>;
export const DownloadEnableDisableHeadersDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"DownloadEnableDisableHeaders"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"productCatalog"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"csvEnableDisableHeaderNames"}}]}}]}}]} as unknown as DocumentNode<DownloadEnableDisableHeadersQuery, DownloadEnableDisableHeadersQueryVariables>;
export const CreateProductDownloadsJobForMerchantPromotionsMutationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"CreateProductDownloadsJobForMerchantPromotionsMutation"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateProductsDownloadJobInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"createProductsDownloadJob"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}},{"kind":"Field","name":{"kind":"Name","value":"jobId"}}]}}]}}]}}]} as unknown as DocumentNode<CreateProductDownloadsJobForMerchantPromotionsMutationMutation, CreateProductDownloadsJobForMerchantPromotionsMutationMutationVariables>;
export const EligibleCountriesQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EligibleCountriesQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"shippingSettings"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}}]}}]}}]} as unknown as DocumentNode<EligibleCountriesQueryQuery, EligibleCountriesQueryQueryVariables>;
export const MfpTools_GetEligibleProductsGenericDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MfpTools_GetEligibleProductsGeneric"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPCampaignPromotionType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"eligibleProducts"},"name":{"kind":"Name","value":"genericEligibleProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchQuery"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}}},{"kind":"Argument","name":{"kind":"Name","value":"promotionType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"eventId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}}},{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}}]}]}}]}}]} as unknown as DocumentNode<MfpTools_GetEligibleProductsGenericQuery, MfpTools_GetEligibleProductsGenericQueryVariables>;
export const MfpTools_GetEligibleProductsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MfpTools_GetEligibleProducts"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPCampaignPromotionType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eligibleProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchQuery"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}}},{"kind":"Argument","name":{"kind":"Name","value":"promotionType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"eventId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"flatRateShippingCountryCandidates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"l1Category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MfpTools_GetEligibleProductsQuery, MfpTools_GetEligibleProductsQueryVariables>;
export const MfpTools_GetEligibleProductsCountDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MfpTools_GetEligibleProductsCount"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPProductSearchType"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPCampaignPromotionType"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"eligibleProductsCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchType"}}},{"kind":"Argument","name":{"kind":"Name","value":"searchQuery"},"value":{"kind":"Variable","name":{"kind":"Name","value":"searchQuery"}}},{"kind":"Argument","name":{"kind":"Name","value":"promotionType"},"value":{"kind":"Variable","name":{"kind":"Name","value":"promotionType"}}},{"kind":"Argument","name":{"kind":"Name","value":"eventId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"eventId"}}}]}]}}]}}]} as unknown as DocumentNode<MfpTools_GetEligibleProductsCountQuery, MfpTools_GetEligibleProductsCountQueryVariables>;
export const GetWhitelistProducts_ProductWhitelistingSectionDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GetWhitelistProducts_ProductWhitelistingSection"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ObjectIdType"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"activeWhitelistProducts"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"productIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"flatRateShippingCountryCandidates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"l1Category"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"startTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY-MM-dd h:mm a z","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"YYYY-MM-dd h:mm a z","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"activeWhitelistProductsCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"productIds"},"value":{"kind":"Variable","name":{"kind":"Name","value":"productIds"}}}]}]}}]}}]} as unknown as DocumentNode<GetWhitelistProducts_ProductWhitelistingSectionQuery, GetWhitelistProducts_ProductWhitelistingSectionQueryVariables>;
export const MfpTools_GetPrefillCampaignQueryDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MfpTools_GetPrefillCampaignQuery"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"PaymentCurrencyCode"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"campaigns"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"searchType"},"value":{"kind":"EnumValue","value":"CAMPAIGN_ID"}},{"kind":"Argument","name":{"kind":"Name","value":"searchQuery"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"IntValue","value":"0"}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"IntValue","value":"1"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"state"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"countries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"promotionType"}},{"kind":"Field","name":{"kind":"Name","value":"unqualifiedProductVariations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"variation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"flashSaleDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"maxQuantity"}},{"kind":"Field","name":{"kind":"Name","value":"discountPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"flatRateShippingCountryCandidates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"discountDetails"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"maxQuantity"}},{"kind":"Field","name":{"kind":"Name","value":"discountPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"product"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"sales"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}},{"kind":"Field","name":{"kind":"Name","value":"flatRateShippingCountryCandidates"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"shipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"defaultShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"warehouseCountryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"countryShipping"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"country"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"categories"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"variations"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"variation"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"color"}},{"kind":"Field","name":{"kind":"Name","value":"size"}},{"kind":"Field","name":{"kind":"Name","value":"productId"}},{"kind":"Field","name":{"kind":"Name","value":"price"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}},{"kind":"Field","name":{"kind":"Name","value":"currencyCode"}},{"kind":"Field","name":{"kind":"Name","value":"display"}},{"kind":"Field","name":{"kind":"Name","value":"convertedTo"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"currency"},"value":{"kind":"Variable","name":{"kind":"Name","value":"merchantCurrency"}}},{"kind":"Argument","name":{"kind":"Name","value":"rate"},"value":{"kind":"EnumValue","value":"WISH_LATEST"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"amount"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"inventory"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"count"}}]}}]}}]}}]}}]}}]}}]} as unknown as DocumentNode<MfpTools_GetPrefillCampaignQueryQuery, MfpTools_GetPrefillCampaignQueryQueryVariables>;
export const MfpTools_GetCampaignEventsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"MfpTools_GetCampaignEvents"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"offset"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"limit"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"sort"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"CampaignEventSort"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"startAtMin"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"DatetimeInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"submitAtMin"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"DatetimeInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"promotionTypes"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"MFPCampaignPromotionType"}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"mfp"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"campaignEvents"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"offset"},"value":{"kind":"Variable","name":{"kind":"Name","value":"offset"}}},{"kind":"Argument","name":{"kind":"Name","value":"limit"},"value":{"kind":"Variable","name":{"kind":"Name","value":"limit"}}},{"kind":"Argument","name":{"kind":"Name","value":"sort"},"value":{"kind":"Variable","name":{"kind":"Name","value":"sort"}}},{"kind":"Argument","name":{"kind":"Name","value":"startAtMin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"startAtMin"}}},{"kind":"Argument","name":{"kind":"Name","value":"submitAtMin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"submitAtMin"}}},{"kind":"Argument","name":{"kind":"Name","value":"promotionTypes"},"value":{"kind":"Variable","name":{"kind":"Name","value":"promotionTypes"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"minDiscountPercentage"}},{"kind":"Field","name":{"kind":"Name","value":"promotionType"}},{"kind":"Field","name":{"kind":"Name","value":"startTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MMM d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"endTime"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MMM d","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"submissionDeadline"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"formatted"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"fmt"},"value":{"kind":"StringValue","value":"MMM d, YYYY","block":false}}]},{"kind":"Field","name":{"kind":"Name","value":"unix"}}]}},{"kind":"Field","name":{"kind":"Name","value":"productCategoryRestrictions"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}}]}},{"kind":"Field","name":{"kind":"Name","value":"countries"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"code"}}]}}]}},{"kind":"Field","name":{"kind":"Name","value":"campaignEventsCount"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"startAtMin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"startAtMin"}}},{"kind":"Argument","name":{"kind":"Name","value":"submitAtMin"},"value":{"kind":"Variable","name":{"kind":"Name","value":"submitAtMin"}}},{"kind":"Argument","name":{"kind":"Name","value":"promotionTypes"},"value":{"kind":"Variable","name":{"kind":"Name","value":"promotionTypes"}}}]}]}}]}}]} as unknown as DocumentNode<MfpTools_GetCampaignEventsQuery, MfpTools_GetCampaignEventsQueryVariables>;
export const SellerIdentity_UploadBankDocumentsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SellerIdentity_UploadBankDocuments"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"input"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"UploadBankAccountDocumentInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"currentMerchant"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"bankAccountVerification"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"uploadDocument"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"Variable","name":{"kind":"Name","value":"input"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"ok"}},{"kind":"Field","name":{"kind":"Name","value":"message"}}]}}]}}]}}]}}]} as unknown as DocumentNode<SellerIdentity_UploadBankDocumentsMutation, SellerIdentity_UploadBankDocumentsMutationVariables>;
export const AdminCheckDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AdminCheck"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"su"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"currentUser"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"isAdmin"}}]}}]}}]} as unknown as DocumentNode<AdminCheckQuery, AdminCheckQueryVariables>;